{"version":3,"sources":["components/common/Responsive.js","lib/styles/palette.js","components/common/Button.js","components/common/Header.js","lib/api/client.js","lib/api/auth.js","modules/loading.js","lib/createRequestSaga.js","modules/user.js","container/common/HeaderContainer.js","components/common/SubInfo.js","components/common/Tags.js","components/post/PostList.js","modules/posts.js","lib/api/posts.js","container/posts/PostListContainer.js","components/post/Pagination.js","container/posts/PaginationContainer.js","pages/PostListPage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","container/auth/RegisterForm.js","pages/RegisterPage.js","container/auth/LoginForm.js","pages/LoginPage.js","modules/post.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","modules/write.js","container/post/PostViewerContainer.js","pages/PostPage.js","components/write/Editor.js","container/write/EditorContainer.js","components/write/TagBox.js","container/write/TagBoxContainer.js","components/write/WriteActionButton.js","container/write/WriteActionButtonsContainer.js","pages/WritePage.js","modules/game.js","components/minesweeper/GameStart.js","container/minesweeper/GameStartContainer.js","components/minesweeper/GameBlock.js","container/minesweeper/GameBlockContainer.js","components/minesweeper/AskRestartModal.js","components/minesweeper/GameBoard.js","container/minesweeper/GameBoardContainer.js","components/minesweeper/Game.js","pages/GamePage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["StyledResponsive","styled","div","Responsive","children","rest","palette","gray","cyan","buttonStyle","css","props","fullWidth","marginTop","StyledButton","button","StyledLink","Link","Button","to","StyledHeader","Wrapper","Spacer","UserInfo","Header","user","onLogout","className","username","onClick","client","axios","create","logout","post","startLoading","createAction","requestType","finishLoading","handleActions","state","action","payload","createRequsetActionType","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","HeaderContainer","useSelector","dispatch","useDispatch","StyledSubInfo","hasMarginTop","SubInfo","publishedDate","Date","toLocaleDateString","StyledTags","Tags","tags","map","tag","key","StyledPostList","GameStartButtonWrapper","StyledPostItem","PostItem","_id","title","body","PostList","posts","loading","showStartButton","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","page","listPostsSaga","queryString","qs","stringify","lastPage","parseInt","headers","withRouter","match","location","useEffect","params","parse","search","ignoreQueryPrefix","StyledPagination","PageNumber","buildLink","query","Pagination","disabled","undefined","PostListPage","StyledAuthTemplate","WhiteBox","AuthTemplate","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","value","initializeForm","register","password","login","registerSaga","loginSaga","initialState","passwordConfirm","auth","authError","produce","draft","StyledAuthForm","StyledInput","input","Footer","textMap","ErrorMessage","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","history","useState","setError","status","push","setItem","JSON","target","preventDefault","includes","RegisterPage","LoginPage","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","readPost","id","unloadPost","readPostSaga","StyledPostViewer","PostHead","PostContent","PostViewer","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","StyledAskModal","AskModal","visible","description","confirmText","cancelText","clear","onConfirm","onCancel","AskRemoveModal","StyledPostActionButtons","ActionButton","PostActionButtons","onEdit","onRemove","modal","setModal","writeSaga","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","setOriginalPost","writePost","updatePost","writePostSaga","updatePostSaga","patch","postError","originalPostId","postId","ownPost","a","delete","PostPage","StyledEditor","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","useRef","quillIstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","EditorContainer","write","useCallback","StyledTagBox","TagForm","Tag","StyledTagList","TagItem","React","memo","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","newTags","filter","t","trim","TagBoxContainer","StyledWriteActionButtons","WriteActionButtons","onPublished","isEdit","WriteActionButton","goBack","WritePage","initializeGame","setLevel","level","startGame","ground","size","width","mineNum","openBlock","setFlag","finishGame","isStart","isFinish","isClear","openBlockNum","flagSet","isOpen","space","val","GameStart","onStart","onSetLevel","GameStartContainer","game","i","idx","Math","floor","random","range","nearBlock","GameBlock","onBlockOpen","onSetFlag","classNames","onMouseDown","onContextMenu","src","alt","visited","Array","fill","queue","zeroBlock","length","shift","AskRestartModal","finishText","GameBoard","onRestart","divWidth","Board","BoardRestart","GameBoardContainer","Game","GamePage","App","component","path","exact","Boolean","window","hostname","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kkBAGA,IAAMA,EAAmBC,IAAOC,IAAV,KAoBPC,EALI,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAaC,EAAU,4BAExC,OAAO,kBAACL,EAAqBK,EAAOD,ICOzBE,EA3BC,CACZC,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,KAAM,CACF,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,6lCClBR,IAAMC,EAAcC,YAAH,IAUCJ,EAAQC,KAAK,GAETD,EAAQC,KAAK,IAE7B,SAAAI,GAAK,OACPA,EAAMC,WACNF,YADA,QAQE,SAAAC,GAAK,OACPA,EAAMH,MACNE,YADA,IAEsBJ,EAAQE,KAAK,GAETF,EAAQE,KAAK,OAIrC,SAAAG,GAAK,OACPA,EAAME,WACNH,YADA,IAEsBC,EAAME,aAIVP,EAAQC,KAAK,GAClBD,EAAQC,KAAK,IAKxBO,EAAeb,IAAOc,OAAV,IACZN,GAGAO,EAAaf,YAAOgB,IAAPhB,CAAH,IACVQ,GAWSS,EARA,SAAAP,GACX,OAAOA,EAAMQ,GACT,kBAACH,EAAD,iBAAgBL,EAAhB,CAAuBH,KAAMG,EAAMH,KAAO,EAAI,KAE9C,kBAACM,EAAiBH,I,6uBCxD1B,I,IAAMS,EAAenB,IAAOC,IAAV,KAQZmB,EAAUpB,YAAOE,EAAPF,CAAH,KAiBPqB,EAASrB,IAAOC,IAAV,KAINqB,EAAWtB,IAAOC,IAAV,KA8BCsB,EAzBA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SACnB,OACI,oCACI,kBAACN,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAMF,GAAI,IAAKQ,UAAW,QAA1B,eAGCF,EACG,yBAAKE,UAAW,SACZ,kBAACJ,EAAD,KAAWE,EAAKG,UAChB,kBAAC,EAAD,CAAQC,QAASH,GAAjB,6BAGJ,yBAAKC,UAAW,SACZ,kBAAC,EAAD,CAAQR,GAAI,UAAZ,yBAKhB,kBAACG,EAAD,Q,0ECxDGQ,E,OAFAC,EAAMC,SCaRC,EAAS,kBAClBH,EAAOI,KAAK,qBCTHC,EAAeC,YALN,yBAOlB,SAAAC,GAAW,OAAIA,KAGNC,EAAgBF,YATN,0BAWnB,SAAAC,GAAW,OAAIA,KAKJE,eAAa,mBAjBN,yBAmBG,SAACC,EAAOC,GAAR,sBACVD,EADU,eAEZC,EAAOC,SAAU,OAJF,cAhBL,0BAsBG,SAACF,EAAOC,GAAR,sBACXD,EADW,eAEbC,EAAOC,SAAU,OARF,GAFP,ICdRC,EAA0B,SAAAC,GAGnC,MAAO,CAACA,EAFK,UAAMA,EAAN,YACA,UAAMA,EAAN,cAIF,SAASC,GAAkBD,EAAME,GAC5C,IAAMC,EAAO,UAAMH,EAAN,YACPI,EAAO,UAAMJ,EAAN,YAEb,iBAAO,WAAWH,GAAX,uEACH,OADG,SACGQ,YAAId,EAAaS,IADpB,OAGkB,OAHlB,kBAGwBM,YAAKJ,EAASL,EAAOC,SAH7C,OAIC,OADMS,EAHP,gBAIOF,YAAI,CACNL,KAAMG,EACNL,QAASS,EAASC,KAClBC,KAAMF,IAPX,+BAUC,OAVD,oCAUOF,YAAI,CACNL,KAAMI,EACNN,QAAQ,EAAD,GACPY,OAAO,IAbZ,QAgBH,OAhBG,UAgBGL,YAAIX,EAAcM,IAhBrB,yD,gBCWDW,I,YASOC,I,GA1B6Bb,EAAwB,c,qBAA/Dc,G,MAAOC,G,MAAeC,G,MAGhBC,GAAcxB,YALL,sBAKiC,SAAAX,GAAI,OAAIA,KAClDoC,GAAQzB,YAAaqB,IACrBxB,GAASG,YAJP,eAMT0B,GAAYjB,GAAkBY,IHHf,kBACjB3B,EAAOiC,IAAI,sBGIf,SAASC,KACL,IACIC,aAAaC,WAAW,QAC1B,MAAOC,GACLC,QAAQC,IAAI,gCAIpB,SAAUd,KAAV,iEAEQ,OAFR,kBAEcL,YAAKoB,GAFnB,OAGQL,aAAaC,WAAW,QAHhC,+CAKQE,QAAQC,IAAR,MALR,qDASO,SAAUb,KAAV,iEACH,OADG,SACGe,YAAWd,GAAOK,IADrB,OAEH,OAFG,SAEGS,YAAWZ,GAAeK,IAF7B,OAGH,OAHG,SAGGO,YA5BK,cA4BchB,IAHtB,wCAMP,IAKehB,gBAAa,iBAAC,EAvCP,sBAyCG,SAACC,EAAD,OAAkBf,EAAlB,EAASiB,QAAT,sBACVF,EADU,CAEbf,YAJgB,YAAC,EAMpBiC,IAAgB,SAAClB,EAAD,OAAkBf,EAAlB,EAASiB,QAAT,sBACVF,EADU,CAEbf,YARgB,YAAC,EAUpBkC,IAAgB,SAACnB,EAAD,OAAkBc,EAAlB,EAASZ,QAAT,sBACVF,EADU,CAEbgC,WAAYlB,OAZI,YAAC,EApCd,eAkDG,SAAAd,GAAK,sBACTA,EADS,CAEZf,KAAM,UAhBW,GALP,CACjBA,KAAM,KACN+C,WAAY,OC3BDC,GATS,WAAO,IACpBhD,EAAQiD,aAAY,kBAAa,CAACjD,KAAd,EAAEA,KAAuBA,SAA7CA,KACDkD,EAAWC,cAIjB,OAAO,kBAAC,EAAD,CAAQnD,KAAMA,EAAMC,SAHV,WACbiD,EAAS1C,U,8kBCJjB,IAAM4C,GAAgB5E,IAAOC,IAAV,MACb,SAAAS,GAAK,OACHA,EAAMmE,cACNpE,YADA,QAKKJ,EAAQC,KAAK,GAGTD,EAAQC,KAAK,IAmBfwE,GAbC,SAAC,GAA6C,IAA5CnD,EAA2C,EAA3CA,SAAUoD,EAAiC,EAAjCA,cAAeF,EAAkB,EAAlBA,aACvC,OACI,kBAACD,GAAD,CAAeC,aAAcA,GACzB,8BACI,2BACI,kBAAC,IAAD,CAAM3D,GAAE,YAAOS,IAAaA,IAEhC,8BAAO,IAAIqD,KAAKD,GAAeE,yB,8RCvB/C,IAAMC,GAAalF,IAAOC,IAAV,KAICI,EAAQC,KAAK,GAITD,EAAQE,KAAK,IAiBnB4E,GAZF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACX,OACI,kBAACF,GAAD,KACKE,EAAKC,KAAI,SAAAC,GAAG,OACT,kBAAC,IAAD,CAAM5D,UAAW,MAAOR,GAAE,gBAAWoE,GAAOC,IAAKD,GAAjD,IACMA,Q,opBCdtB,I,GAAME,GAAiBxF,YAAOE,EAAPF,CAAH,MAIdyF,GAAyBzF,IAAOC,IAAV,MAMtByF,GAAiB1F,IAAOC,IAAV,KAMYI,EAAQC,KAAK,GAQxBD,EAAQC,KAAK,IAQ5BqF,GAAW,SAAC,GAAY,IAAX1D,EAAU,EAAVA,KACR2D,EAA+C3D,EAA/C2D,IAAKC,EAA0C5D,EAA1C4D,MAAOC,EAAmC7D,EAAnC6D,KAAMtE,EAA6BS,EAA7BT,KAAMuD,EAAuB9C,EAAvB8C,cAAeK,EAAQnD,EAARmD,KAE9C,OACI,kBAACM,GAAD,KACI,4BACI,kBAAC,IAAD,CAAMxE,GAAE,YAAOM,EAAKG,SAAZ,YAAwBiE,IAC3BC,IAGT,kBAAC,GAAD,CACIlE,SAAUH,EAAKG,SACfoD,cAAeA,IAEnB,kBAAC,GAAD,CACIK,KAAMA,IAEV,2BAAIU,KA8BDC,GAzBE,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,MAAO3C,EAAqC,EAArCA,MAAO4C,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBACtC,OAAI7C,EACO,kBAACmC,GAAD,iEAIP,kBAACA,GAAD,KACI,kBAACC,GAAD,KACKS,GACG,kBAAC,EAAD,CAAQhF,GAAI,QAASX,MAAI,GAAzB,+BAKR,8BACM0F,GAAWD,GACTA,EAAMX,KAAI,SAAApD,GAAI,OACV,kBAAC,GAAD,CAAUA,KAAMA,EAAMsD,IAAKtD,EAAK2D,Y,YC5DvCO,I,GAXbzD,EAAwB,oB,qBAHxB0D,G,MACAC,G,MACAC,G,MAGSC,GAAYpE,YAAaiE,IAAY,kBAA4B,CACtEI,KAD0C,EAAEA,KAE5C7E,SAF0C,EAAQA,SAGlD2D,IAH0C,EAAkBA,QAO9DmB,GAAgB7D,GAAkBwD,ICff,SAAC,GAA2B,IAA1BI,EAAyB,EAAzBA,KAAM7E,EAAmB,EAAnBA,SAAU2D,EAAS,EAATA,IACjCoB,EAAcC,KAAGC,UAAU,CAC7BJ,OACA7E,WACA2D,QAGJ,OAAOzD,EAAOiC,IAAP,oBAAwB4C,ODU5B,SAAUP,KAAV,iEACH,OADG,SACG7B,YAAW8B,GAAYK,IAD1B,wCAIP,IAMenE,gBAAa,kBAAC,GAEpB+D,IAAqB,SAAC9D,EAAD,OAAkByD,EAAlB,EAASvD,QAAsBS,EAA/B,EAAyBE,KAAzB,sBACfb,EADe,CAElByD,QACAa,SAAUC,SAAS5D,EAAS6D,QAAQ,aAAc,SALlC,YAAC,GAOpBT,IAAqB,SAAC/D,EAAD,OAAkBc,EAAlB,EAASZ,QAAT,sBACfF,EADe,CAElBc,MAAOA,OATS,IANP,CACjB2C,MAAO,KACP3C,MAAO,KACPwD,SAAU,IESCG,gBA7BW,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACzBxC,EAAWC,cAD4B,EAEPF,aAClC,gBAAEuB,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAASzE,EAAlB,EAAkBA,KAAlB,MAA6B,CACzBwE,MAAOA,EAAMA,MACb3C,MAAO2C,EAAM3C,MACb4C,QAASA,EAAQ,oBACjBzE,KAAMA,EAAKA,SALZwE,EAFsC,EAEtCA,MAAO3C,EAF+B,EAE/BA,MAAO4C,EAFwB,EAExBA,QAASzE,EAFe,EAEfA,KAiB9B,OARA2F,qBAAU,WAAO,IACNxF,EAAYsF,EAAMG,OAAlBzF,SADK,EAEQgF,KAAGU,MAAMH,EAASI,OAAQ,CAC1CC,mBAAmB,IADhBf,EAFK,EAELA,KAAMlB,EAFD,EAECA,IAGbZ,EAAS6B,GAAU,CAACC,OAAM7E,WAAU2D,WACrC,CAACZ,EAAUuC,EAAMG,OAAQF,EAASI,SAGjC,kBAAC,GAAD,CACItB,MAAOA,EACP3C,MAAOA,EACP4C,QAASA,EACTC,gBAAiB1E,O,2QC1B7B,IAAMgG,GAAmBxH,IAAOC,IAAV,MAQhBwH,GAAazH,IAAOC,IAAV,MAEVyH,GAAY,SAAC,GAA2B,IAA1BlB,EAAyB,EAAzBA,KAAM7E,EAAmB,EAAnBA,SAAU2D,EAAS,EAATA,IAC1BqC,EAAQhB,KAAGC,UAAU,CAACJ,OAAMlB,QAClC,OAAO3D,EAAQ,YAAQA,EAAR,YAAoBgG,GAApB,YAAmCA,IA+BvCC,GA5BI,SAAC,GAAqC,IAApCpB,EAAmC,EAAnCA,KAAMK,EAA6B,EAA7BA,SAAUlF,EAAmB,EAAnBA,SAAU2D,EAAS,EAATA,IAC3C,OACI,kBAACkC,GAAD,KACI,kBAAC,EAAD,CACIK,SAAmB,IAATrB,EACVtF,GACa,IAATsF,OAAasB,EAAYJ,GAAU,CAAC/F,WAAU2D,MAAKkB,KAAMA,EAAO,KAHxE,gBAQA,kBAACiB,GAAD,KAAajB,GACb,kBAAC,EAAD,CACIqB,SAAuB,IAAbhB,GAAkBL,IAASK,EACrC3F,GACiB,IAAb2F,OACEiB,EACAtB,IAASK,OACLiB,EACAJ,GAAU,CAAC/F,WAAU2D,MAAKkB,KAAMA,EAAO,KAPrD,kBCFGQ,gBAxBa,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAAc,EACZzC,aAAY,gBAAEuB,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,MAAuB,CAClED,MAAOA,EAAMA,MACbC,QAASA,EAAQ,oBACjBY,SAAUb,EAAMa,aAHbb,EADwC,EACxCA,MAAOC,EADiC,EACjCA,QAASY,EADwB,EACxBA,SAMvB,IAAKb,GAASC,EAAS,OAAO,KAPiB,IASxCtE,EAAYsF,EAAMG,OAAlBzF,SATwC,EAUvBgF,KAAGU,MAAMH,EAASI,OAAQ,CAC9CC,mBAAmB,IAXwB,IAUxCf,YAVwC,MAUjC,EAViC,EAU9BlB,EAV8B,EAU9BA,IAIjB,OACI,kBAAC,GAAD,CACIkB,KAAMA,EACNK,SAAUA,EACVlF,SAAUA,EACV2D,IAAKA,OCVFyC,GAVM,WACjB,OACI,6BACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,kpBCJZ,I,GAAMC,GAAqBhI,IAAOC,IAAV,KAMNI,EAAQC,KAAK,IAOzB2H,GAAWjI,IAAOC,IAAV,MA4BCiI,GAbM,SAAC,GAAgB,IAAf/H,EAAc,EAAdA,SACnB,OACI,kBAAC6H,GAAD,KACI,kBAACC,GAAD,KACI,yBAAKvG,UAAW,aACZ,kBAAC,IAAD,CAAMR,GAAI,KAAV,gBAEHf,K,qBCTAgI,I,GAxBsCzF,EAAwB,iB,qBAAxE0F,G,MAAUC,G,MAAkBC,G,SACW5F,EAAwB,c,qBAA/D6F,G,MAAOC,G,MAAeC,G,MAEhBC,GAAcvG,YALN,qBAOjB,kBAAyB,CACrBwG,KADJ,EAAEA,KAEEpD,IAFJ,EAAQA,IAGJqD,MAHJ,EAAaA,UAMJC,GAAiB1G,YAZN,wBAYoC,SAAAwG,GAAI,OAAIA,KACvDG,GAAW3G,YAAaiG,IAAU,kBAA2B,CACtEzG,SAD2C,EAAEA,SAE7CoH,SAF2C,EAAYA,aAI9CC,GAAQ7G,YAAaoG,IAAO,kBAA2B,CAChE5G,SADqC,EAAEA,SAEvCoH,SAFqC,EAAYA,aAK/CE,GAAerG,GAAkBwF,IftBf,SAAC,GAAD,IAAEzG,EAAF,EAAEA,SAAUoH,EAAZ,EAAYA,SAAZ,OACpBlH,EAAOI,KAAK,qBAAsB,CAACN,WAAUoH,gBesB3CG,GAAYtG,GAAkB2F,If3Bf,SAAC,GAAD,IAAE5G,EAAF,EAAEA,SAAUoH,EAAZ,EAAYA,SAAZ,OACjBlH,EAAOI,KAAK,kBAAmB,CAACN,WAAUoH,gBe4BvC,SAAUZ,KAAV,iEACH,OADG,SACG7D,YAAW8D,GAAUa,IADxB,OAEH,OAFG,SAEG3E,YAAWiE,GAAOW,IAFrB,wCAKP,IAAMC,GAAe,CACjBL,SAAU,CACNnH,SAAU,GACVoH,SAAU,GACVK,gBAAiB,IAErBJ,MAAO,CACHrH,SAAU,GACVoH,SAAU,IAEdM,KAAM,KACNC,UAAW,MAGAhH,gBAAa,kBAAC,GA7CR,qBA+CG,SAACC,EAAD,WAASE,QAAUkG,EAAnB,EAAmBA,KAAMpD,EAAzB,EAAyBA,IAAKqD,EAA9B,EAA8BA,MAA9B,OACZW,aAAQhH,GAAO,SAAAiH,GACXA,EAAMb,GAAMpD,GAAOqD,QAJP,YAAC,GA5CL,wBAkDG,SAACrG,EAAD,OAAkBoG,EAAlB,EAASlG,QAAT,sBACZF,EADY,eAEdoG,EAAOQ,GAAaR,QARL,YAAC,GAUpBN,IAAmB,SAAC9F,EAAD,OAAkB8G,EAAlB,EAAS5G,QAAT,sBACbF,EADa,CAEhB8G,YAZgB,YAAC,GAcpBf,IAAmB,SAAC/F,EAAD,OAAkBc,EAAlB,EAASZ,QAAT,sBACbF,EADa,CAEhB+G,UAAWjG,OAhBK,YAAC,GAkBpBmF,IAAgB,SAACjG,EAAD,OAAkB8G,EAAlB,EAAS5G,QAAT,sBACVF,EADU,CAEb8G,YApBgB,YAAC,GAsBpBZ,IAAgB,SAAClG,EAAD,OAAkBc,EAAlB,EAASZ,QAAT,sBACVF,EADU,CAEb+G,UAAWjG,OAxBK,IA2BxB8F,I,+4BCvEJ,I,GAAMM,GAAiBzJ,IAAOC,IAAV,KAGHI,EAAQC,KAAK,IAMxBoJ,GAAc1J,IAAO2J,MAAV,KAGctJ,EAAQC,KAAK,GAMTD,EAAQC,KAAK,IAQ1CsJ,GAAS5J,IAAOC,IAAV,KAIKI,EAAQC,KAAK,GAGbD,EAAQC,KAAK,IAIxBuJ,GAAU,CACZb,MAAO,qBACPF,SAAU,4BAGRgB,GAAe9J,IAAOC,IAAV,MAwDH8J,GAjDE,SAAC,GAA6C,IAA5CpH,EAA2C,EAA3CA,KAAMgG,EAAqC,EAArCA,KAAMqB,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAU5G,EAAW,EAAXA,MACzC6G,EAAOL,GAAQlH,GAErB,OACI,kBAAC8G,GAAD,KACI,4BAAKS,GACL,0BAAMD,SAAUA,GACZ,kBAACP,GAAD,CACIS,aAAc,WACdC,KAAM,WACNC,YAAa,qBACbL,SAAUA,EACVpB,MAAOD,EAAKhH,WAEhB,kBAAC+H,GAAD,CACIS,aAAc,eACdC,KAAM,WACNC,YAAa,2BACb1H,KAAM,WACNqH,SAAUA,EACVpB,MAAOD,EAAKI,WAEN,aAATpG,GACG,kBAAC+G,GAAD,CACIS,aAAc,eACdC,KAAM,kBACNC,YAAa,wCACb1H,KAAM,WACNqH,SAAUA,EACVpB,MAAOD,EAAKS,kBAInB/F,GAAS,kBAACyG,GAAD,KAAezG,GACzB,kBAAC,EAAD,CAAQ9C,MAAI,EAACI,WAAS,EAACC,UAAW,QAC7BsJ,IAGT,kBAACN,GAAD,KACc,UAATjH,EACG,kBAAC,IAAD,CAAMzB,GAAI,aAAV,4BAEA,kBAAC,IAAD,CAAMA,GAAI,UAAV,yBCNL8F,gBArFM,SAAC,GAAe,IAAdsD,EAAa,EAAbA,QAAa,EACNC,mBAAS,MADH,mBACzBlH,EADyB,KAClBmH,EADkB,KAE1B9F,EAAWC,cAFe,EAGMF,aAAY,gBAAE4E,EAAF,EAAEA,KAAM7H,EAAR,EAAQA,KAAR,MAAmB,CACjEmH,KAAMU,EAAKP,SACXO,KAAMA,EAAKA,KACXC,UAAWD,EAAKC,UAChB9H,KAAMA,EAAKA,SAJRmH,EAHyB,EAGzBA,KAAMU,EAHmB,EAGnBA,KAAMC,EAHa,EAGbA,UAAW9H,EAHE,EAGFA,KAuE9B,OAlCA2F,qBAAU,WACNzC,EAASmE,GAAe,eACzB,CAACnE,IAGJyC,qBAAU,WACN,GAAImC,EACA,OAAkC,MAA9BA,EAAUpG,SAASuH,YACnBD,EAAS,6EAGbA,EAAS,yCAGTnB,IACAlF,QAAQC,IAAI,gBACZD,QAAQC,IAAIiF,GACZ3E,EAASd,SAEd,CAACyF,EAAMC,EAAW5E,IAGrByC,qBAAU,WACN,GAAI3F,EAAM,CACN8I,EAAQI,KAAK,KACb,IACI1G,aAAa2G,QAAQ,OAAQC,KAAKhE,UAAUpF,IAC9C,MAAO0C,GACLC,QAAQC,IAAI,mCAIrB,CAACkG,EAAS9I,IAGT,kBAAC,GAAD,CACImB,KAAM,WACNgG,KAAMA,EACNtF,MAAOA,EACP2G,SApES,SAAA9F,GAAM,IAAD,EACIA,EAAE2G,OAAjBT,EADW,EACXA,KAAMxB,EADK,EACLA,MACblE,EACIgE,GAAY,CACRC,KAAM,WACNpD,IAAK6E,EACLxB,YA+DJqB,SAzDS,SAAA/F,GACbA,EAAE4G,iBADgB,IAEXnJ,EAAuCgH,EAAvChH,SAAUoH,EAA6BJ,EAA7BI,SAAUK,EAAmBT,EAAnBS,gBAC3B,IAAI,CAACzH,EAAUoH,EAAUK,GAAiB2B,SAAS,IAInD,OAAIhC,IAAaK,GACboB,EAAS,qFACT9F,EAASgE,GAAY,CAACC,KAAM,WAAYpD,IAAK,WAAYqD,MAAO,WAChElE,EAASgE,GAAY,CAACC,KAAM,WAAYpD,IAAK,kBAAmBqD,MAAO,YAG3ElE,EAASoE,GAAS,CAACnH,WAAUoH,cATzByB,EAAS,yECtBNQ,GARM,WACjB,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,QCyEGhE,gBAzEG,SAAC,GAAe,IAAdsD,EAAa,EAAbA,QAAa,EACHC,mBAAS,MADN,mBACtBlH,EADsB,KACfmH,EADe,KAEvB9F,EAAWC,cAFY,EAGSF,aAAY,gBAAE4E,EAAF,EAAEA,KAAM7H,EAAR,EAAQA,KAAR,MAAmB,CACjEmH,KAAMU,EAAKL,MACXK,KAAMA,EAAKA,KACXC,UAAWD,EAAKC,UAChB9H,KAAMA,EAAKA,SAJRmH,EAHsB,EAGtBA,KAAMU,EAHgB,EAGhBA,KAAMC,EAHU,EAGVA,UAAW9H,EAHD,EAGCA,KA2D9B,OAhCA2F,qBAAU,WACNzC,EAASmE,GAAe,YACzB,CAACnE,IAGJyC,qBAAU,WACN,GAAImC,EAIA,OAHAnF,QAAQC,IAAI,gBACZD,QAAQC,IAAIkF,QACZkB,EAAS,mCAGTnB,IACAlF,QAAQC,IAAI,gBACZD,QAAQC,IAAIiF,GACZ3E,EAASd,SAEd,CAACyF,EAAMC,EAAW5E,IAGrByC,qBAAU,WACN,GAAI3F,EAAM,CACN8I,EAAQI,KAAK,KACb,IACI1G,aAAa2G,QAAQ,OAAQC,KAAKhE,UAAUpF,IAC9C,MAAO0C,GACLC,QAAQC,IAAI,mCAIrB,CAACkG,EAAS9I,IAGT,kBAAC,GAAD,CACImB,KAAM,QACNgG,KAAMA,EACNtF,MAAOA,EACP2G,SAxDS,SAAA9F,GAAM,IAAD,EACIA,EAAE2G,OAAjBT,EADW,EACXA,KAAMxB,EADK,EACLA,MACblE,EACIgE,GAAY,CACRC,KAAM,QACNpD,IAAK6E,EACLxB,YAmDJqB,SA7CS,SAAA/F,GACbA,EAAE4G,iBADgB,IAEXnJ,EAAsBgH,EAAtBhH,SAAUoH,EAAYJ,EAAZI,SACjBrE,EAASsE,GAAM,CAACrH,WAAUoH,oBCrBnBkC,GARG,WACd,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,Q,qBCUKC,I,GARbxI,EAAwB,kB,qBAHxByI,G,MACAC,G,MACAC,G,MAISC,GAAWnJ,YAAagJ,IAAW,SAAAI,GAAE,OAAIA,KACzCC,GAAarJ,YAHN,oBAKdsJ,GAAe7I,GAAkBuI,IZFf,SAAAI,GAAE,OAAI1J,EAAOiC,IAAP,qBAAyByH,OYIhD,SAAUL,KAAV,iEACH,OADG,SACG5G,YAAW6G,GAAWM,IADzB,wCAIP,IAAMtC,GAAe,CACjBlH,KAAM,KACNoB,MAAO,MAGIf,gBAAa,kBAAC,GAEpB8I,IAAoB,SAAC7I,EAAD,OAAkBN,EAAlB,EAASQ,QAAT,sBACdF,EADc,CAEjBN,KAAMA,OAJU,YAAC,GAMpBoJ,IAAoB,SAAC9I,EAAD,OAAkBc,EAAlB,EAASZ,QAAT,sBACdF,EADc,CAEjBc,MAAOA,OARS,YAAC,GAhBT,oBA0BG,kBAAM8F,MAVD,IAYxBA,I,+cC/BJ,IAAMuC,GAAmB1L,YAAOE,EAAPF,CAAH,MAIhB2L,GAAW3L,IAAOC,IAAV,KACiBI,EAAQC,KAAK,IAUtCsL,GAAc5L,IAAOC,IAAV,KAEJI,EAAQC,KAAK,IAoCXuL,GAjCI,SAAC,GAA2C,IAA1C5J,EAAyC,EAAzCA,KAAMoB,EAAmC,EAAnCA,MAAO4C,EAA4B,EAA5BA,QAAS6F,EAAmB,EAAnBA,cACvC,GAAIzI,EACA,OAAIA,EAAMH,UAAsC,MAA1BG,EAAMH,SAASuH,OAC1B,kBAACiB,GAAD,qFAEJ,kBAACA,GAAD,oCAGX,GAAIzF,IAAYhE,EACZ,OAAO,KAT+C,IAYnD4D,EAA0C5D,EAA1C4D,MAAOC,EAAmC7D,EAAnC6D,KAAMtE,EAA6BS,EAA7BT,KAAMuD,EAAuB9C,EAAvB8C,cAAeK,EAAQnD,EAARmD,KAEzC,OACI,kBAACsG,GAAD,KACI,kBAACC,GAAD,KACI,4BAAK9F,GACL,kBAAC,GAAD,CACIlE,SAAUH,EAAKG,SACfoD,cAAeA,EACfF,cAAY,IAEhB,kBAAC,GAAD,CAAMO,KAAMA,KAEf0G,EACD,kBAACF,GAAD,CACIG,wBAAyB,CAACC,OAAQlG,O,40BClDlD,IAAMmG,GAAajM,IAAOC,IAAV,MAaViM,GAAiBlM,IAAOC,IAAV,MAmBdY,GAAeb,YAAOiB,EAAPjB,CAAH,MA8CHmM,GAvCE,SAAC,GAWZ,IATEC,EASH,EATGA,QACAvG,EAQH,EARGA,MACAwG,EAOH,EAPGA,YAOH,IANGC,mBAMH,MANiB,eAMjB,MALGC,kBAKH,MALgB,eAKhB,EAJGC,EAIH,EAJGA,MACAC,EAGH,EAHGA,UACAC,EAEH,EAFGA,SAGJ,OAAKN,EAED,kBAACH,GAAD,KACI,kBAACC,GAAD,KACI,4BAAKrG,GACL,2BAAIwG,GACJ,yBAAK3K,UAAW,WACZ,kBAAC,GAAD,CAAcE,QAAS8K,GAClBH,GAEM,kBAAVC,EAEO,kBAAC,GAAD,CAActL,GAAI,SAAUX,MAAI,GAC3B+L,GAIL,kBAAC,GAAD,CAAc1K,QAAS6K,EAAWlM,MAAI,GACjC+L,MAlBR,MCvCVK,GAbQ,SAAC,GAAoC,IAAnCP,EAAkC,EAAlCA,QAASK,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACzC,OACI,kBAAC,GAAD,CACIN,QAASA,EACTvG,MAAO,kCACPwG,YAAa,oFACbC,YAAa,eACbG,UAAWA,EACXC,SAAUA,K,wiBCNtB,I,GAAME,GAA0B5M,IAAOC,IAAV,MAOvB4M,GAAe7M,IAAOc,OAAV,KAGLT,EAAQC,KAAK,GAOJD,EAAQC,KAAK,GAClBD,EAAQE,KAAK,IAmCfuM,GA5BW,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAAc,EACpBzC,oBAAS,GADW,mBACvC0C,EADuC,KAChCC,EADgC,KAa9C,OACI,oCACI,kBAACN,GAAD,KACI,kBAACC,GAAD,CAAcjL,QAASmL,GAAvB,gBACA,kBAACF,GAAD,CAAcjL,QAfJ,WAClBsL,GAAS,KAcD,iBAEJ,kBAAC,GAAD,CACId,QAASa,EACTR,UAhBM,WACdS,GAAS,GACTF,KAeQN,SAbK,WACbQ,GAAS,Q,YCCAC,I,GA7BbzK,EAAwB,oB,qBAHxB0K,G,MACAC,G,MACAC,G,SAMA5K,EAAwB,qB,qBAHxB6K,G,MACAC,G,MACAC,G,MAGSC,GAAavL,YAdP,oBAeNuG,GAAcvG,YAdN,sBAciC,kBAAmB,CACrEoD,IADkD,EAAEA,IAEpDqD,MAFkD,EAAOA,UAIhD+E,GAAkBxL,YAjBL,2BAiBqC,SAAAF,GAAI,OAAIA,KAC1D2L,GAAYzL,YAAaiL,IAAY,kBAA0B,CACxEvH,MAD8C,EAAEA,MAEhDC,KAF8C,EAASA,KAGvDV,KAH8C,EAAeA,SAKpDyI,GAAa1L,YAAaoL,IACnC,kBAA8B,CAC1BhC,GADJ,EAAEA,GAEE1F,MAFJ,EAAMA,MAGFC,KAHJ,EAAaA,KAITV,KAJJ,EAAmBA,SAOjB0I,GAAgBlL,GAAkBgL,IjBvBf,SAAC,GAAD,IAAE/H,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMV,EAAf,EAAeA,KAAf,OACrBvD,EAAOI,KAAK,aAAc,CAAC4D,QAAOC,OAAMV,YiBuBtC2I,GAAiBnL,GAAkBiL,IjBpBf,SAAC,GAAD,IAAEtC,EAAF,EAAEA,GAAI1F,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAMV,EAAnB,EAAmBA,KAAnB,OACtBvD,EAAOmM,MAAP,qBAA2BzC,GAAM,CAC7B1F,QACAC,OACAV,YiBkBD,SAAU+H,KAAV,iEACH,OADG,SACG7I,YAAW8I,GAAYU,IAD1B,OAEH,OAFG,SAEGxJ,YAAWiJ,GAAaQ,IAF3B,wCAKP,IAAM5E,GAAe,CACjBtD,MAAO,GACPC,KAAM,GACNV,KAAM,GACNnD,KAAM,KACNgM,UAAW,KACXC,eAAgB,MAGL5L,gBAAa,kBAAC,GAlDV,oBAoDG,SAAAC,GAAK,OAAI4G,MAFH,YAAC,GAjDR,sBAoDG,SAAC5G,EAAD,WAASE,QAAU8C,EAAnB,EAAmBA,IAAKqD,EAAxB,EAAwBA,MAAxB,sBACTrG,EADS,eAEXgD,EAAMqD,OALS,YAAC,GAOpBwE,IAAa,SAAA7K,GAAK,sBACZA,EADY,CAEfN,KAAM,KACNgM,UAAW,UAVK,YAAC,GAYpBZ,IAAqB,SAAC9K,EAAD,OAAkBN,EAAlB,EAASQ,QAAT,sBACfF,EADe,CAElBN,KAAMA,OAdU,YAAC,GAgBpBqL,IAAqB,SAAC/K,EAAD,OAAkB0L,EAAlB,EAASxL,QAAT,sBACfF,EADe,CAElB0L,UAAWA,OAlBK,YAAC,GAhDH,2BAoEG,SAAC1L,EAAD,OAAkBN,EAAlB,EAASQ,QAAT,sBACdF,EADc,CAEjBsD,MAAO5D,EAAK4D,MACZC,KAAM7D,EAAK6D,KACXV,KAAMnD,EAAKmD,KACX8I,eAAgBjM,EAAK2D,SAzBL,YAAC,GA4BpB4H,IAAsB,SAACjL,EAAD,OAAkBN,EAAlB,EAASQ,QAAT,sBAChBF,EADgB,CAEnBN,KAAMA,OA9BU,YAAC,GAgCpBwL,IAAsB,SAAClL,EAAD,OAAkB0L,EAAlB,EAASxL,QAAT,sBAChBF,EADgB,CAEnB0L,UAAWA,OAlCK,IAqCxB9E,ICvCWnC,gBA5Ca,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOqD,EAAa,EAAbA,QAC1B6D,EAAUlH,EAAMG,OAAhB+G,OACDzJ,EAAWC,cAF6B,EAGTF,aAAY,gBAAExC,EAAF,EAAEA,KAAMgE,EAAR,EAAQA,QAASzE,EAAjB,EAAiBA,KAAjB,MAA4B,CACzES,KAAMA,EAAKA,KACXoB,MAAOpB,EAAKoB,MACZ4C,QAASA,EAAQ,kBACjBzE,KAAMA,EAAKA,SAJRS,EAHuC,EAGvCA,KAAMoB,EAHiC,EAGjCA,MAAO4C,EAH0B,EAG1BA,QAASzE,EAHiB,EAGjBA,KAMvB4M,GAAW5M,GAAQA,EAAKoE,QAAU3D,GAAQA,EAAKT,KAAKoE,KAG1DuB,qBAAU,WAGN,OAFAzC,EAAS4G,GAAS6C,IAEX,WACHzJ,EAAS8G,SAEd,CAAC9G,EAAUyJ,IAEd,IAKMnB,EAAQ,wCAAG,sBAAAqB,EAAA,+ElBRK9C,EkBUG4C,ElBVGtM,EAAOyM,OAAP,qBAA4B/C,IkBQvC,OAGTjB,EAAQI,KAAK,KAHJ,+CAKTvG,QAAQC,IAAR,MALS,iClBRK,IAAAmH,IkBQL,oBAAH,qDASd,OACI,kBAAC,GAAD,CACItJ,KAAMA,EACNoB,MAAOA,EACP4C,QAASA,EACT6F,cAAesC,GAAW,kBAAC,GAAD,CAAmBrB,OAnBtC,WACXrI,EAASiJ,GAAgB1L,IACzBqI,EAAQI,KAAK,WAiBoDsC,SAAUA,SCnCpEuB,GATE,WACb,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,qtBCDZ,IAAMC,GAAexO,YAAOE,EAAPF,CAAH,MAIZyO,GAAazO,IAAO2J,MAAV,KAKetJ,EAAQC,KAAK,IAKtCoO,GAAe1O,IAAOC,IAAV,MAmEH0O,GAtDA,SAAC,GAAkC,IAAjC9I,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAM8I,EAAmB,EAAnBA,cACpBC,EAAeC,iBAAO,MACtBC,EAAeD,iBAAO,MAE5B3H,qBAAU,WACN4H,EAAaC,QAAU,IAAIC,KAAMJ,EAAaG,QAAS,CACnDE,MAAO,SACP7E,YAAa,qDACb8E,QAAS,CAELC,QAAS,CACL,CAAC,CAACC,OAAQ,KAAM,CAACA,OAAQ,MACzB,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAACC,KAAM,WAAY,CAACA,KAAM,WAC3B,CAAC,aAAc,aAAc,OAAQ,aAOjD,IAAMC,EAAQR,EAAaC,QAC3BO,EAAMC,GAAG,eAAe,SAACC,EAAOC,EAAUC,GACvB,SAAXA,GACAf,EAAc,CAACrJ,IAAK,OAAQqD,MAAO2G,EAAMK,KAAKC,iBAGvD,CAACjB,IAEJ,IAAMkB,EAAUhB,kBAAO,GACvB3H,qBAAU,WACF2I,EAAQd,UACZc,EAAQd,SAAU,EAClBD,EAAaC,QAAQY,KAAKC,UAAY/J,KACvC,CAACA,IAMJ,OACI,kBAAC0I,GAAD,KACI,kBAACC,GAAD,CACI7F,MAAO/C,EACPmE,SARU,SAAA9F,GACnB0K,EAAc,CAACrJ,IAAK,QAASqD,MAAO1E,EAAE2G,OAAOjC,SAQpCyB,YAAa,uDAEjB,kBAACqE,GAAD,KACI,yBAAKqB,IAAKlB,OC1DXmB,GAnBS,WACpB,IAAMtL,EAAWC,cADS,EAEJF,aAAY,gBAAEwL,EAAF,EAAEA,MAAF,MAAc,CAC5CpK,MAAOoK,EAAMpK,MACbC,KAAMmK,EAAMnK,SAFTD,EAFmB,EAEnBA,MAAOC,EAFY,EAEZA,KAIR8I,EAAgBsB,uBAAY,SAAAzN,GAAO,OAAIiC,EAASgE,GAAYjG,MAC9D,CAACiC,IASL,OANAyC,qBAAU,WACN,OAAO,WACHzC,EAASgJ,SAEd,CAAChJ,IAEG,kBAAC,GAAD,CAAQkK,cAAeA,EAAe/I,MAAOA,EAAOC,KAAMA,K,2pCCjBrE,IAAMqK,GAAenQ,IAAOC,IAAV,KAEUI,EAAQC,KAAK,GAIxBD,EAAQC,KAAK,IAMxB8P,GAAUpQ,IAAO2I,KAAV,KAKWtI,EAAQC,KAAK,GAiBfD,EAAQC,KAAK,GAITD,EAAQC,KAAK,IAKjC+P,GAAMrQ,IAAOC,IAAV,KAEII,EAAQC,KAAK,IAOpBgQ,GAAgBtQ,IAAOC,IAAV,MAMbsQ,GAAUC,IAAMC,MAAK,gBAAEnL,EAAF,EAAEA,IAAK0H,EAAP,EAAOA,SAAP,OACvB,kBAACqD,GAAD,CAAKzO,QAAS,kBAAMoL,EAAS1H,KAA7B,IAAqCA,MAGnCoL,GAAUF,IAAMC,MAAK,gBAAErL,EAAF,EAAEA,KAAM4H,EAAR,EAAQA,SAAR,OACvB,kBAACsD,GAAD,KACKlL,EAAKC,KAAI,SAAAC,GAAG,OACT,kBAACiL,GAAD,CAAShL,IAAKD,EAAKA,IAAKA,EAAK0H,SAAUA,WAoDpC2D,GA/CA,SAAC,GAA0B,IAAzBvL,EAAwB,EAAxBA,KAAMwL,EAAkB,EAAlBA,aAAkB,EACXrG,mBAAS,IADE,mBAC9BZ,EAD8B,KACvBkH,EADuB,OAEHtG,mBAAS,IAFN,mBAE9BuG,EAF8B,KAEnBC,EAFmB,KAI/BC,EAAYd,uBAAY,SAAA5K,GAC1B,GAAKA,IAAOwL,EAAU/F,SAASzF,GAA/B,CACA,IAAM2L,EAAO,uBAAOH,GAAP,CAAkBxL,IAC/ByL,EAAaE,GACbL,EAAaK,MACd,CAACH,EAAWF,IAET5D,EAAWkD,uBAAY,SAAA5K,GACzB,IAAM2L,EAAUH,EAAUI,QAAO,SAAAC,GAAC,OAAIA,IAAM7L,KAC5CyL,EAAaE,GACbL,EAAaK,KACd,CAACH,EAAWF,IAET5G,EAAWkG,uBAAY,SAAAhM,GACzB2M,EAAS3M,EAAE2G,OAAOjC,SACnB,IAEGqB,EAAWiG,uBAAY,SAAAhM,GACzBA,EAAE4G,iBACFkG,EAAUrH,EAAMyH,QAChBP,EAAS,MACV,CAAClH,EAAOqH,IAMX,OAJA7J,qBAAU,WACN4J,EAAa3L,KACd,CAACA,IAGA,kBAAC+K,GAAD,KACI,4CACA,kBAACC,GAAD,CAASnG,SAAUA,GACf,2BACIrB,MAAOe,EACPK,SAAUA,EACVK,YAAa,sDAEjB,4BAAQ1H,KAAM,UAAd,iBAEJ,kBAAC+N,GAAD,CAAStL,KAAM0L,EAAW9D,SAAUA,MChGjCqE,GAfS,WACpB,IAAM3M,EAAWC,cACXS,EAAOX,aAAY,SAAAlC,GAAK,OAAIA,EAAM0N,MAAM7K,QAU9C,OAAO,kBAAC,GAAD,CAAQwL,aARM,SAAAK,GACjBvM,EAASgE,GAAY,CACbnD,IAAK,OACLqD,MAAOqI,MAKwB7L,KAAMA,K,wUCbrD,I,GAAMkM,GAA2BtR,IAAOC,IAAV,MASxBY,GAAeb,YAAOiB,EAAPjB,CAAH,MAoBHuR,GAbY,SAAC,GAAqC,IAApC7E,EAAmC,EAAnCA,SAAU8E,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,OAChD,OACI,kBAACH,GAAD,KACI,kBAAC,GAAD,CAAc/Q,MAAI,EAACqB,QAAS4P,GAA5B,sBACSC,EAAS,eAAO,gBAEzB,kBAAC,GAAD,CAAc7P,QAAS8K,GAAvB,kBCsCG1F,gBA1DqB,SAAC,GAAe,IAAdsD,EAAa,EAAbA,QAC5B5F,EAAWC,cAD8B,EAEcF,aAAY,gBAAEwL,EAAF,EAAEA,MAAF,MAAc,CACnFpK,MAAOoK,EAAMpK,MACbC,KAAMmK,EAAMnK,KACZV,KAAM6K,EAAM7K,KACZnD,KAAMgO,EAAMhO,KACZgM,UAAWgC,EAAMhC,UACjBC,eAAgB+B,EAAM/B,mBANnBrI,EAFwC,EAExCA,MAAOC,EAFiC,EAEjCA,KAAMV,EAF2B,EAE3BA,KAAMnD,EAFqB,EAErBA,KAAMgM,EAFe,EAEfA,UAAWC,EAFI,EAEJA,eA+C3C,OAXA/G,qBAAU,WACN,GAAIlF,EAAM,CAAC,IACA2D,EAAa3D,EAAb2D,IAAKpE,EAAQS,EAART,KACZ8I,EAAQI,KAAR,YAAkBlJ,EAAKG,SAAvB,YAAmCiE,IAGnCqI,GACA9J,QAAQC,IAAI6J,KAEjB,CAAC3D,EAASrI,EAAMgM,IAGf,kBAACyD,GAAD,CACIF,YAxCU,WAEV9M,EADAwJ,EAEIL,GACI,CACItC,GAAI2C,EACJrI,QACAC,OACAV,SAOZwI,GAAU,CACN/H,QACAC,OACAV,WAuBJsH,SAlBS,WACbpC,EAAQqH,UAkBJF,SAAUvD,OC3CP0D,GAVG,WACd,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCDCC,GAAiB1P,YAPX,mBAQN2P,GAAW3P,YAPN,kBAO8B,SAAA4P,GAAK,OAAIA,KAC5CC,GAAY7P,YAPN,mBAQf,kBAAqC,CACjC8P,OADJ,EAAEA,OAEEC,KAFJ,EAAUA,KAGNC,MAHJ,EAAgBA,MAIZC,QAJJ,EAAuBA,YAMdC,GAAYlQ,YAbN,mBAa+B,SAAAoJ,GAAE,OAAIA,KAC3C+G,GAAUnQ,YAbN,iBAa6B,SAAAoJ,GAAE,OAAIA,KACvCgH,GAAapQ,YAbN,oBAagC,SAAAqK,GAAK,OAAIA,KAEvDrD,GAAe,CACjB4I,MAAO,eACPS,SAAS,EACTC,UAAU,EACVC,QAAS,GACTT,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTO,aAAc,GAGHrQ,gBAAa,kBAAC,GAhCV,mBAkCG,SAAAC,GAAK,OAAI4G,MAFH,YAAC,GA/BX,kBAkCG,SAAC5G,EAAD,OAAkBwP,EAAlB,EAAStP,QAAT,sBACNF,EADM,CAETwP,MAAOA,OALS,YAAC,GA9BV,mBAqCG,SAACxP,EAAD,WAASE,QAAUwP,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,MAAOC,EAAxC,EAAwCA,QAAxC,sBACP7P,EADO,CAEViQ,SAAS,EACTP,OAAQA,EACRC,KAAMA,EACNC,MAAOA,EACPC,QAASA,OAbO,YAAC,GA7BV,mBA4CG,SAAC7P,EAAD,OAAkBgJ,EAAlB,EAAS9I,QAAT,OACV8G,aAAQhH,GAAO,SAAAiH,GACXA,EAAMyI,OAAO1G,GAAIqH,SAAU,EAC3BpJ,EAAMyI,OAAO1G,GAAIsH,QAAS,EAC1BrJ,EAAMmJ,qBAnBM,YAAC,GA5BZ,iBAiDG,SAACpQ,EAAD,OAAkBgJ,EAAlB,EAAS9I,QAAT,OACR8G,aAAQhH,GAAO,SAAAiH,GACXA,EAAMyI,OAAO1G,GAAIqH,SAAWpJ,EAAMyI,OAAO1G,GAAIqH,cAvBjC,YAAC,GA3BT,oBAoDG,SAACrQ,EAAD,OAAkBiK,EAAlB,EAAS/J,QAAT,OACX8G,aAAQhH,GAAO,SAAAiH,GACXA,EAAMyI,OAAO5M,KAAI,SAAAyN,GAAK,MAAkB,MAAdA,EAAMC,IAAcD,EAAMD,QAAS,EAAOC,KACpEtJ,EAAMiJ,UAAW,EACjBjJ,EAAMkJ,QAAUlG,QA7BJ,IA+BrBrD,ICrCQ6J,I,OAzBG,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAEzB,OACI,yBAAK3H,GAAI,cACL,yBAAKA,GAAI,oBACL,+BACI,gEAEJ,4BACInB,KAAM,QACNmB,GAAI,QACJvB,SAAUkJ,GAEV,4BAAQtK,MAAO,gBAAf,gBACA,4BAAQA,MAAO,gBAAf,gBACA,4BAAQA,MAAO,sBAAf,wBAGR,yBAAK2C,GAAI,iBACL,kBAAC,EAAD,CAAQ3J,QAASqR,GAAjB,oBCsEDE,GAxFY,WACvB,IAAMzO,EAAWC,cACVoN,EAAStN,aAAY,kBAAa,CACrCsN,MADwB,EAAEqB,KACdrB,UADTA,MAIDkB,EAAU/C,uBAAY,WACxB,IAAIkC,EAASF,EAAMC,EAAQ,EACvBF,EAAS,GAEb,OAAQF,GACJ,IAAK,eACDK,EAAU,GACVF,EAAO,GACPC,EAAQ,GACR,MACJ,IAAK,eACDC,EAAU,GACVF,EAAO,IACPC,EAAQ,GACR,MACJ,IAAK,qBACDC,EAAU,GACVF,EAAO,IACPC,EAAQ,GAKhB,IAAK,IAAIkB,EAAI,EAAGA,EAAInB,EAAMmB,IACtBpB,EAAOvH,KAAK,CAACa,GAAI8H,EAAGN,IAAK,EAAGF,QAAQ,EAAOD,SAAS,IAGxD,IAAK,IAAIS,EAAI,EAAGA,EAAIjB,EAASiB,IAAK,CAC9B,IAAIC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWvB,GACjCwB,EAAQ,EACPvB,EAAQ,GACRA,EACQ,EAARA,GACA,EACD,EACAA,EAAQ,EACRA,EACAA,EAAQ,GAGZ,GAAwB,MAApBF,EAAOqB,GAAKP,IAAhB,CAKAd,EAAOqB,GAAKP,IAAM,IAElB,IAAK,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIM,EAAYL,EAAMI,EAAML,GAExBM,GAAa,GAAKA,EAAYzB,GACJ,MAA1BD,EAAO0B,GAAWZ,OACfO,EAAMnB,IAAU,GAAKwB,EAAYxB,IAAUA,EAAQ,GACjDmB,EAAMnB,IAAUA,EAAQ,GAAKwB,EAAYxB,IAAU,IAExDF,EAAO0B,GAAWZ,YAdtBM,IAmBR3O,EACIsN,GAAU,CACNC,SACAC,OACAC,QACAC,eAGT,CAAC1N,EAAUqN,IAERmB,EAAahD,uBAAY,SAAAhM,GAC3BQ,EAASoN,GAAS5N,EAAE2G,OAAOjC,UAC5B,CAAClE,IAEJ,OACI,kBAAC,GAAD,CACIuO,QAASA,EACTC,WAAYA,K,oBCtETU,I,OAdG,SAAC,GAAqC,IAApCd,EAAmC,EAAnCA,MAAOe,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACpC,OACI,4BACIvI,GAAIuH,EAAMvH,GACV7J,UAAWqS,KAAW,QAASjB,EAAMD,OAAS,kBAAoBC,EAAMC,IAAM,gBAC9EnR,QAASiS,EACTG,YAAa,SAAA9P,GAAC,OAAI4P,EAAU5P,EAAG4O,EAAMvH,KACrC0I,cAAe,SAAA/P,GAAC,OAAIA,EAAE4G,mBAErBgI,EAAMD,OAASC,EAAMC,IAAM,EAAID,EAAMC,IAAoB,MAAdD,EAAMC,KAAe,yBAAKmB,IAAI,kBAAkBC,IAAI,iBAASrB,EAAMF,SAAW,YCgFvHpC,OAAMC,MAxFM,SAAC,GAAa,IAAZqC,EAAW,EAAXA,MACnBpO,EAAWC,cADmB,EAOhCF,aAAY,gBAAE2O,EAAF,EAAEA,KAAF,MAAa,CACzBX,SAAUW,EAAKX,SACfR,OAAQmB,EAAKnB,OACbC,KAAMkB,EAAKlB,KACXC,MAAOiB,EAAKjB,UARZM,EAHgC,EAGhCA,SACAR,EAJgC,EAIhCA,OACAC,EALgC,EAKhCA,KACAC,EANgC,EAMhCA,MAQE0B,EAAc3D,uBAAY,SAAAhM,GAE5B,IAAIwP,EAAQ,EAAEvB,GAAQ,EAAG,EAAGA,GAAQA,EAAQ,EAAY,EAARA,EAAWA,EAAQ,EAAGA,EAAQ,GAC1E5G,EAAKzE,SAAS5C,EAAE2G,OAAOU,IAE3B,IAAMkH,IAAYR,EAAO1G,GAAIsH,OACzB,GAAuB,MAAnBZ,EAAO1G,GAAIwH,IACXrO,EAAS6N,GAAW,sBACjB,GAAuB,IAAnBN,EAAO1G,GAAIwH,IAAW,CAC7B,IAAIqB,EAAU,IAAIC,MAAMnC,GAAMoC,MAAK,GAC/BC,EAAQ,CAAChJ,GACTiJ,EAAY,CAACjJ,GAKjB,IAHA6I,EAAQ7I,IAAM,EACd7G,EAAS2N,GAAU9G,IAEZgJ,EAAME,OAAS,GAGlB,IAFA,IAAInB,EAAMiB,EAAMG,QAEPrB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIM,EAAYL,EAAMI,EAAML,GAExBM,GAAa,GAAKA,EAAYzB,GACJ,IAA1BD,EAAO0B,GAAWZ,MAAcqB,EAAQT,MACrCL,EAAMnB,IAAU,GAAKwB,EAAYxB,IAAUA,EAAQ,GACjDmB,EAAMnB,IAAUA,EAAQ,GAAKwB,EAAYxB,IAAU,KACxDoC,EAAM7J,KAAKiJ,GACXa,EAAU9J,KAAKiJ,GACfS,EAAQT,IAAa,EACrBjP,EAAS2N,GAAUsB,KAO/B,IAFAS,EAAU,IAAIC,MAAMnC,GAAMoC,MAAK,GAExBE,EAAUC,OAAS,GAGtB,IAFA,IAAInB,EAAMkB,EAAUE,QAEXrB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIM,EAAYL,EAAMI,EAAML,GAExBM,GAAa,GAAKA,EAAYzB,IAC7BkC,EAAQT,IACT1B,EAAO0B,GAAWZ,IAAM,IACvBd,EAAO0B,GAAWd,UAChBS,EAAMnB,IAAU,GAAKwB,EAAYxB,IAAUA,EAAQ,GACjDmB,EAAMnB,IAAUA,EAAQ,GAAKwB,EAAYxB,IAAU,KACxDiC,EAAQT,IAAa,EACrBjP,EAAS2N,GAAUsB,WAK/BjP,EAAS2N,GAAU9G,MAG5B,CAAC7G,EAAU+N,EAAUR,EAAQC,EAAMC,IAEhC2B,EAAY5D,uBAAY,SAAChM,EAAGqH,GACxBkH,GAAYR,EAAO1G,GAAIsH,QAAwB,IAAb3O,EAAEpD,QACtC4D,EAAS4N,GAAQ/G,MAEtB,CAAC7G,EAAU+N,EAAUR,IAExB,OACI,kBAAC,GAAD,CACIa,MAAOA,EACPe,YAAaA,EACbC,UAAWA,OCvERa,GAdS,SAAC,GAAoE,IAAnEvI,EAAkE,EAAlEA,QAASwI,EAAyD,EAAzDA,WAAYvI,EAA6C,EAA7CA,YAAaG,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAC1E,OACI,kBAAC,GAAD,CACIN,QAASA,EACTvG,MAAO+O,EACPvI,YAAaA,EACbC,YAAasI,EACbpI,MAAOA,EACPC,UAAWA,EACXC,SAAUA,K,2PCJtB,IAoEemI,GApEG,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EACLvK,oBAAS,GADJ,mBACxB0C,EADwB,KACjBC,EADiB,OAQ3BzI,aAAY,gBAAE2O,EAAF,EAAEA,KAAF,MAAa,CACzBX,SAAUW,EAAKX,SACfC,QAASU,EAAKV,QACdT,OAAQmB,EAAKnB,OACbE,MAAOiB,EAAKjB,MACZC,QAASgB,EAAKhB,YAVdK,EAH2B,EAG3BA,SACAC,EAJ2B,EAI3BA,QACAT,EAL2B,EAK3BA,OACAE,EAN2B,EAM3BA,MACAC,EAP2B,EAO3BA,QAQE2C,EAAmB,GAAR5C,EACX6C,EAAQhV,IAAOC,IAAV,KAEM8U,GAEXE,EAAejV,IAAOC,IAAV,KACL8U,GASPH,EAAyB,kBAAZlC,EAA8B,wCAAY,4BAE7D,OACI,yBAAKnH,GAAI,cACL,yBAAKA,GAAI,oBACL,4BAAKmH,GAAoB,+BAAaN,EAAU,WAEpD,kBAAC4C,EAAD,KAEQ/C,EAAO5M,KAAI,SAAAyN,GACP,OAAO,kBAAC,GAAD,CACHvN,IAAKuN,EAAMvH,GACXuH,MAAOA,QAKtBL,GAED,kBAACwC,EAAD,CAAc1J,GAAI,iBACd,kBAAC,EAAD,CAAQ3J,QA3BG,WACnBsL,GAAS,KA2BI0H,GAEL,kBAAC,GAAD,CACIxI,QAASa,EACT2H,WAAYA,EACZvI,YAAyB,kBAAZqG,EACP,kEACA,+EACNlG,MAAOkG,EACPjG,UAAWqI,EACXpI,SAlCC,WACbQ,GAAS,SCIFgI,GAnCY,WACvB,IAAMxQ,EAAWC,cADY,EASzBF,aAAY,gBAAE2O,EAAF,EAAEA,KAAF,MAAa,CACzBZ,QAASY,EAAKZ,QACdC,SAAUW,EAAKX,SACfR,OAAQmB,EAAKnB,OACbC,KAAMkB,EAAKlB,KACXE,QAASgB,EAAKhB,QACdO,aAAcS,EAAKT,iBAZnBH,EAHyB,EAGzBA,QACAC,EAJyB,EAIzBA,SACAR,EALyB,EAKzBA,OACAC,EANyB,EAMzBA,KACAE,EAPyB,EAOzBA,QACAO,EARyB,EAQzBA,aAUEmC,EAAY5E,uBAAY,WAC1BxL,EAASmN,QACV,CAACnN,IAQJ,OANAyC,qBAAU,WACFiL,IAAYF,EAAOS,GAAgBH,IAAYC,GAC/C/N,EAAS6N,GAAW,oBAEzB,CAAC7N,EAAU8N,EAASC,EAAUR,EAAQC,EAAME,EAASO,IAGpD,kBAAC,GAAD,CACImC,UAAWA,KCbRK,I,OAfF,WACT,IAAMzQ,EAAWC,cACV6N,EAAW/N,aAAY,kBAAa,CAAC+N,QAAd,EAAEY,KAA0BZ,YAAnDA,QAMP,OAJArL,qBAAU,WACNzC,EAASmN,QACV,CAACnN,IAGA,yBAAK6G,GAAI,aACJiH,EAAU,kBAAC,GAAD,MAAwB,kBAAC,GAAD,SCJhC4C,GATE,WACb,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,QCkBGC,GAhBH,WACR,OACI,oCACI,kBAAC,IAAD,KACI,+CAEJ,kBAAC,IAAD,CAAOC,UAAWvN,GAAcwN,KAAM,CAAC,cAAe,KAAMC,OAAK,IACjE,kBAAC,IAAD,CAAOF,UAAWtK,GAAcuK,KAAM,cACtC,kBAAC,IAAD,CAAOD,UAAWrK,GAAWsK,KAAM,WACnC,kBAAC,IAAD,CAAOD,UAAW/G,GAAUgH,KAAM,wBAClC,kBAAC,IAAD,CAAOD,UAAW1D,GAAW2D,KAAM,WACnC,kBAAC,IAAD,CAAOD,UAAWF,GAAUG,KAAM,YCT1BE,QACW,cAA7BC,OAAOxO,SAASyO,UAEe,UAA7BD,OAAOxO,SAASyO,UAEhBD,OAAOxO,SAASyO,SAAS1O,MACvB,2D,2CCEW2O,IAAV,SAAUA,KAAV,iEACH,OADG,SACGC,YAAI,CAAC1N,KAAY5E,KAAY4J,KAAajC,KAAY/E,OADzD,wCAIQ2P,OAdKC,2BAAgB,CAChC1M,QACApD,UACAzE,QACAyO,SACAhO,QACA+D,SACAoN,UCHE4C,GAAiBC,eACjBC,GAAQC,uBAAYL,GAAaM,+BAAoBC,2BAAgBL,MAc3EA,GAAeM,IAAIV,IAZnB,WACI,IACI,IAAMpU,EAAOwC,aAAauS,QAAQ,QAClC,IAAK/U,EAAM,OAEX0U,GAAMxR,SAASf,GAAYnC,IAC3B0U,GAAMxR,SAASd,MACjB,MAAOM,GACLC,QAAQC,IAAI,gCAKpBoS,GAEAC,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,SAKZS,SAASC,eAAe,SF0FtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9T,GACLc,QAAQd,MAAMA,EAAM+T,a","file":"static/js/main.ea226f08.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledResponsive = styled.div`\r\n    padding: 0 1rem;\r\n    width: 1024px;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    \r\n    @media(max-width: 1024px) {\r\n        width: 768px;\r\n    }\r\n    \r\n    @media(max-width: 768px) {\r\n        width: 100%;\r\n    }    \r\n`;\r\n\r\nconst Responsive = ({children, ...rest}) => {\r\n    // props를 사용할 수 있도록 ...rest를 사용하여 StyledResponsive에게 전달\r\n    return <StyledResponsive {...rest}>{children}</StyledResponsive>\r\n};\r\n\r\nexport default Responsive;\r\n","const palette = {\r\n    gray: [\r\n        '#f8f9fa',\r\n        '#f1f3f5',\r\n        '#e9ecef',\r\n        '#dee2e6',\r\n        '#ced4da',\r\n        '#adb5bd',\r\n        '#868e96',\r\n        '#495057',\r\n        '#343a40',\r\n        '#212529',\r\n    ],\r\n    cyan: [\r\n        '#e3fafc',\r\n        '#c5f6fa',\r\n        '#99e9f2',\r\n        '#66d9e8',\r\n        '#3bc9db',\r\n        '#22b8cf',\r\n        '#15aabf',\r\n        '#1098ad',\r\n        '#0c8599',\r\n        '#0b7285',\r\n    ],\r\n};\r\n\r\nexport default palette;","import React from \"react\";\r\nimport styled, {css} from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    \r\n    background: ${palette.gray[8]};\r\n    &:hover {\r\n        background: ${palette.gray[6]};\r\n    }\r\n    ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n            padding-top: 0.75rem;\r\n            padding-bottom: 0.75rem;\r\n            width: 100%;\r\n            font-size: 1.125rem;\r\n        `\r\n    }\r\n    ${props =>\r\n    props.cyan &&\r\n    css`\r\n            background: ${palette.cyan[5]};\r\n            &:hover {\r\n                background: ${palette.cyan[4]};\r\n            }\r\n        `\r\n    }\r\n    ${props =>\r\n    props.marginTop &&\r\n    css`\r\n            margin-top: ${props.marginTop};\r\n        `\r\n    }\r\n    &:disabled {\r\n        background: ${palette.gray[3]};\r\n        color: ${palette.gray[5]};\r\n        cursor: not-allowed;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n    return props.to ? (\r\n        <StyledLink {...props} cyan={props.cyan ? 1 : 0}/>\r\n    ) : (\r\n        <StyledButton {...props}/>\r\n    )\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Responsive from \"./Responsive\";\r\nimport Button from \"./Button\";\r\n\r\nconst StyledHeader = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    background: white;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\n// Responsive 컴포넌트에 스타일을 추가해서 새로운 컴포넌트 생성\r\nconst Wrapper = styled(Responsive)`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .logo {\r\n        font-size: 1.125rem;\r\n        font-weight: 800;\r\n        letter-spacing: 2px;\r\n    }\r\n    .right {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\n// Header가 fixed이기 때문에 콘텐츠를 4rem 아래에 나타나도록 해 주는 컴포넌트\r\nconst Spacer = styled.div`\r\n    height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    font-weight: 800;\r\n    margin-right: 1rem;\r\n`;\r\n\r\nconst Header = ({user, onLogout}) => {\r\n    return (\r\n        <>\r\n            <StyledHeader>\r\n                <Wrapper>\r\n                    <Link to={\"/\"} className={\"logo\"}>\r\n                        MineSweeper\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className={\"right\"}>\r\n                            <UserInfo>{user.username}</UserInfo>\r\n                            <Button onClick={onLogout}>로그아웃</Button>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={\"right\"}>\r\n                            <Button to={\"/login\"}>로그인</Button>\r\n                        </div>\r\n                    )}\r\n                </Wrapper>\r\n            </StyledHeader>\r\n            <Spacer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from \"./client\";\r\n\r\n// 로그인 api 요청\r\nexport const login = ({username, password}) =>\r\n    client.post('/api/auth/login', {username, password});\r\n\r\n// 회원가입 api 요청\r\nexport const register = ({username, password}) =>\r\n    client.post('/api/auth/register', {username, password});\r\n\r\n// 로그인 확인 api 요청\r\nexport const check = () =>\r\n    client.get('/api/auth/check');\r\n\r\n// 로그아웃\r\nexport const logout = () =>\r\n    client.post('/api/auth/logout');\r\n","import {createAction, handleActions} from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\n// 요청을 위한 액션 타입(requestType)을 payload로 설정함\r\n\r\nexport const startLoading = createAction(\r\n    START_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n    FINISH_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nexport default handleActions(\r\n    {\r\n        [START_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: true,\r\n        }),\r\n        [FINISH_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: false,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import {call, put} from 'redux-saga/effects';\r\nimport {startLoading, finishLoading} from \"../modules/loading\";\r\n\r\nexport const createRequsetActionType = type => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return function* (action) {\r\n        yield put(startLoading(type));\r\n        try {\r\n            const response = yield call(request, action.payload);\r\n            yield put({\r\n                type: SUCCESS,\r\n                payload: response.data,\r\n                meta: response,\r\n            });\r\n        } catch (e) {\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: e,\r\n                error: true,\r\n            });\r\n        }\r\n        yield put(finishLoading(type));\r\n    };\r\n}","import {createAction, handleActions} from 'redux-actions';\r\nimport {takeLatest, call} from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequsetActionType('user/CHECK');\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n    try {\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n        yield call(authAPI.logout); // logout api 호출\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [TEMP_SET_USER]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_SUCCESS]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            checkError: error,\r\n        }),\r\n        [LOGOUT]: state => ({\r\n           ...state,\r\n           user: null,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Header from \"../../components/common/Header\";\r\nimport {logout} from \"../../modules/user\";\r\n\r\nconst HeaderContainer = () => {\r\n    const {user} = useSelector(({user}) => ({user: user.user}));\r\n    const dispatch = useDispatch();\r\n    const onLogout = () => {\r\n        dispatch(logout());\r\n    };\r\n    return <Header user={user} onLogout={onLogout}/>\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledSubInfo = styled.div`\r\n    ${props =>\r\n        props.hasMarginTop &&\r\n        css`\r\n            margin-top: 1rem;\r\n        `\r\n    }\r\n    color: ${palette.gray[6]};\r\n    \r\n    span + span:before {\r\n        color: ${palette.gray[5]};\r\n        padding: 0 0.25rem;\r\n        content: '\\\\\\\\B7'; /* 가운뎃점 문자 */\r\n    }\r\n`;\r\n\r\nconst SubInfo = ({username, publishedDate, hasMarginTop}) => {\r\n    return (\r\n        <StyledSubInfo hasMarginTop={hasMarginTop}>\r\n            <span>\r\n                <b>\r\n                    <Link to={`/@${username}`}>{username}</Link>\r\n                </b>\r\n                <span>{new Date(publishedDate).toLocaleDateString()}</span>\r\n            </span>\r\n        </StyledSubInfo>\r\n    )\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTags = styled.div`\r\n    margin-top: 0.5rem;\r\n    .tag{\r\n        display: inline-block;\r\n        color: ${palette.gray[7]};\r\n        text-decoration: none;\r\n        margin-right: 0.5rem;\r\n        &:hover {\r\n            color: ${palette.cyan[6]}\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tags = ({tags}) => {\r\n    return (\r\n        <StyledTags>\r\n            {tags.map(tag => (\r\n                <Link className={\"tag\"} to={`/?tag=${tag}`} key={tag}>\r\n                    #{tag}\r\n                </Link>\r\n            ))}\r\n        </StyledTags>\r\n    )\r\n};\r\n\r\nexport default Tags;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostList = styled(Responsive)`\r\n    margin-top: 3rem\r\n`;\r\n\r\nconst GameStartButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst StyledPostItem = styled.div`\r\n    padding: 3rem 0;\r\n    &:first-child {\r\n        padding-top: 0;\r\n    }\r\n    & + & {\r\n        border-top: 1px solid ${palette.gray[2]};\r\n    }\r\n    \r\n    h2 {\r\n        font-size: 2rem;\r\n        margin-bottom: 0;\r\n        margin-top: 0;\r\n        &:hover {\r\n            color: ${palette.gray[6]};\r\n        }\r\n        p {\r\n            margin-top: 2rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PostItem = ({post}) => {\r\n    const {_id, title, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostItem>\r\n            <h2>\r\n                <Link to={`/@${user.username}/${_id}`}>\r\n                    {title}\r\n                </Link>\r\n            </h2>\r\n            <SubInfo\r\n                username={user.username}\r\n                publishedDate={publishedDate}\r\n            />\r\n            <Tags\r\n                tags={tags}\r\n            />\r\n            <p>{body}</p>\r\n        </StyledPostItem>\r\n    )\r\n};\r\n\r\nconst PostList = ({posts, error, loading, showStartButton}) => {\r\n    if (error) {\r\n        return <StyledPostList>에러가 발생했습니다!</StyledPostList>\r\n    }\r\n\r\n    return (\r\n        <StyledPostList>\r\n            <GameStartButtonWrapper>\r\n                {showStartButton && (\r\n                    <Button to={\"/game\"} cyan>\r\n                        게임 시작!\r\n                    </Button>\r\n                )}\r\n            </GameStartButtonWrapper>\r\n            <div>\r\n                {!loading && posts && (\r\n                    posts.map(post => (\r\n                        <PostItem post={post} key={post._id}/>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </StyledPostList>\r\n    )\r\n};\r\n\r\nexport default PostList;\r\n\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    LIST_POSTS,\r\n    LIST_POSTS_SUCCESS,\r\n    LIST_POSTS_FAILURE,\r\n] = createRequsetActionType('posts/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(LIST_POSTS, ({page, username, tag}) => ({\r\n        page,\r\n        username,\r\n        tag,\r\n    }),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postAPI.listPosts);\r\n\r\nexport function* postsSaga() {\r\n    yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error: null,\r\n    lastPage: 1,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts, meta: response}) => ({\r\n            ...state,\r\n            posts,\r\n            lastPage: parseInt(response.headers['last-page'], 10)\r\n        }),\r\n        [LIST_POSTS_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error: error,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n","import qs from 'qs';\r\nimport client from './client';\r\n\r\nexport const listPosts = ({page, username, tag}) => {\r\n    const queryString = qs.stringify({\r\n        page,\r\n        username,\r\n        tag,\r\n    });\r\n\r\n    return client.get(`/api/posts${queryString}`);\r\n};\r\n\r\nexport const readPost = id => client.get(`/api/posts/${id}`);\r\n\r\nexport const writePost = ({title, body, tags}) =>\r\n    client.post('/api/posts', {title, body, tags});\r\n\r\n\r\nexport const updatePost = ({id, title, body, tags}) =>\r\n    client.patch(`/api/posts/${id}`, {\r\n        title,\r\n        body,\r\n        tags,\r\n    });\r\n\r\nexport const removePost = id => client.delete(`/api/posts/${id}`);\r\n","import React, {useEffect} from \"react\";\r\nimport qs from 'qs';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PostList from \"../../components/post/PostList\";\r\nimport {listPosts} from \"../../modules/posts\";\r\n\r\nconst PostListContainer = ({match, location}) => {\r\n    const dispatch = useDispatch();\r\n    const {posts, error, loading, user} = useSelector(\r\n        ({posts, loading, user}) => ({\r\n            posts: posts.posts,\r\n            error: posts.error,\r\n            loading: loading['posts/LIST_POSTS'],\r\n            user: user.user,\r\n        }),\r\n    );\r\n\r\n    useEffect(() => {\r\n        const {username} = match.params;\r\n        const {page, tag} = qs.parse(location.search, {\r\n            ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({page, username, tag}));\r\n    }, [dispatch, match.params, location.search]);\r\n\r\n    return (\r\n        <PostList\r\n            posts={posts}\r\n            error={error}\r\n            loading={loading}\r\n            showStartButton={user}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport qs from 'qs';\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledPagination = styled.div`\r\n    width: 320px;\r\n    margin: 0 auto;\r\n    display: felx;\r\n    justify-content: space-between;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst PageNumber = styled.div``;\r\n\r\nconst buildLink = ({page, username, tag}) => {\r\n    const query = qs.stringify({page, tag});\r\n    return username ? `/@${username}?${query}` : `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({page, lastPage, username, tag}) => {\r\n    return (\r\n        <StyledPagination>\r\n            <Button\r\n                disabled={page === 1}\r\n                to={\r\n                    page === 1 ? undefined : buildLink({username, tag, page: page - 1})\r\n                }\r\n            >\r\n                이전\r\n            </Button>\r\n            <PageNumber>{page}</PageNumber>\r\n            <Button\r\n                disabled={lastPage === 0 || page === lastPage}\r\n                to={\r\n                    lastPage === 0\r\n                    ? undefined\r\n                    : page === lastPage\r\n                        ? undefined\r\n                        : buildLink({username, tag, page: page + 1})\r\n                }\r\n            >\r\n                다음\r\n            </Button>\r\n        </StyledPagination>\r\n    )\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport Pagination from \"../../components/post/Pagination\";\r\n\r\nconst PaginationContainer = ({match, location}) => {\r\n    const {posts, loading, lastPage} = useSelector(({posts, loading}) => ({\r\n        posts: posts.posts,\r\n        loading: loading['posts/LIST_POSTS'],\r\n        lastPage: posts.lastPage,\r\n    }));\r\n\r\n    if (!posts || loading) return null;\r\n\r\n    const {username} = match.params;\r\n    const {page = 1, tag} = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true,\r\n    });\r\n\r\n    return (\r\n        <Pagination\r\n            page={page}\r\n            lastPage={lastPage}\r\n            username={username}\r\n            tag={tag}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostListContainer from \"../container/posts/PostListContainer\";\r\nimport PaginationContainer from \"../container/posts/PaginationContainer\";\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer/>\r\n            <PostListContainer/>\r\n            <PaginationContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostListPage;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// 회원가입 및 로그인 페이지의 레이아웃 컴포넌트\r\nconst StyledAuthTemplate = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: ${palette.gray[2]};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display: block;\r\n        padding-bottom: 2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n    padding: 2rem;\r\n    width: 360px;\r\n    background: white;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}) => {\r\n    return (\r\n        <StyledAuthTemplate>\r\n            <WhiteBox>\r\n                <div className={\"logo-area\"}>\r\n                    <Link to={\"/\"}>MineSweeper</Link>\r\n                </div>\r\n                {children}\r\n            </WhiteBox>\r\n        </StyledAuthTemplate>\r\n    )\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport produce from \"immer\";\r\nimport {takeLatest} from 'redux-saga/effects';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequsetActionType('auth/REGISTER');\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequsetActionType('auth/LOGIN');\r\n\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    ({form, key, value}) => ({\r\n        form,   // register, login\r\n        key,    // username, password, passwordConfirm\r\n        value,  // 입력된 값\r\n    })\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\r\nexport const register = createAction(REGISTER, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\nexport const login = createAction(LOGIN, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n    yield takeLatest(REGISTER, registerSaga);\r\n    yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n    register: {\r\n        username: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    },\r\n    login: {\r\n        username: '',\r\n        password: '',\r\n    },\r\n    auth: null,\r\n    authError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) =>\r\n            produce(state, draft => {\r\n                draft[form][key] = value;\r\n            }),\r\n        [INITIALIZE_FORM]: (state, {payload: form}) => ({\r\n            ...state,\r\n            [form]: initialState[form],\r\n        }),\r\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\n\r\n// 회원가입/로그인 폼 컴포넌트\r\nconst StyledAuthForm = styled.div`\r\n    h3 {\r\n        margin: 0;\r\n        color: ${palette.gray[8]};\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\n// 스타일링된 input\r\nconst StyledInput = styled.input`\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[5]};\r\n    padding-bottom: 0.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    &:focus {\r\n        color: $oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\n// 회원가입/로그인 링크\r\nconst Footer = styled.div`\r\n    margin-top: 2rem;\r\n    text-align: right;\r\n    a {\r\n        color: ${palette.gray[6]};\r\n        text-decoration: underline;\r\n        $:hover {\r\n        color: ${palette.gray[9]};\r\n    }\r\n`;\r\n\r\nconst textMap = {\r\n    login: '로그인',\r\n    register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\r\n    const text = textMap[type];\r\n\r\n    return (\r\n        <StyledAuthForm>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <StyledInput\r\n                    autoComplete={\"username\"}\r\n                    name={\"username\"}\r\n                    placeholder={\"아이디\"}\r\n                    onChange={onChange}\r\n                    value={form.username}\r\n                />\r\n                <StyledInput\r\n                    autoComplete={\"new-password\"}\r\n                    name={\"password\"}\r\n                    placeholder={\"비밀번호\"}\r\n                    type={\"password\"}\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                />\r\n                {type === 'register' && (\r\n                    <StyledInput\r\n                        autoComplete={\"new-password\"}\r\n                        name={\"passwordConfirm\"}\r\n                        placeholder={\"비밀번호 확인\"}\r\n                        type={\"password\"}\r\n                        onChange={onChange}\r\n                        value={form.passwordConfirm}\r\n                    />\r\n                )}\r\n\r\n                {error && <ErrorMessage>{error}</ErrorMessage>}\r\n                <Button cyan fullWidth marginTop={\"1rem\"}>\r\n                    {text}\r\n                </Button>\r\n            </form>\r\n            <Footer>\r\n                {type === 'login' ? (\r\n                    <Link to={\"/register\"}>회원가입</Link>\r\n                ) : (\r\n                    <Link to={\"/login\"}>로그인</Link>\r\n                )}\r\n            </Footer>\r\n        </StyledAuthForm>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeField, initializeForm, register} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst RegisterForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.register,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'register',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    };\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password, passwordConfirm} = form;\r\n        if ([username, password, passwordConfirm].includes('')) {\r\n            setError('빈 칸을 모두 입력하세요');\r\n            return;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            setError('비밀번호가 일치하지 않습니다!');\r\n            dispatch(changeField({form: 'register', key: 'password', value: ''}));\r\n            dispatch(changeField({form: 'register', key: 'passwordConfirm', value: ''}));\r\n            return;\r\n        }\r\n        dispatch(register({username, password}));\r\n    };\r\n\r\n    // 컴포넌트가 처음 렌더링될 떼 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(initializeForm('register'));\r\n    }, [dispatch]);\r\n\r\n    // 회원가입 성공/실패 처리\r\n    useEffect(() => {\r\n        if (authError) {\r\n            if (authError.response.status === 409) {\r\n                setError('이미 존재하는 계정입니다');\r\n                return;\r\n            }\r\n            setError('회원가입 실패');\r\n            return;\r\n        }\r\n        if (auth) {\r\n            console.log('성공');\r\n            console.log(auth);\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"register\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport RegisterForm from \"../container/auth/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm/>\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeField, initializeForm, login} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst LoginForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.login,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'login',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    };\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password} = form;\r\n        dispatch(login({username, password}));\r\n    };\r\n\r\n    // 컴포넌트가 처음 렌더링될 떼 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(initializeForm('login'));\r\n    }, [dispatch]);\r\n\r\n    // 로그인 성공/실패 처리\r\n    useEffect(() => {\r\n        if (authError) {\r\n            console.log('오류');\r\n            console.log(authError);\r\n            setError('로그인 실패');\r\n            return;\r\n        }\r\n        if (auth) {\r\n            console.log('성공');\r\n            console.log(auth);\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"login\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport LoginForm from \"../container/auth/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm />\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import {createAction, handleActions} from 'redux-actions';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    READ_POST,\r\n    READ_POST_SUCCESS,\r\n    READ_POST_FAILURE\r\n] = createRequsetActionType('post/POST_READ');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 지우기\r\n\r\nexport const readPost = createAction(READ_POST, id => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\n\r\nexport function* postSaga() {\r\n    yield takeLatest(READ_POST, readPostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    post: null,\r\n    error: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [READ_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n        }),\r\n        [READ_POST_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error: error,\r\n        }),\r\n        [UNLOAD_POST]: () => initialState,\r\n    },\r\n    initialState,\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostViewer = styled(Responsive)`\r\n    margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n    border-bottom: 1px solid ${palette.gray[2]};\r\n    padding-bottom: 3rem;\r\n    margin-bottom: 3rem;\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    font-size: 1.3125rem;\r\n    color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({post, error, loading, actionButtons}) => {\r\n    if (error) {\r\n        if (error.response && error.response.status === 404) {\r\n            return <StyledPostViewer> 포스트가 존재하지 않습니다!</StyledPostViewer>\r\n        }\r\n        return <StyledPostViewer>오류 발생!!</StyledPostViewer>\r\n    }\r\n\r\n    if (loading || !post) {\r\n        return null;\r\n    }\r\n\r\n    const {title, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostViewer>\r\n            <PostHead>\r\n                <h1>{title}</h1>\r\n                <SubInfo\r\n                    username={user.username}\r\n                    publishedDate={publishedDate}\r\n                    hasMarginTop\r\n                />\r\n                <Tags tags={tags}/>\r\n            </PostHead>\r\n            {actionButtons}\r\n            <PostContent\r\n                dangerouslySetInnerHTML={{__html: body}}\r\n            />\r\n        </StyledPostViewer>\r\n    )\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledAskModal = styled.div`\r\n    width: 320px;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.125);\r\n    h2 {\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    p {\r\n        margin-bottom: 3rem;\r\n    }\r\n    .buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2rem;\r\n    & + & {\r\n        margin-left: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst AskModal = (\r\n    {\r\n        visible,\r\n        title,\r\n        description,\r\n        confirmText = '확인',\r\n        cancelText = '취소',\r\n        clear,\r\n        onConfirm,\r\n        onCancel,\r\n    }\r\n) => {\r\n    if (!visible) return null;\r\n    return (\r\n        <Fullscreen>\r\n            <StyledAskModal>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className={\"buttons\"}>\r\n                    <StyledButton onClick={onCancel}>\r\n                        {cancelText}\r\n                    </StyledButton>\r\n                    {clear === 'Game Clear!!!'\r\n                        ? (\r\n                            <StyledButton to={\"/write\"} cyan>\r\n                                {confirmText}\r\n                            </StyledButton>\r\n                        )\r\n                        : (\r\n                            <StyledButton onClick={onConfirm} cyan>\r\n                                {confirmText}\r\n                            </StyledButton>\r\n                        )}\r\n                </div>\r\n            </StyledAskModal>\r\n        </Fullscreen>\r\n    )\r\n};\r\n\r\nexport default AskModal;","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={\"포스트 삭제\"}\r\n            description={\"포스트를 정말 삭제하실건가요?\"}\r\n            confirmText={\"삭제\"}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport AskRemoveModal from \"./AskRemoveModal\";\r\n\r\nconst StyledPostActionButtons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 2rem;\r\n    margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    color: ${palette.gray[6]};\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.cyan[7]};\r\n    }\r\n    & + & {\r\n        margin-left: 0.25rem;\r\n    }\r\n`;\r\n\r\nconst PostActionButtons = ({onEdit, onRemove}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const onRemoveClick = () => {\r\n        setModal(true);\r\n    };\r\n    const onConfirm = () => {\r\n        setModal(false);\r\n        onRemove();\r\n    };\r\n    const onCancel = () => {\r\n        setModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledPostActionButtons>\r\n                <ActionButton onClick={onEdit}>수정</ActionButton>\r\n                <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n            </StyledPostActionButtons>\r\n            <AskRemoveModal\r\n                visible={modal}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostActionButtons;\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST'; // 포스트 수정시 포스트 내용 세팅\r\nconst [\r\n    WRITE_POST,\r\n    WRITE_POST_SUCCESS,\r\n    WRITE_POST_FAILURE\r\n] = createRequsetActionType('write/WRITE_POST');\r\nconst [\r\n    UPDATE_POST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPDATE_POST_FAILURE\r\n] = createRequsetActionType('write/UPDATE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({key, value}) => ({\r\n    key,\r\n    value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\r\nexport const writePost = createAction(WRITE_POST, ({title, body, tags}) => ({\r\n    title,\r\n    body,\r\n    tags,\r\n}));\r\nexport const updatePost = createAction(UPDATE_POST,\r\n    ({id, title, body, tags}) => ({\r\n        id,\r\n        title,\r\n        body,\r\n        tags,\r\n    }));\r\n\r\nconst writePostSaga = createRequestSaga(writePost, postAPI.writePost);\r\nconst updatePostSaga = createRequestSaga(updatePost, postAPI.updatePost);\r\n\r\nexport function* writeSaga() {\r\n    yield takeLatest(WRITE_POST, writePostSaga);\r\n    yield takeLatest(UPDATE_POST, updatePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    title: '',\r\n    body: '',\r\n    tags: [],\r\n    post: null,\r\n    postError: null,\r\n    originalPostId: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE]: state => initialState,\r\n        [CHANGE_FIELD]: (state, {payload: {key, value}}) => ({\r\n            ...state,\r\n            [key]: value,\r\n        }),\r\n        [WRITE_POST]: state => ({\r\n            ...state,\r\n            post: null,\r\n            postError: null,\r\n        }),\r\n        [WRITE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n        }),\r\n        [WRITE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError: postError,\r\n        }),\r\n        [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\r\n            ...state,\r\n            title: post.title,\r\n            body: post.body,\r\n            tags: post.tags,\r\n            originalPostId: post._id,\r\n\r\n        }),\r\n        [UPDATE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n        }),\r\n        [UPDATE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError: postError,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {readPost, unloadPost} from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostActionButtons from \"../../components/post/PostActionButtons\";\r\nimport {setOriginalPost} from \"../../modules/write\";\r\nimport {removePost} from \"../../lib/api/posts\";\r\n\r\nconst PostViewerContainer = ({match, history}) => {\r\n    const {postId} = match.params;\r\n    const dispatch = useDispatch();\r\n    const {post, error, loading, user} = useSelector(({post, loading, user}) => ({\r\n        post: post.post,\r\n        error: post.error,\r\n        loading: loading['post/READ_POST'],\r\n        user: user.user,\r\n    }));\r\n    const ownPost = (user && user._id) === (post && post.user._id);\r\n\r\n    // 처음 마운트될 때 포스트 읽기 API 요청\r\n    useEffect(() => {\r\n        dispatch(readPost(postId));\r\n        // 언마운트될 때 리덕스에서 포스트 데이터 지우기\r\n        return () => {\r\n            dispatch(unloadPost());\r\n        }\r\n    }, [dispatch, postId]);\r\n\r\n    const onEdit = () => {\r\n        dispatch(setOriginalPost(post));\r\n        history.push('/write');\r\n    };\r\n\r\n    const onRemove = async () => {\r\n        try {\r\n            await removePost(postId);\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PostViewer\r\n            post={post}\r\n            error={error}\r\n            loading={loading}\r\n            actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove}/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostViewerContainer from \"../container/post/PostViewerContainer\";\r\n\r\nconst PostPage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <PostViewerContainer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostPage;","import React, {useRef, useEffect} from \"react\";\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\n\r\nconst StyledEditor = styled(Responsive)`\r\n    padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n    font-size: 3rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[4]};\r\n    margin-bottom: 2rem;\r\n    width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n    /* 에디터 최소 크기 지정 및 padding 제거 */\r\n    .qu-editor {\r\n        padding: 0;\r\n        min-height: 320px;\r\n        font-size: 1.125rem;\r\n        line-height: 1.5;\r\n    }\r\n    .ql-editor.ql-blank:before {\r\n        left: 0px;\r\n    }\r\n`;\r\n\r\nconst Editor = ({title, body, onChangeField}) => {\r\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n    const quillIstance = useRef(null); // Quill 인스턴스를 설정\r\n\r\n    useEffect(() => {\r\n        quillIstance.current = new Quill(quillElement.current, {\r\n            theme: 'bubble',\r\n            placeholder: '내용을 작성하세요!',\r\n            modules: {\r\n                // https://quilljs.com/docs/modules/toolbar/ 참고하기\r\n                toolbar: [\r\n                    [{header: '1'}, {header: '2'}],\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    [{list: 'ordered'}, {list: 'bullet'}],\r\n                    ['blockquote', 'code-block', 'link', 'image'],\r\n                ],\r\n            },\r\n        });\r\n\r\n        // quill에 text-change 이벤트 핸들러 등록\r\n        // 참고: https://quilljs.com/docs/api/#event\r\n        const quill = quillIstance.current;\r\n        quill.on('text-change', (delta, oldDelta, source) => {\r\n            if (source === 'user') {\r\n                onChangeField({key: 'body', value: quill.root.innerHTML});\r\n            }\r\n        })\r\n    }, [onChangeField]);\r\n\r\n    const mounted = useRef(false);\r\n    useEffect(() => {\r\n        if (mounted.current) return;\r\n        mounted.current = true;\r\n        quillIstance.current.root.innerHTML = body;\r\n    }, [body]);\r\n\r\n    const onChangeTitle = e => {\r\n       onChangeField({key: 'title', value: e.target.value});\r\n    };\r\n\r\n    return (\r\n        <StyledEditor>\r\n            <TitleInput\r\n                value={title}\r\n                onChange={onChangeTitle}\r\n                placeholder={\"제목을 입력하세요!\"}\r\n            />\r\n            <QuillWrapper>\r\n                <div ref={quillElement}/>\r\n            </QuillWrapper>\r\n        </StyledEditor>\r\n    )\r\n};\r\n\r\nexport default Editor;\r\n","import React, {useEffect, useCallback} from \"react\";\r\nimport Editor from \"../../components/write/Editor\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {initialize, changeField} from \"../../modules/write\";\r\n\r\nconst EditorContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {title, body} = useSelector(({write}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n    }));\r\n    const onChangeField = useCallback(payload => dispatch(changeField(payload)),\r\n        [dispatch]);\r\n\r\n    // 페이지를 떠날 때 데이터 초기화\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(initialize());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return <Editor onChangeField={onChangeField} title={title} body={body}/>;\r\n};\r\n\r\nexport default EditorContainer;\r\n","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTagBox = styled.div`\r\n    width: 100%;\r\n    border-top: 1px solid ${palette.gray[2]};\r\n    padding-top: 2rem;\r\n    \r\n    h4 {\r\n        color: ${palette.gray[8]};\r\n        margin-top: 0;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 256px;\r\n    border: 1px solid ${palette.gray[9]};\r\n    input, button {\r\n        outline: none;\r\n        border: none;\r\n        font-size: 1rem;\r\n    }\r\n    \r\n    input {\r\n        padding: 0.5rem;\r\n        flex: 1;\r\n        min-width: 0;\r\n    }\r\n    \r\n    button {\r\n        cursor: pointer;\r\n        padding: 0 1rem;\r\n        border: none;\r\n        background: ${palette.gray[8]};\r\n        color: white;\r\n        font-weight: bold;\r\n        &:hover {\r\n            background: ${palette.gray[6]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n    margin-right: 0.5rem;\r\n    color: ${palette.gray[6]};\r\n    cursor: pointer;\r\n    $:hover {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst StyledTagList = styled.div`\r\n    display: flex;\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({tag, onRemove}) =>\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>);\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n    <StyledTagList>\r\n        {tags.map(tag => (\r\n            <TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n        ))}\r\n    </StyledTagList>\r\n));\r\n\r\nconst TagBox = ({tags, onChangeTags}) => {\r\n    const [input, setInput] = useState('');\r\n    const [localTags, setLocalTags] = useState([]);\r\n\r\n    const insertTag = useCallback(tag => {\r\n        if (!tag || localTags.includes(tag)) return;\r\n        const newTags = [...localTags, tag];\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onRemove = useCallback(tag => {\r\n        const newTags = localTags.filter(t => t !== tag);\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onChange = useCallback(e => {\r\n        setInput(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        insertTag(input.trim());\r\n        setInput('');\r\n    }, [input, insertTag]);\r\n\r\n    useEffect(() => {\r\n        setLocalTags(tags);\r\n    }, [tags]);\r\n\r\n    return (\r\n        <StyledTagBox>\r\n            <h4>태그</h4>\r\n            <TagForm onSubmit={onSubmit}>\r\n                <input\r\n                    value={input}\r\n                    onChange={onChange}\r\n                    placeholder={\"태그를 입력하세요\"}\r\n                />\r\n                <button type={\"submit\"}>추가</button>\r\n            </TagForm>\r\n            <TagList tags={localTags} onRemove={onRemove}/>\r\n        </StyledTagBox>\r\n    );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport TagBox from \"../../components/write/TagBox\";\r\nimport {changeField} from \"../../modules/write\";\r\n\r\nconst TagBoxContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const tags = useSelector(state => state.write.tags);\r\n\r\n    const onChangeTags = newTags => {\r\n        dispatch(changeField({\r\n                key: 'tags',\r\n                value: newTags,\r\n            }),\r\n        );\r\n    };\r\n\r\n    return <TagBox onChangeTags={onChangeTags} tags={tags}/>;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledWriteActionButtons = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    button + button {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\n// TagBox에서 사용하는 버튼과 같은 높이로 설정한 후 서로간의 여백 지정\r\nconst StyledButton = styled(Button)`\r\n    height: 2.125rem;\r\n    & + & {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst WriteActionButtons = ({onCancel, onPublished, isEdit}) => {\r\n    return (\r\n        <StyledWriteActionButtons>\r\n            <StyledButton cyan onClick={onPublished}>\r\n                포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n            <StyledButton onClick={onCancel}>\r\n                취소\r\n            </StyledButton>\r\n        </StyledWriteActionButtons>\r\n    )\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {writePost, updatePost} from \"../../modules/write\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButton\";\r\n\r\nconst WriteActionButtonsContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {title, body, tags, post, postError, originalPostId} = useSelector(({write}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n        tags: write.tags,\r\n        post: write.post,\r\n        postError: write.postError,\r\n        originalPostId: write.originalPostId,\r\n    }));\r\n\r\n    const onPublish = () => {\r\n        if (originalPostId) {\r\n            dispatch(\r\n                updatePost(\r\n                    {\r\n                        id: originalPostId,\r\n                        title,\r\n                        body,\r\n                        tags,\r\n                    }\r\n                )\r\n            );\r\n            return;\r\n        }\r\n        dispatch(\r\n            writePost({\r\n                title,\r\n                body,\r\n                tags\r\n            }),\r\n        );\r\n    };\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            const {_id, user} = post;\r\n            history.push(`/@${user.username}/${_id}`);\r\n        }\r\n\r\n        if (postError) {\r\n            console.log(postError);\r\n        }\r\n    }, [history, post, postError]);\r\n\r\n    return (\r\n        <WriteActionButtons\r\n            onPublished={onPublish}\r\n            onCancel={onCancel}\r\n            isEdit={!!originalPostId}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from \"react\";\r\nimport Responsive from \"../components/common/Responsive\";\r\nimport EditorContainer from \"../container/write/EditorContainer\";\r\nimport TagBoxContainer from \"../container/write/TagBoxContainer\";\r\nimport WriteActionButtonsContainer from \"../container/write/WriteActionButtonsContainer\";\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <Responsive>\r\n            <EditorContainer/>\r\n            <TagBoxContainer/>\r\n            <WriteActionButtonsContainer/>\r\n        </Responsive>\r\n    )\r\n};\r\n\r\nexport default WritePage;","import {createAction, handleActions} from \"redux-actions\";\r\nimport produce from \"immer\";\r\n\r\nconst INITIALIZE = 'game/INITIALIZE';\r\nconst SET_LEVEL = 'game/SET_LEVEL';\r\nconst START_GAME = 'game/START_GAME';\r\nconst OPEN_BLOCK = 'game/OPEN_BLOCK';\r\nconst SET_FLAG = 'game/SET_FLAG';\r\nconst FINISH_GAME = 'game/FINISH_GAME';\r\n\r\nexport const initializeGame = createAction(INITIALIZE);\r\nexport const setLevel = createAction(SET_LEVEL, level => level);\r\nexport const startGame = createAction(START_GAME,\r\n    ({ground, size, width, mineNum}) => ({\r\n        ground,\r\n        size,\r\n        width,\r\n        mineNum,\r\n    }));\r\nexport const openBlock = createAction(OPEN_BLOCK, id => id);\r\nexport const setFlag = createAction(SET_FLAG, id => id);\r\nexport const finishGame = createAction(FINISH_GAME, clear => clear);\r\n\r\nconst initialState = {\r\n    level: '쉬움',\r\n    isStart: false,\r\n    isFinish: false,\r\n    isClear: '',\r\n    ground: [],\r\n    size: 0,\r\n    width: 0,\r\n    mineNum: 0,\r\n    openBlockNum: 0,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE]: state => initialState,\r\n        [SET_LEVEL]: (state, {payload: level}) => ({\r\n            ...state,\r\n            level: level\r\n        }),\r\n        [START_GAME]: (state, {payload: {ground, size, width, mineNum}}) => ({\r\n            ...state,\r\n            isStart: true,\r\n            ground: ground,\r\n            size: size,\r\n            width: width,\r\n            mineNum: mineNum,\r\n        }),\r\n        [OPEN_BLOCK]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = false;\r\n                draft.ground[id].isOpen = true;\r\n                draft.openBlockNum++;\r\n            }),\r\n        [SET_FLAG]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = !draft.ground[id].flagSet;\r\n            }),\r\n        [FINISH_GAME]: (state, {payload: clear}) =>\r\n            produce(state, draft => {\r\n                draft.ground.map(space => space.val === 'X' ? space.isOpen = true : space);\r\n                draft.isFinish = true;\r\n                draft.isClear = clear;\r\n            }),\r\n    }, initialState\r\n);\r\n","import React from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport './GameStart.scss'\r\n\r\nconst GameStart = ({onStart, onSetLevel}) => {\r\n\r\n    return (\r\n        <div id={\"start-root\"}>\r\n            <div id={\"start-select-div\"}>\r\n                <label>\r\n                    <h3>게임 난이도</h3>\r\n                </label>\r\n                <select\r\n                    name={\"level\"}\r\n                    id={\"level\"}\r\n                    onChange={onSetLevel}\r\n                >\r\n                    <option value={\"쉬움\"}>쉬움</option>\r\n                    <option value={\"보통\"}>보통</option>\r\n                    <option value={\"어려움\"}>어려움</option>\r\n                </select>\r\n            </div>\r\n            <div id={\"start-btn-div\"}>\r\n                <Button onClick={onStart}>시작</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameStart;\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setLevel, startGame} from \"../../modules/game\";\r\nimport GameStart from \"../../components/minesweeper/GameStart\";\r\n\r\nconst GameStartContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {level} = useSelector(({game}) => ({\r\n        level: game.level,\r\n    }));\r\n\r\n    const onStart = useCallback(()  => {\r\n        let mineNum, size, width = 0;\r\n        let ground = [];\r\n\r\n        switch (level) {\r\n            case '쉬움':\r\n                mineNum = 10;\r\n                size = 80;\r\n                width = 10;\r\n                break;\r\n            case '보통':\r\n                mineNum = 40;\r\n                size = 252;\r\n                width = 18;\r\n                break;\r\n            case '어려움':\r\n                mineNum = 50;\r\n                size = 480;\r\n                width = 24;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            ground.push({id: i, val: 0, isOpen: false, flagSet: false});\r\n        }\r\n\r\n        for (let i = 0; i < mineNum; i++) {\r\n            let idx = Math.floor(Math.random() * size);\r\n            let range = [\r\n                -width - 1,\r\n                -width,\r\n                -width + 1,\r\n                -1,\r\n                1,\r\n                width - 1,\r\n                width,\r\n                width + 1\r\n            ];\r\n\r\n            if (ground[idx].val === 'X') {\r\n                i--;\r\n                continue;\r\n            }\r\n\r\n            ground[idx].val = 'X';\r\n\r\n            for (let i = 0; i < 8; i++) {\r\n                let nearBlock = idx + range[i];\r\n\r\n                if (nearBlock > -1 && nearBlock < size &&\r\n                    ground[nearBlock].val !== 'X' &&\r\n                    !((idx % width === 0 && nearBlock % width === width - 1) ||\r\n                        (idx % width === width - 1 && nearBlock % width === 0))) {\r\n\r\n                    ground[nearBlock].val++;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(\r\n            startGame({\r\n                ground,\r\n                size,\r\n                width,\r\n                mineNum,\r\n            })\r\n        );\r\n    }, [dispatch, level]);\r\n\r\n    const onSetLevel = useCallback(e=> {\r\n        dispatch(setLevel(e.target.value))\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <GameStart\r\n            onStart={onStart}\r\n            onSetLevel={onSetLevel}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GameStartContainer;\r\n","import React from \"react\";\r\nimport classNames from 'classnames';\r\nimport './GameBlock.scss'\r\n\r\nconst GameBlock = ({space, onBlockOpen, onSetFlag}) => {\r\n    return (\r\n        <button\r\n            id={space.id}\r\n            className={classNames('block', space.isOpen ? 'open-block val-' + space.val : 'closed-block')}\r\n            onClick={onBlockOpen}\r\n            onMouseDown={e => onSetFlag(e, space.id)}\r\n            onContextMenu={e => e.preventDefault()}\r\n        >\r\n            {space.isOpen ? space.val > 0 ? space.val : space.val === 'X' && <img src=\"images/mine.png\" alt=\"지뢰\"/> : space.flagSet && '✘' }\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default GameBlock;\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {finishGame, openBlock, setFlag} from \"../../modules/game\";\r\nimport GameBlock from \"../../components/minesweeper/GameBlock\";\r\n\r\nconst GameBlockContainer = ({space}) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        width,\r\n    } = useSelector(({game}) => ({\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        width: game.width,\r\n    }));\r\n\r\n    const onBlockOpen = useCallback(e => {\r\n\r\n        let range = [-width, -1, 1, width, -width - 1, -width + 1, width - 1, width + 1];\r\n        let id = parseInt(e.target.id);\r\n\r\n        if (!(isFinish || ground[id].isOpen)) {\r\n            if (ground[id].val === 'X') {\r\n                dispatch(finishGame('Game Over...'));\r\n            } else if (ground[id].val === 0) {\r\n                let visited = new Array(size).fill(false);\r\n                let queue = [id];\r\n                let zeroBlock = [id];\r\n\r\n                visited[id] = true;\r\n                dispatch(openBlock(id));\r\n\r\n                while (queue.length > 0) {\r\n                    let idx = queue.shift();\r\n\r\n                    for (let i = 0; i < 4; i++) {\r\n                        let nearBlock = idx + range[i];\r\n\r\n                        if (nearBlock > -1 && nearBlock < size &&\r\n                            ground[nearBlock].val === 0 && !visited[nearBlock] &&\r\n                            !((idx % width === 0 && nearBlock % width === width - 1) ||\r\n                                (idx % width === width - 1 && nearBlock % width === 0))) {\r\n                            queue.push(nearBlock);\r\n                            zeroBlock.push(nearBlock);\r\n                            visited[nearBlock] = true;\r\n                            dispatch(openBlock(nearBlock));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                visited = new Array(size).fill(false);\r\n\r\n                while (zeroBlock.length > 0) {\r\n                    let idx = zeroBlock.shift();\r\n\r\n                    for (let i = 0; i < 8; i++) {\r\n                        let nearBlock = idx + range[i];\r\n\r\n                        if (nearBlock > -1 && nearBlock < size &&\r\n                            !visited[nearBlock] &&\r\n                            ground[nearBlock].val > 0 &&\r\n                            !ground[nearBlock].isOpen &&\r\n                            !((idx % width === 0 && nearBlock % width === width - 1) ||\r\n                                (idx % width === width - 1 && nearBlock % width === 0))) {\r\n                            visited[nearBlock] = true;\r\n                            dispatch(openBlock(nearBlock));\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                dispatch(openBlock(id));\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, size, width]);\r\n\r\n    const onSetFlag = useCallback((e, id)  => {\r\n        if (!(isFinish || ground[id].isOpen) && e.button === 2) {\r\n            dispatch(setFlag(id));\r\n        }\r\n    }, [dispatch, isFinish, ground]);\r\n\r\n    return (\r\n        <GameBlock\r\n            space={space}\r\n            onBlockOpen={onBlockOpen}\r\n            onSetFlag={onSetFlag}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(GameBlockContainer);","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRestartModal = ({visible, finishText, description, clear, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={finishText}\r\n            description={description}\r\n            confirmText={finishText}\r\n            clear={clear}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRestartModal;\r\n","import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport GameBlockContainer from \"../../container/minesweeper/GameBlockContainer\";\r\nimport AskRestartModal from \"./AskRestartModal\";\r\nimport Button from \"../common/Button\";\r\nimport './GameBoard.scss'\r\n\r\nconst GameBoard = ({onRestart}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const {\r\n        isFinish,\r\n        isClear,\r\n        ground,\r\n        width,\r\n        mineNum,\r\n    } = useSelector(({game}) => ({\r\n        isFinish: game.isFinish,\r\n        isClear: game.isClear,\r\n        ground: game.ground,\r\n        width: game.width,\r\n        mineNum: game.mineNum,\r\n    }));\r\n    const divWidth = width * 30;\r\n    const Board = styled.div`\r\n            display: inline-block;\r\n            width: ${divWidth}px;\r\n        `;\r\n    const BoardRestart = styled.div`\r\n        width: ${divWidth}px;\r\n    `;\r\n    const onRestartClick = () => {\r\n        setModal(true);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setModal(false);\r\n    };\r\n    const finishText = isClear === 'Game Clear!!!' ? '기록 저장하기' : '다시 시작';\r\n\r\n    return (\r\n        <div id={\"board-root\"}>\r\n            <div id={\"board-minNum-div\"}>\r\n                <h2>{isClear ? isClear : '지뢰 갯수 : ' + mineNum + '개'}</h2>\r\n            </div>\r\n            <Board>\r\n                {\r\n                    ground.map(space => {\r\n                        return <GameBlockContainer\r\n                            key={space.id}\r\n                            space={space}\r\n                        />\r\n                    })\r\n                }\r\n            </Board>\r\n            {isFinish\r\n            &&\r\n            <BoardRestart id={\"board-restart\"}>\r\n                <Button onClick={onRestartClick}>\r\n                    {finishText}\r\n                </Button>\r\n                <AskRestartModal\r\n                    visible={modal}\r\n                    finishText={finishText}\r\n                    description={isClear === 'Game Clear!!!'\r\n                        ? '기록을 저장하실 건가요?'\r\n                        : '게임을 다시 시작하실 건가요?'}\r\n                    clear={isClear}\r\n                    onConfirm={onRestart}\r\n                    onCancel={onCancel}\r\n                />\r\n            </BoardRestart>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameBoard;","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeGame, finishGame} from \"../../modules/game\";\r\nimport GameBoard from \"../../components/minesweeper/GameBoard\";\r\n\r\nconst GameBoardContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isStart,\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        mineNum,\r\n        openBlockNum,\r\n    } = useSelector(({game}) => ({\r\n        isStart: game.isStart,\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        mineNum: game.mineNum,\r\n        openBlockNum: game.openBlockNum,\r\n    }));\r\n\r\n    const onRestart = useCallback(() => {\r\n        dispatch(initializeGame());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (mineNum === size - openBlockNum && isStart && !isFinish) {\r\n            dispatch(finishGame('Game Clear!!!'));\r\n        }\r\n    }, [dispatch, isStart, isFinish, ground, size, mineNum, openBlockNum]);\r\n\r\n    return (\r\n        <GameBoard\r\n            onRestart={onRestart}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GameBoardContainer;\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeGame} from \"../../modules/game\";\r\nimport GameStartContainer from \"../../container/minesweeper/GameStartContainer\";\r\nimport GameBoardContainer from \"../../container/minesweeper/GameBoardContainer\";\r\nimport './Game.scss'\r\n\r\nconst Game = () => {\r\n    const dispatch = useDispatch();\r\n    const {isStart} = useSelector(({game}) => ({isStart: game.isStart}));\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeGame())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div id={\"game-root\"}>\r\n            {isStart ? <GameBoardContainer/> : <GameStartContainer/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Game\r\n","import React from 'react';\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport Game from \"../components/minesweeper/Game\";\r\n\r\nconst GamePage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <Game/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GamePage;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet-async';\r\nimport PostListPage from \"./pages/PostListPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\nimport WritePage from \"./pages/WritePage\";\r\nimport GamePage from \"./pages/GamePage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>MineSweeper</title>\r\n            </Helmet>\r\n            <Route component={PostListPage} path={[\"/@:username\", \"/\"]} exact/>\r\n            <Route component={RegisterPage} path={\"/register\"}/>\r\n            <Route component={LoginPage} path={\"/login\"}/>\r\n            <Route component={PostPage} path={\"/@:username/:postId\"}/>\r\n            <Route component={WritePage} path={\"/write\"}/>\r\n            <Route component={GamePage} path={\"/game\"}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport {all} from 'redux-saga/effects';\r\nimport auth, {authSaga} from './auth'\r\nimport loading from \"./loading\";\r\nimport user, {userSaga} from \"./user\";\r\nimport write, {writeSaga} from \"./write\";\r\nimport post, {postSaga} from \"./post\";\r\nimport posts, {postsSaga} from \"./posts\";\r\nimport game from \"./game\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    loading,\r\n    user,\r\n    write,\r\n    post,\r\n    posts,\r\n    game,\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {HelmetProvider} from \"react-helmet-async\";\r\nimport rootReducer, {rootSaga} from './modules';\r\nimport { tempSetUser, check } from \"./modules/user\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nfunction loadUser() {\r\n    try {\r\n        const user = localStorage.getItem('user');\r\n        if (!user) return;\r\n\r\n        store.dispatch(tempSetUser(user));\r\n        store.dispatch(check());\r\n    } catch (e) {\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <HelmetProvider>\r\n                <App/>\r\n            </HelmetProvider>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}