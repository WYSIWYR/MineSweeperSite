{"version":3,"sources":["components/common/Responsive.js","lib/styles/palette.js","components/common/Button.js","components/common/Header.js","lib/api/client.js","lib/api/auth.js","modules/loading.js","lib/createRequestSaga.js","modules/user.js","container/common/HeaderContainer.js","components/common/SubInfo.js","components/common/Tags.js","components/post/PostList.js","modules/posts.js","lib/api/posts.js","container/posts/PostListContainer.js","components/post/Pagination.js","container/posts/PaginationContainer.js","pages/PostListPage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","container/auth/RegisterForm.js","pages/RegisterPage.js","container/auth/LoginForm.js","pages/LoginPage.js","modules/post.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","modules/write.js","container/post/PostViewerContainer.js","pages/PostPage.js","components/write/Editor.js","container/write/EditorContainer.js","components/write/TagBox.js","container/write/TagBoxContainer.js","components/write/WriteActionButton.js","container/write/WriteActionButtonsContainer.js","pages/WritePage.js","modules/game.js","lib/calcDate.js","components/game/Game.js","components/game/GameStart.js","container/game/GameStartContainer.js","components/game/GameBlock.js","container/game/GameBlockContainer.js","components/game/AskRestartModal.js","components/game/GameBoard.js","container/game/GameBoardContainer.js","container/game/GameContainer.js","pages/GamePage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["StyledResponsive","styled","div","Responsive","children","rest","palette","gray","cyan","buttonStyle","css","props","fullWidth","marginTop","block","StyledButton","button","StyledLink","Link","Button","to","StyledHeader","Wrapper","Spacer","UserInfo","React","memo","user","onLogout","className","username","onClick","client","axios","create","logout","post","startLoading","createAction","requestType","finishLoading","handleActions","state","action","payload","createRequsetActionType","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","useSelector","shallowEqual","dispatch","useDispatch","StyledSubInfo","hasMarginTop","SubInfo","level","time","publishedDate","Date","toLocaleDateString","StyledTags","Tags","tags","map","tag","key","StyledPostList","GameStartButtonWrapper","StyledPostItem","PostItem","_id","title","body","PostList","posts","loading","showStartButton","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","page","listPostsSaga","queryString","qs","stringify","lastPage","parseInt","headers","withRouter","match","location","useEffect","params","parse","search","ignoreQueryPrefix","StyledPagination","PageNumber","buildLink","query","Pagination","disabled","undefined","PostListPage","StyledAuthTemplate","WhiteBox","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","value","enterForm","leaveForm","register","password","login","registerSaga","loginSaga","initialState","passwordConfirm","initialize","auth","authError","produce","draft","StyledAuthForm","StyledInput","input","Footer","textMap","ErrorMessage","onChange","onSubmit","text","autoComplete","name","placeholder","history","useState","setError","status","push","setItem","JSON","target","preventDefault","includes","RegisterPage","useCallback","LoginPage","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","readPost","id","unloadPost","readPostSaga","StyledPostViewer","PostHead","PostContent","PostViewer","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","StyledAskModal","AskModal","visible","description","confirmText","cancelText","onConfirm","onCancel","AskRemoveModal","StyledPostActionButtons","ActionButton","PostActionButtons","onEdit","onRemove","modal","setModal","writeSaga","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","setOriginalPost","writePost","updatePost","writePostSaga","updatePostSaga","patch","postError","originalPostId","originalLevel","originalTime","postId","ownPost","a","delete","PostPage","StyledEditor","TitleInput","LevelTimeBlock","QuillWrapper","Editor","onChangeField","quillElement","useRef","quillIstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","write","game","alert","StyledTagBox","TagForm","Tag","StyledTagList","TagItem","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","newTags","filter","t","trim","TagBoxContainer","StyledWriteActionButtons","WriteActionButtons","onPublished","isEdit","WriteActionButton","goBack","WritePage","initializeGame","setLevel","startGame","ground","size","width","mineNum","openBlock","increaseOpenBlockNum","num","setFlag","highlightOn","highlightOff","finishGame","clear","isStart","isFinish","isClear","openBlockNum","nearBlock","startTime","flagSet","isOpen","isHighlight","space","val","endTime","output","sec","Math","floor","getTime","date","hour","min","calcDate","content","onStart","onSetLevel","i","idx","random","range","GameBlock","onBlockOpen","onMouseDownAction","onMouseUpAction","classNames","onMouseDown","onMouseUp","onContextMenu","onAuxClick","onWheel","src","alt","stringId","storeNearBlock","slice","visited","Array","fill","queue","zeroBlock","length","shift","localNearBlock","nearCloseBlock","nearFlag","pop","AskRestartModal","finishText","GameBoard","onRestart","onClear","clearModal","setClearModal","restartModal","setRestartModal","divWidth","Board","BoardRestart","GamePage","App","component","path","exact","Boolean","window","hostname","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.387ceb12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledResponsive = styled.div`\r\n    padding: 0 1rem;\r\n    width: 1024px;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    \r\n    @media(max-width: 1024px) {\r\n        width: 768px;\r\n    }\r\n    \r\n    @media(max-width: 768px) {\r\n        width: 100%;\r\n    }    \r\n`;\r\n\r\nconst Responsive = ({children, ...rest}) => {\r\n    // props를 사용할 수 있도록 ...rest를 사용하여 StyledResponsive에게 전달\r\n    return <StyledResponsive {...rest}>{children}</StyledResponsive>\r\n};\r\n\r\nexport default Responsive;\r\n","const palette = {\r\n    gray: [\r\n        '#f8f9fa',\r\n        '#f1f3f5',\r\n        '#e9ecef',\r\n        '#dee2e6',\r\n        '#ced4da',\r\n        '#adb5bd',\r\n        '#868e96',\r\n        '#495057',\r\n        '#343a40',\r\n        '#212529',\r\n    ],\r\n    cyan: [\r\n        '#e3fafc',\r\n        '#c5f6fa',\r\n        '#99e9f2',\r\n        '#66d9e8',\r\n        '#3bc9db',\r\n        '#22b8cf',\r\n        '#15aabf',\r\n        '#1098ad',\r\n        '#0c8599',\r\n        '#0b7285',\r\n    ],\r\n};\r\n\r\nexport default palette;","import React from \"react\";\r\nimport styled, {css} from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    \r\n    background: ${palette.gray[8]};\r\n    &:hover {\r\n        background: ${palette.gray[6]};\r\n    }\r\n    ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n            padding-top: 0.75rem;\r\n            padding-bottom: 0.75rem;\r\n            width: 100%;\r\n            font-size: 1.125rem;\r\n        `\r\n    }\r\n    ${props =>\r\n    props.cyan &&\r\n    css`\r\n            background: ${palette.cyan[5]};\r\n            &:hover {\r\n                background: ${palette.cyan[4]};\r\n            }\r\n        `\r\n    }\r\n    ${props =>\r\n    props.marginTop &&\r\n    css`\r\n            margin-top: ${props.marginTop};\r\n        `\r\n    }\r\n    ${props => \r\n    props.block &&\r\n    css`\r\n        display: block;\r\n        `\r\n    }\r\n    &:disabled {\r\n        background: ${palette.gray[3]};\r\n        color: ${palette.gray[5]};\r\n        cursor: not-allowed;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n    return props.to ? (\r\n        <StyledLink {...props} cyan={props.cyan ? 1 : 0}/>\r\n    ) : (\r\n        <StyledButton {...props}/>\r\n    )\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Responsive from \"./Responsive\";\r\nimport Button from \"./Button\";\r\n\r\nconst StyledHeader = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    background: white;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\n// Responsive 컴포넌트에 스타일을 추가해서 새로운 컴포넌트 생성\r\nconst Wrapper = styled(Responsive)`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .logo {\r\n        font-size: 1.125rem;\r\n        font-weight: 800;\r\n        letter-spacing: 2px;\r\n    }\r\n    .right {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\n// Header가 fixed이기 때문에 콘텐츠를 4rem 아래에 나타나도록 해 주는 컴포넌트\r\nconst Spacer = styled.div`\r\n    height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    font-weight: 800;\r\n    margin-right: 1rem;\r\n`;\r\n\r\nconst Header = ({user, onLogout}) => {\r\n    return (\r\n        <>\r\n            <StyledHeader>\r\n                <Wrapper>\r\n                    <Link to={\"/\"} className={\"logo\"}>\r\n                        MineSweeper\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className={\"right\"}>\r\n                            <UserInfo>{user.username}</UserInfo>\r\n                            <Button onClick={onLogout}>로그아웃</Button>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={\"right\"}>\r\n                            <Button to={\"/login\"}>로그인</Button>\r\n                        </div>\r\n                    )}\r\n                </Wrapper>\r\n            </StyledHeader>\r\n            <Spacer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(Header);","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from \"./client\";\r\n\r\n// 로그인 api 요청\r\nexport const login = ({username, password}) =>\r\n    client.post('/api/auth/login', {username, password});\r\n\r\n// 회원가입 api 요청\r\nexport const register = ({username, password}) =>\r\n    client.post('/api/auth/register', {username, password});\r\n\r\n// 로그인 확인 api 요청\r\nexport const check = () =>\r\n    client.get('/api/auth/check');\r\n\r\n// 로그아웃\r\nexport const logout = () =>\r\n    client.post('/api/auth/logout');\r\n","import {createAction, handleActions} from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\n// 요청을 위한 액션 타입(requestType)을 payload로 설정함\r\n\r\nexport const startLoading = createAction(\r\n    START_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n    FINISH_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nexport default handleActions(\r\n    {\r\n        [START_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: true,\r\n        }),\r\n        [FINISH_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: false,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import {call, put} from 'redux-saga/effects';\r\nimport {startLoading, finishLoading} from \"../modules/loading\";\r\n\r\nexport const createRequsetActionType = type => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return function* (action) {\r\n        yield put(startLoading(type));\r\n        try {\r\n            const response = yield call(request, action.payload);\r\n            yield put({\r\n                type: SUCCESS,\r\n                payload: response.data,\r\n                meta: response,\r\n            });\r\n        } catch (e) {\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: e,\r\n                error: true,\r\n            });\r\n        }\r\n        yield put(finishLoading(type));\r\n    };\r\n}","import {createAction, handleActions} from 'redux-actions';\r\nimport {takeLatest, call} from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequsetActionType('user/CHECK');\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n    try {\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n        yield call(authAPI.logout); // logout api 호출\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [TEMP_SET_USER]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_SUCCESS]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            checkError: error,\r\n        }),\r\n        [LOGOUT]: state => ({\r\n           ...state,\r\n           user: null,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch, shallowEqual} from \"react-redux\";\r\nimport Header from \"../../components/common/Header\";\r\nimport {logout} from \"../../modules/user\";\r\n\r\nconst HeaderContainer = () => {\r\n    const {user} = useSelector(({user}) => ({user: user.user}), shallowEqual);\r\n    const dispatch = useDispatch();\r\n    const onLogout = () => {\r\n        dispatch(logout());\r\n    };\r\n    return <Header user={user} onLogout={onLogout}/>\r\n};\r\n\r\nexport default React.memo(HeaderContainer);\r\n","import React from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledSubInfo = styled.div`\r\n    ${props =>\r\n        props.hasMarginTop &&\r\n        css`\r\n            margin-top: 1rem;\r\n        `\r\n    }\r\n    color: ${palette.gray[6]};\r\n    \r\n    span + span:before {\r\n        color: ${palette.gray[5]};\r\n        padding: 0 0.25rem;\r\n        content: '\\\\B7'; /* 가운뎃점 문자 */\r\n    }\r\n`;\r\n\r\nconst SubInfo = ({username, level, time, publishedDate, hasMarginTop}) => {\r\n    return (\r\n        <StyledSubInfo hasMarginTop={hasMarginTop}>\r\n            <span>\r\n                <b>\r\n                    <Link to={`/@${username}`}>{username}</Link>\r\n                </b>\r\n            </span>\r\n            <span><Link to={`/?level=${level}`}>난이도: {level}</Link></span>\r\n            <span>클리어 타임: {time}</span>\r\n            <span>플레이 날짜: {new Date(publishedDate).toLocaleDateString()}</span>\r\n        </StyledSubInfo>\r\n    )\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTags = styled.div`\r\n    margin-top: 0.5rem;\r\n    .tag{\r\n        display: inline-block;\r\n        color: ${palette.gray[7]};\r\n        text-decoration: none;\r\n        margin-right: 0.5rem;\r\n        &:hover {\r\n            color: ${palette.cyan[6]}\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tags = ({tags}) => {\r\n    return (\r\n        <StyledTags>\r\n            {tags.map(tag => (\r\n                <Link className={\"tag\"} to={`/?tag=${tag}`} key={tag}>\r\n                    #{tag}\r\n                </Link>\r\n            ))}\r\n        </StyledTags>\r\n    )\r\n};\r\n\r\nexport default Tags;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostList = styled(Responsive)`\r\n    margin-top: 3rem\r\n`;\r\n\r\nconst GameStartButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst StyledPostItem = styled.div`\r\n    padding: 3rem 0;\r\n    &:first-child {\r\n        padding-top: 0;\r\n    }\r\n    & + & {\r\n        border-top: 1px solid ${palette.gray[2]};\r\n    }\r\n    \r\n    h2 {\r\n        font-size: 2rem;\r\n        margin-bottom: 0;\r\n        margin-top: 0;\r\n        &:hover {\r\n            color: ${palette.gray[6]};\r\n        }\r\n    }\r\n    p {\r\n       margin-top: 1.5rem;\r\n    }\r\n`;\r\n\r\nconst PostItem = ({post}) => {\r\n    const {_id, title, level, time, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostItem>\r\n            <h2>\r\n                <Link to={`/@${user.username}/${_id}`}>\r\n                    {title}\r\n                </Link>\r\n            </h2>\r\n            <SubInfo\r\n                username={user.username}\r\n                level={level}\r\n                time={time}\r\n                publishedDate={publishedDate}\r\n            />\r\n            <Tags\r\n                tags={tags}\r\n            />\r\n            <p>{body}</p>\r\n        </StyledPostItem>\r\n    )\r\n};\r\n\r\nconst PostList = ({posts, error, loading, showStartButton}) => {\r\n    if (error) {\r\n        return <StyledPostList>에러가 발생했습니다!</StyledPostList>\r\n    }\r\n\r\n    return (\r\n        <StyledPostList>\r\n            <GameStartButtonWrapper>\r\n                {showStartButton && (\r\n                    <Button to={\"/game\"} cyan>\r\n                        게임 시작!\r\n                    </Button>\r\n                )}\r\n            </GameStartButtonWrapper>\r\n            <div>\r\n                {!loading && posts && (\r\n                    posts.map(post => (\r\n                        <PostItem post={post} key={post._id}/>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </StyledPostList>\r\n    )\r\n};\r\n\r\nexport default PostList;\r\n\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    LIST_POSTS,\r\n    LIST_POSTS_SUCCESS,\r\n    LIST_POSTS_FAILURE,\r\n] = createRequsetActionType('posts/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(LIST_POSTS, ({page, username, tag, level}) => ({\r\n        page,\r\n        username,\r\n        tag,\r\n        level,\r\n    }),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postAPI.listPosts);\r\n\r\nexport function* postsSaga() {\r\n    yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error: null,\r\n    lastPage: 1,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [LIST_POSTS]: state => ({\r\n            ...state,\r\n            error: null,\r\n        }),\r\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts, meta: response}) => ({\r\n            ...state,\r\n            posts,\r\n            lastPage: parseInt(response.headers['last-page'], 10)\r\n        }),\r\n        [LIST_POSTS_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error: error,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n","import qs from 'qs';\r\nimport client from './client';\r\n\r\nexport const listPosts = ({page, username, tag, level}) => {\r\n    const queryString = qs.stringify({\r\n        page,\r\n        username,\r\n        tag,\r\n        level,\r\n    });\r\n\r\n    return client.get(`/api/posts?${queryString}`);\r\n};\r\n\r\nexport const readPost = id => client.get(`/api/posts/${id}`);\r\n\r\nexport const writePost = ({title, level, time, body, tags}) =>\r\n    client.post('/api/posts', {title, level, time, body, tags});\r\n\r\n\r\nexport const updatePost = ({id, title, body, tags}) =>\r\n    client.patch(`/api/posts/${id}`, {\r\n        title,\r\n        body,\r\n        tags,\r\n    });\r\n\r\nexport const removePost = id => client.delete(`/api/posts/${id}`);\r\n","import React, {useEffect} from \"react\";\r\nimport qs from 'qs';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PostList from \"../../components/post/PostList\";\r\nimport {listPosts} from \"../../modules/posts\";\r\n\r\nconst PostListContainer = ({match, location}) => {\r\n    const dispatch = useDispatch();\r\n    const {posts, error, loading, user} = useSelector(\r\n        ({posts, loading, user}) => ({\r\n            posts: posts.posts,\r\n            error: posts.error,\r\n            loading: loading['posts/LIST_POSTS'],\r\n            user: user.user,\r\n        }),\r\n    );\r\n\r\n    useEffect(() => {\r\n        const {username} = match.params;\r\n        const {page, tag, level} = qs.parse(location.search, {\r\n            ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({page, username, tag, level}));\r\n    }, [dispatch, match.params, location.search]);\r\n\r\n    return (\r\n        <PostList\r\n            posts={posts}\r\n            error={error}\r\n            loading={loading}\r\n            showStartButton={user}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport qs from 'qs';\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledPagination = styled.div`\r\n    width: 320px;\r\n    margin: 0 auto;\r\n    display: felx;\r\n    justify-content: space-between;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst PageNumber = styled.div``;\r\n\r\nconst buildLink = ({page, username, tag, level}) => {\r\n    const query = qs.stringify({page, tag, level});\r\n    return username ? `/@${username}?${query}` : `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({page, lastPage, username, tag, level}) => {\r\n    return (\r\n        <StyledPagination>\r\n            <Button\r\n                disabled={page === 1}\r\n                to={\r\n                    page === 1 ? undefined : buildLink({page: page - 1, username, tag, level})\r\n                }\r\n            >\r\n                이전\r\n            </Button>\r\n            <PageNumber>{page}</PageNumber>\r\n            <Button\r\n                disabled={lastPage === 1 || page === lastPage}\r\n                to={\r\n                    lastPage === 1\r\n                    ? undefined\r\n                    : page === lastPage\r\n                        ? undefined\r\n                        : buildLink({page: page + 1, username, tag, level})\r\n                }\r\n            >\r\n                다음\r\n            </Button>\r\n        </StyledPagination>\r\n    )\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport Pagination from \"../../components/post/Pagination\";\r\n\r\nconst PaginationContainer = ({match, location}) => {\r\n    const {posts, loading, lastPage} = useSelector(({posts, loading}) => ({\r\n        posts: posts.posts,\r\n        loading: loading['posts/LIST_POSTS'],\r\n        lastPage: posts.lastPage,\r\n    }));\r\n\r\n    if (!posts || loading) return null;\r\n\r\n    const {username} = match.params;\r\n    const {page = '1', tag, level} = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true,\r\n    });\r\n\r\n    return (\r\n        <Pagination\r\n            page={parseInt(page, 10)}\r\n            lastPage={parseInt(lastPage, 10)}\r\n            username={username}\r\n            tag={tag}\r\n            level={level}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostListContainer from \"../container/posts/PostListContainer\";\r\nimport PaginationContainer from \"../container/posts/PaginationContainer\";\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer/>\r\n            <PostListContainer/>\r\n            <PaginationContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostListPage;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// 회원가입 및 로그인 페이지의 레이아웃 컴포넌트\r\nconst StyledAuthTemplate = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: ${palette.gray[2]};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display: block;\r\n        padding-bottom: 2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n    padding: 2rem;\r\n    width: 360px;\r\n    background: white;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}) => {\r\n    return (\r\n        <StyledAuthTemplate>\r\n            <WhiteBox>\r\n                <div className={\"logo-area\"}>\r\n                    <Link to={\"/\"}>MineSweeper</Link>\r\n                </div>\r\n                {children}\r\n            </WhiteBox>\r\n        </StyledAuthTemplate>\r\n    )\r\n};\r\n\r\nexport default React.memo(AuthTemplate);\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport produce from \"immer\";\r\nimport {takeLatest} from 'redux-saga/effects';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst ENTER_FORM = 'auth/ENTER_FORM';\r\nconst LEAVE_FORM = 'auth/LEAVE_FORM';\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequsetActionType('auth/REGISTER');\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequsetActionType('auth/LOGIN');\r\n\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    ({form, key, value}) => ({\r\n        form,   // register, login\r\n        key,    // username, password, passwordConfirm\r\n        value,  // 입력된 값\r\n    })\r\n);\r\nexport const enterForm = createAction(ENTER_FORM, form => form);\r\nexport const leaveForm = createAction(LEAVE_FORM);\r\nexport const register = createAction(REGISTER, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\nexport const login = createAction(LOGIN, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n    yield takeLatest(REGISTER, registerSaga);\r\n    yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n    register: {\r\n        username: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    },\r\n    login: {\r\n        username: '',\r\n        password: '',\r\n    },\r\n    initialize: '',\r\n    auth: null,\r\n    authError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) =>\r\n            produce(state, draft => {\r\n                draft[form][key] = value;\r\n            }),\r\n        [ENTER_FORM]: (state, {payload: form}) => ({\r\n            ...state,\r\n            [form]: initialState[form],\r\n            initialize: form,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [LEAVE_FORM]: state => ({\r\n            ...state,\r\n            initialize: '',\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [REGISTER]: (state) => ({\r\n            ...state,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n        [LOGIN]: (state) => ({\r\n            ...state,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\n\r\n// 회원가입/로그인 폼 컴포넌트\r\nconst StyledAuthForm = styled.div`\r\n    h3 {\r\n        margin: 0;\r\n        color: ${palette.gray[8]};\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\n// 스타일링된 input\r\nconst StyledInput = styled.input`\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[5]};\r\n    padding-bottom: 0.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    &:focus {\r\n        color: $oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\n// 메인 화면, 회원가입/로그인 링크\r\nconst Footer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 1rem;\r\n    a {\r\n        color: ${palette.gray[6]};\r\n        text-decoration: underline;\r\n        $:hover {\r\n        color: ${palette.gray[9]};\r\n    }\r\n`;\r\n\r\nconst textMap = {\r\n    login: '로그인',\r\n    register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\r\n    const text = textMap[type];\r\n\r\n    return (\r\n        <StyledAuthForm>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <StyledInput\r\n                    autoComplete={\"username\"}\r\n                    name={\"username\"}\r\n                    placeholder={\"아이디\"}\r\n                    onChange={onChange}\r\n                    value={form.username}\r\n                />\r\n                <StyledInput\r\n                    autoComplete={\"new-password\"}\r\n                    name={\"password\"}\r\n                    placeholder={\"비밀번호\"}\r\n                    type={\"password\"}\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                />\r\n                {type === 'register' && (\r\n                    <StyledInput\r\n                        autoComplete={\"new-password\"}\r\n                        name={\"passwordConfirm\"}\r\n                        placeholder={\"비밀번호 확인\"}\r\n                        type={\"password\"}\r\n                        onChange={onChange}\r\n                        value={form.passwordConfirm}\r\n                    />\r\n                )}\r\n\r\n                {error && <ErrorMessage>{error}</ErrorMessage>}\r\n                <Button cyan fullWidth marginTop={\"1rem\"}>\r\n                    {text}\r\n                </Button>\r\n            </form>\r\n            <Footer>\r\n                <Link to={\"/\"}>\r\n                    메인 화면\r\n                </Link>\r\n                {type === 'login' ? (\r\n                    <Link to={\"/register\"}>회원가입</Link>\r\n                ) : (\r\n                    <Link to={\"/login\"}>로그인</Link>\r\n                )}\r\n            </Footer>\r\n        </StyledAuthForm>\r\n    );\r\n};\r\n\r\nexport default React.memo(AuthForm);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeField, enterForm, leaveForm, register} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst RegisterForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, initialize, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.register,\r\n        initialize: auth.initialize,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'register',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    };\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password, passwordConfirm} = form;\r\n        if ([username, password, passwordConfirm].includes('')) {\r\n            setError('빈칸을 모두 입력해 주세요');\r\n            return;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            setError('비밀번호가 일치하지 않습니다');\r\n            dispatch(changeField({form: 'register', key: 'password', value: ''}));\r\n            dispatch(changeField({form: 'register', key: 'passwordConfirm', value: ''}));\r\n            return;\r\n        }\r\n        dispatch(register({username, password}));\r\n    };\r\n\r\n    // 컴포넌트가 처음 렌더링될 떼 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(enterForm('register'));\r\n\r\n        return() => {\r\n            dispatch(leaveForm('register'));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // 회원가입 성공/실패 처리\r\n    useEffect(() => {\r\n        if (initialize === 'register') {\r\n            if (authError) {\r\n                if (authError.response.status === 409) {\r\n                    setError('이미 존재하는 계정입니다');\r\n                    return;\r\n                }\r\n                setError('회원가입 실패');\r\n                return;\r\n            }\r\n            if (auth) {\r\n                dispatch(check());\r\n            }\r\n        }\r\n    }, [initialize, auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"register\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport RegisterForm from \"../container/auth/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm/>\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {changeField, enterForm, leaveForm, login} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst LoginForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, initialize, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.login,\r\n        initialize: auth.initialize,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }), shallowEqual);\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'login',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    }, [dispatch]);\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        const {username, password} = form;\r\n        dispatch(login({username, password}));\r\n    }, [dispatch, form]);\r\n\r\n    // 컴포넌트가 처음 렌더링 되거나 페이지를 떠날 때 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(enterForm('login'));\r\n\r\n        return() => {\r\n            dispatch(leaveForm('login'));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // 로그인 성공/실패 처리\r\n    useEffect(() => {\r\n        if (initialize === 'login') {\r\n            if (authError) {\r\n                if (authError.response.status === 401) {\r\n                    setError('아이디 또는 비밀번호가 일치하지 않습니다');\r\n                    return;\r\n                }\r\n                setError('로그인 실패');\r\n                return;\r\n            }\r\n            if (auth) {\r\n                dispatch(check());\r\n            }\r\n        }\r\n    }, [initialize, auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"login\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default React.memo(withRouter(LoginForm));\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport LoginForm from \"../container/auth/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm />\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import {createAction, handleActions} from 'redux-actions';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    READ_POST,\r\n    READ_POST_SUCCESS,\r\n    READ_POST_FAILURE\r\n] = createRequsetActionType('post/POST_READ');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 지우기\r\n\r\nexport const readPost = createAction(READ_POST, id => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\n\r\nexport function* postSaga() {\r\n    yield takeLatest(READ_POST, readPostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    post: null,\r\n    error: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [READ_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n            error: null,\r\n        }),\r\n        [READ_POST_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            post: null,\r\n            error: error,\r\n        }),\r\n        [UNLOAD_POST]: () => initialState,\r\n    },\r\n    initialState,\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostViewer = styled(Responsive)`\r\n    margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n    border-bottom: 1px solid ${palette.gray[2]};\r\n    padding-bottom: 3rem;\r\n    margin-bottom: 3rem;\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    font-size: 1.3125rem;\r\n    color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({post, error, loading, actionButtons}) => {\r\n    if (error) {\r\n        if (error.response && error.response.status === 404) {\r\n            return <StyledPostViewer> 포스트가 존재하지 않습니다!</StyledPostViewer>\r\n        }\r\n        return <StyledPostViewer>오류 발생!!</StyledPostViewer>\r\n    }\r\n\r\n    if (loading || !post) {\r\n        return null;\r\n    }\r\n\r\n    const {title, level, time, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostViewer>\r\n            <PostHead>\r\n                <h1>{title}</h1>\r\n                <SubInfo\r\n                    username={user.username}\r\n                    level={level}\r\n                    time={time}\r\n                    publishedDate={publishedDate}\r\n                    hasMarginTop\r\n                />\r\n                <Tags tags={tags}/>\r\n            </PostHead>\r\n            {actionButtons}\r\n            <PostContent\r\n                dangerouslySetInnerHTML={{__html: body}}\r\n            />\r\n        </StyledPostViewer>\r\n    )\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledAskModal = styled.div`\r\n    width: 320px;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.125);\r\n    h2 {\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    p {\r\n        margin-bottom: 3rem;\r\n    }\r\n    .buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2rem;\r\n    & + & {\r\n        margin-left: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst AskModal = (\r\n    {\r\n        visible,\r\n        title,\r\n        description,\r\n        confirmText = '확인',\r\n        cancelText = '취소',\r\n        onConfirm,\r\n        onCancel,\r\n    }\r\n) => {\r\n    if (!visible) return null;\r\n    return (\r\n        <Fullscreen>\r\n            <StyledAskModal>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className={\"buttons\"}>\r\n                    <StyledButton onClick={onCancel}>\r\n                        {cancelText}\r\n                    </StyledButton>\r\n                    <StyledButton onClick={onConfirm} cyan>\r\n                        {confirmText}\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledAskModal>\r\n        </Fullscreen>\r\n    )\r\n};\r\n\r\nexport default AskModal;","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={\"포스트 삭제\"}\r\n            description={\"포스트를 정말 삭제하실건가요?\"}\r\n            confirmText={\"삭제\"}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport AskRemoveModal from \"./AskRemoveModal\";\r\n\r\nconst StyledPostActionButtons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 2rem;\r\n    margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    color: ${palette.gray[6]};\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.cyan[7]};\r\n    }\r\n    & + & {\r\n        margin-left: 0.25rem;\r\n    }\r\n`;\r\n\r\nconst PostActionButtons = ({onEdit, onRemove}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const onRemoveClick = () => {\r\n        setModal(true);\r\n    };\r\n    const onConfirm = () => {\r\n        setModal(false);\r\n        onRemove();\r\n    };\r\n    const onCancel = () => {\r\n        setModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledPostActionButtons>\r\n                <ActionButton onClick={onEdit}>수정</ActionButton>\r\n                <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n            </StyledPostActionButtons>\r\n            <AskRemoveModal\r\n                visible={modal}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostActionButtons;\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST'; // 포스트 수정시 포스트 내용 세팅\r\nconst [\r\n    WRITE_POST,\r\n    WRITE_POST_SUCCESS,\r\n    WRITE_POST_FAILURE\r\n] = createRequsetActionType('write/WRITE_POST');\r\nconst [\r\n    UPDATE_POST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPDATE_POST_FAILURE\r\n] = createRequsetActionType('write/UPDATE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({key, value}) => ({\r\n    key,\r\n    value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\r\nexport const writePost = createAction(WRITE_POST,\r\n    ({title, level, time, body, tags}) => ({\r\n        title,\r\n        level,\r\n        time,\r\n        body,\r\n        tags,\r\n    }));\r\nexport const updatePost = createAction(UPDATE_POST,\r\n    ({id, title, body, tags}) => ({\r\n        id,\r\n        title,\r\n        body,\r\n        tags,\r\n    }));\r\n\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\n\r\nexport function* writeSaga() {\r\n    yield takeLatest(WRITE_POST, writePostSaga);\r\n    yield takeLatest(UPDATE_POST, updatePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    title: '',\r\n    body: '',\r\n    tags: [],\r\n    post: null,\r\n    postError: null,\r\n    originalPostId: null,\r\n    originalLevel: null,\r\n    originalTime: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE]: state => initialState,\r\n        [CHANGE_FIELD]: (state, {payload: {key, value}}) => ({\r\n            ...state,\r\n            [key]: value,\r\n        }),\r\n        [WRITE_POST]: state => ({\r\n            ...state,\r\n            post: null,\r\n            postError: null,\r\n        }),\r\n        [WRITE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n        }),\r\n        [WRITE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError: postError,\r\n        }),\r\n        [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\r\n            ...state,\r\n            title: post.title,\r\n            body: post.body,\r\n            tags: post.tags,\r\n            originalPostId: post._id,\r\n            originalLevel: post.level,\r\n            originalTime: post.time,\r\n        }),\r\n        [UPDATE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n            postError: null,\r\n        }),\r\n        [UPDATE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            post: null,\r\n            postError: postError,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {readPost, unloadPost} from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostActionButtons from \"../../components/post/PostActionButtons\";\r\nimport {setOriginalPost} from \"../../modules/write\";\r\nimport {removePost} from \"../../lib/api/posts\";\r\n\r\nconst PostViewerContainer = ({match, history}) => {\r\n    const {postId} = match.params;\r\n    const dispatch = useDispatch();\r\n    const {post, error, loading, user} = useSelector(({post, loading, user}) => ({\r\n        post: post.post,\r\n        error: post.error,\r\n        loading: loading['post/READ_POST'],\r\n        user: user.user,\r\n    }));\r\n    const ownPost = (user && user._id) === (post && post.user._id);\r\n\r\n    // 처음 마운트될 때 포스트 읽기 API 요청\r\n    useEffect(() => {\r\n        dispatch(readPost(postId));\r\n        // 언마운트될 때 리덕스에서 포스트 데이터 지우기\r\n        return () => {\r\n            dispatch(unloadPost());\r\n        }\r\n    }, [dispatch, postId]);\r\n\r\n    const onEdit = () => {\r\n        dispatch(setOriginalPost(post));\r\n        history.push('/write');\r\n    };\r\n\r\n    const onRemove = async () => {\r\n        try {\r\n            await removePost(postId);\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PostViewer\r\n            post={post}\r\n            error={error}\r\n            loading={loading}\r\n            actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove}/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostViewerContainer from \"../container/post/PostViewerContainer\";\r\n\r\nconst PostPage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <PostViewerContainer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostPage;","import React, {useRef, useEffect} from \"react\";\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\n\r\nconst StyledEditor = styled(Responsive)`\r\n    padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n    font-size: 3rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[4]};\r\n    margin-bottom: 2rem;\r\n    width: 100%;\r\n`;\r\n\r\nconst LevelTimeBlock = styled.div`\r\n    p {\r\n        margin: 0;\r\n        margin-bottom: 0.5rem;\r\n        font-size: 1.25rem;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n    /* 에디터 최소 크기 지정 및 padding 제거 */\r\n    .qu-editor {\r\n        padding: 0;\r\n        min-height: 320px;\r\n        font-size: 1.125rem;\r\n        line-height: 1.5;\r\n    }\r\n    .ql-editor.ql-blank:before {\r\n        left: 0px;\r\n    }\r\n`;\r\n\r\nconst Editor = ({title, body, level, time, onChangeField}) => {\r\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n    const quillIstance = useRef(null); // Quill 인스턴스를 설정\r\n\r\n    useEffect(() => {\r\n        quillIstance.current = new Quill(quillElement.current, {\r\n            theme: 'bubble',\r\n            placeholder: '내용을 작성하세요!',\r\n            modules: {\r\n                // https://quilljs.com/docs/modules/toolbar/ 참고하기\r\n                toolbar: [\r\n                    [{header: '1'}, {header: '2'}],\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    [{list: 'ordered'}, {list: 'bullet'}],\r\n                    ['blockquote', 'code-block', 'link', 'image'],\r\n                ],\r\n            },\r\n        });\r\n\r\n        // quill에 text-change 이벤트 핸들러 등록\r\n        // 참고: https://quilljs.com/docs/api/#event\r\n        const quill = quillIstance.current;\r\n        quill.on('text-change', (delta, oldDelta, source) => {\r\n            if (source === 'user') {\r\n                onChangeField({key: 'body', value: quill.root.innerHTML});\r\n            }\r\n        })\r\n    }, [onChangeField]);\r\n\r\n    const mounted = useRef(false);\r\n    useEffect(() => {\r\n        if (mounted.current) return;\r\n        mounted.current = true;\r\n        quillIstance.current.root.innerHTML = body;\r\n    }, [body]);\r\n\r\n    const onChangeTitle = e => {\r\n       onChangeField({key: 'title', value: e.target.value});\r\n    };\r\n\r\n    return (\r\n        <StyledEditor>\r\n            <TitleInput\r\n                value={title}\r\n                onChange={onChangeTitle}\r\n                placeholder={\"제목을 입력하세요!\"}\r\n            />\r\n            <LevelTimeBlock>\r\n                <p>\r\n                    난이도: {level}\r\n                </p>\r\n                <p>\r\n                    클리어 타임: {time}\r\n                </p>\r\n            </LevelTimeBlock>\r\n            <QuillWrapper>\r\n                <div ref={quillElement}/>\r\n            </QuillWrapper>\r\n        </StyledEditor>\r\n    )\r\n};\r\n\r\nexport default Editor;\r\n","import React, {useEffect, useCallback} from \"react\";\r\nimport Editor from \"../../components/write/Editor\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {initialize, changeField} from \"../../modules/write\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst EditorContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {user, title, body, level, time} = useSelector(({user, write, game}) => ({\r\n        user: user.user,\r\n        title: write.title,\r\n        body: write.body,\r\n        level: game.level ? game.level : write.originalLevel,\r\n        time: game.time ? game.time: write.originalTime,\r\n    }));\r\n    const onChangeField = useCallback(payload => dispatch(changeField(payload)),\r\n        [dispatch]);\r\n\r\n    // 페이지를 떠날 때 데이터 초기화\r\n    useEffect(() => {\r\n        if (user === null || time === null) {\r\n            alert('올바른 접근이 아닙니다!!!');\r\n            history.push('/');\r\n        }\r\n        return () => {\r\n            dispatch(initialize());\r\n        }\r\n    }, [dispatch, user, time, history]);\r\n\r\n    return (\r\n        <Editor\r\n            title={title}\r\n            body={body}\r\n            level={level}\r\n            time={time}\r\n            onChangeField={onChangeField}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTagBox = styled.div`\r\n    width: 100%;\r\n    border-top: 1px solid ${palette.gray[2]};\r\n    padding-top: 2rem;\r\n    \r\n    h4 {\r\n        color: ${palette.gray[8]};\r\n        margin-top: 0;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 256px;\r\n    border: 1px solid ${palette.gray[9]};\r\n    input, button {\r\n        outline: none;\r\n        border: none;\r\n        font-size: 1rem;\r\n    }\r\n    \r\n    input {\r\n        padding: 0.5rem;\r\n        flex: 1;\r\n        min-width: 0;\r\n    }\r\n    \r\n    button {\r\n        cursor: pointer;\r\n        padding: 0 1rem;\r\n        border: none;\r\n        background: ${palette.gray[8]};\r\n        color: white;\r\n        font-weight: bold;\r\n        &:hover {\r\n            background: ${palette.gray[6]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n    margin-right: 0.5rem;\r\n    color: ${palette.gray[6]};\r\n    cursor: pointer;\r\n    $:hover {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst StyledTagList = styled.div`\r\n    display: flex;\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({tag, onRemove}) =>\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>);\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n    <StyledTagList>\r\n        {tags.map(tag => (\r\n            <TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n        ))}\r\n    </StyledTagList>\r\n));\r\n\r\nconst TagBox = ({tags, onChangeTags}) => {\r\n    const [input, setInput] = useState('');\r\n    const [localTags, setLocalTags] = useState([]);\r\n\r\n    const insertTag = useCallback(tag => {\r\n        if (!tag || localTags.includes(tag)) return;\r\n        const newTags = [...localTags, tag];\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onRemove = useCallback(tag => {\r\n        const newTags = localTags.filter(t => t !== tag);\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onChange = useCallback(e => {\r\n        setInput(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        insertTag(input.trim());\r\n        setInput('');\r\n    }, [input, insertTag]);\r\n\r\n    useEffect(() => {\r\n        setLocalTags(tags);\r\n    }, [tags]);\r\n\r\n    return (\r\n        <StyledTagBox>\r\n            <h4>태그</h4>\r\n            <TagForm onSubmit={onSubmit}>\r\n                <input\r\n                    value={input}\r\n                    onChange={onChange}\r\n                    placeholder={\"태그를 입력하세요\"}\r\n                />\r\n                <button type={\"submit\"}>추가</button>\r\n            </TagForm>\r\n            <TagList tags={localTags} onRemove={onRemove}/>\r\n        </StyledTagBox>\r\n    );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport TagBox from \"../../components/write/TagBox\";\r\nimport {changeField} from \"../../modules/write\";\r\n\r\nconst TagBoxContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const tags = useSelector(state => state.write.tags);\r\n\r\n    const onChangeTags = newTags => {\r\n        dispatch(changeField({\r\n                key: 'tags',\r\n                value: newTags,\r\n            }),\r\n        );\r\n    };\r\n\r\n    return <TagBox onChangeTags={onChangeTags} tags={tags}/>;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledWriteActionButtons = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    button + button {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\n// TagBox에서 사용하는 버튼과 같은 높이로 설정한 후 서로간의 여백 지정\r\nconst StyledButton = styled(Button)`\r\n    height: 2.125rem;\r\n    & + & {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst WriteActionButtons = ({onCancel, onPublished, isEdit}) => {\r\n    return (\r\n        <StyledWriteActionButtons>\r\n            <StyledButton cyan onClick={onPublished}>\r\n                포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n            <StyledButton onClick={onCancel}>\r\n                취소\r\n            </StyledButton>\r\n        </StyledWriteActionButtons>\r\n    )\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {writePost, updatePost} from \"../../modules/write\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButton\";\r\n\r\nconst WriteActionButtonsContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {title, body, tags, post, postError, originalPostId, level, time} = useSelector(({write, game}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n        tags: write.tags,\r\n        post: write.post,\r\n        postError: write.postError,\r\n        originalPostId: write.originalPostId,\r\n        level: game.level,\r\n        time: game.time,\r\n    }));\r\n\r\n    const onPublish = () => {\r\n        if (originalPostId) {\r\n            dispatch(\r\n                updatePost(\r\n                    {\r\n                        id: originalPostId,\r\n                        title,\r\n                        body,\r\n                        tags,\r\n                    }\r\n                )\r\n            );\r\n            return;\r\n        }\r\n        dispatch(\r\n            writePost({\r\n                title,\r\n                level,\r\n                time,\r\n                body,\r\n                tags\r\n            }),\r\n        );\r\n    };\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            const {_id, user} = post;\r\n            history.push(`/@${user.username}/${_id}`);\r\n        }\r\n\r\n        if (postError) {\r\n            console.log(postError);\r\n        }\r\n    }, [history, post, postError]);\r\n\r\n    return (\r\n        <WriteActionButtons\r\n            onPublished={onPublish}\r\n            onCancel={onCancel}\r\n            isEdit={!!originalPostId}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from \"react\";\r\nimport Responsive from \"../components/common/Responsive\";\r\nimport EditorContainer from \"../container/write/EditorContainer\";\r\nimport TagBoxContainer from \"../container/write/TagBoxContainer\";\r\nimport WriteActionButtonsContainer from \"../container/write/WriteActionButtonsContainer\";\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <Responsive>\r\n            <EditorContainer/>\r\n            <TagBoxContainer/>\r\n            <WriteActionButtonsContainer/>\r\n        </Responsive>\r\n    )\r\n};\r\n\r\nexport default WritePage;","import {createAction, handleActions} from \"redux-actions\";\r\nimport produce from \"immer\";\r\nimport calcDate from \"../lib/calcDate\";\r\n\r\nconst INITIALIZE_GAME = 'game/INITIALIZE';\r\nconst SET_LEVEL = 'game/SET_LEVEL';\r\nconst START_GAME = 'game/START_GAME';\r\nconst OPEN_BLOCK = 'game/OPEN_BLOCK';\r\nconst INCREASE_OPEN_BLOCK_NUM = 'game/INCREASE_OPEN_BLOCK_NUM';\r\nconst SET_FLAG = 'game/SET_FLAG';\r\nconst HIGHLIGHT_ON = 'game/HIGHLIGHT_ON';\r\nconst HIGHLIGHT_OFF = 'game/HIGHLIGHT_OFF';\r\nconst FINISH_GAME = 'game/FINISH_GAME';\r\n\r\nexport const initializeGame = createAction(INITIALIZE_GAME);\r\nexport const setLevel = createAction(SET_LEVEL, level => level);\r\nexport const startGame = createAction(START_GAME,\r\n    ({ground, size, width, mineNum}) => ({\r\n        ground,\r\n        size,\r\n        width,\r\n        mineNum,\r\n    }));\r\nexport const openBlock = createAction(OPEN_BLOCK, id => id);\r\nexport const increaseOpenBlockNum = createAction(INCREASE_OPEN_BLOCK_NUM, num => num);\r\nexport const setFlag = createAction(SET_FLAG, id => id);\r\nexport const highlightOn = createAction(HIGHLIGHT_ON, id => id);\r\nexport const highlightOff = createAction(HIGHLIGHT_OFF, id => id);\r\nexport const finishGame = createAction(FINISH_GAME, clear => clear);\r\n\r\nconst initialState = {\r\n    level: '쉬움',\r\n    isStart: false,\r\n    isFinish: false,\r\n    isClear: '',\r\n    ground: [],\r\n    size: 0,\r\n    width: 0,\r\n    mineNum: 0,\r\n    openBlockNum: 0,\r\n    nearBlock: [],\r\n    startTime: null,\r\n    time: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE_GAME]: state => initialState,\r\n        [SET_LEVEL]: (state, {payload: level}) => ({\r\n            ...state,\r\n            level: level\r\n        }),\r\n        [START_GAME]: (state, {payload: {ground, size, width, mineNum}}) => ({\r\n            ...state,\r\n            isStart: true,\r\n            ground: ground,\r\n            size: size,\r\n            width: width,\r\n            mineNum: mineNum,\r\n            nearBlock: [-width, -1, 1, width, -width - 1, -width + 1, width - 1, width + 1],\r\n            startTime: new Date(),\r\n        }),\r\n        [OPEN_BLOCK]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = false;\r\n                draft.ground[id].isOpen = true;\r\n            }),\r\n        [INCREASE_OPEN_BLOCK_NUM]: (state, {payload: num}) =>\r\n            produce(state, draft => {\r\n                draft.openBlockNum = num;\r\n            }),\r\n        [SET_FLAG]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = !draft.ground[id].flagSet;\r\n            }),\r\n        [HIGHLIGHT_ON]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].isHighlight = true;\r\n            }),\r\n        [HIGHLIGHT_OFF]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].isHighlight = false;\r\n            }),\r\n        [FINISH_GAME]: (state, {payload: clear}) =>\r\n            produce(state, draft => {\r\n                draft.ground.map(space => space.val === 'X' ? space.isOpen = true : space);\r\n                draft.isFinish = true;\r\n                draft.isClear = clear;\r\n                draft.time = calcDate(draft.startTime, new Date());\r\n            }),\r\n    }, initialState\r\n);\r\n","export default function (startTime, endTime) {\r\n    if (startTime === undefined || endTime === undefined) return null;\r\n    let output = '';\r\n    let sec = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\r\n    let date = Math.floor(sec / 60 / 60 / 24);\r\n    if (date > 0) {\r\n        sec -= date * 60 * 60 * 24;\r\n        output += date + '일';\r\n    }\r\n\r\n    let hour = Math.floor(sec / 60 / 60);\r\n    if (hour > 0) {\r\n        sec -= hour * 60 * 60;\r\n        output += hour + '시';\r\n    }\r\n\r\n    let min = Math.floor(sec / 60);\r\n    if (min > 0) {\r\n        sec -= min * 60;\r\n        output += min + '분';\r\n    }\r\n\r\n    return output += sec + '초';\r\n}","import React from \"react\";\r\nimport './Game.scss'\r\n\r\nconst Game = ({content}) => {\r\n\r\n    return (\r\n        <div id={\"game-root\"}>\r\n            {content}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default React.memo(Game);\r\n","import React from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport './GameStart.scss'\r\n\r\nconst GameStart = ({onStart, onSetLevel}) => {\r\n\r\n    return (\r\n        <div id={\"start-root\"}>\r\n            <div id={\"start-select-div\"}>\r\n                <label>\r\n                    <h3>게임 난이도</h3>\r\n                </label>\r\n                <select\r\n                    name={\"level\"}\r\n                    id={\"level\"}\r\n                    onChange={onSetLevel}\r\n                >\r\n                    <option value={\"쉬움\"}>쉬움</option>\r\n                    <option value={\"보통\"}>보통</option>\r\n                    <option value={\"어려움\"}>어려움</option>\r\n                </select>\r\n            </div>\r\n            <div id={\"start-btn-div\"}>\r\n                <Button onClick={onStart}>시작</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(GameStart);\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setLevel, startGame} from \"../../modules/game\";\r\nimport GameStart from \"../../components/game/GameStart\";\r\n\r\nconst GameStartContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {level} = useSelector(({game}) => ({\r\n        level: game.level,\r\n    }));\r\n\r\n    const onStart = useCallback(()  => {\r\n        let mineNum, size, width = 0;\r\n        let ground = [];\r\n\r\n        switch (level) {\r\n            case '쉬움':\r\n                mineNum = 10;\r\n                size = 80;\r\n                width = 10;\r\n                break;\r\n            case '보통':\r\n                mineNum = 40;\r\n                size = 252;\r\n                width = 18;\r\n                break;\r\n            case '어려움':\r\n                mineNum = 100;\r\n                size = 480;\r\n                width = 24;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            ground.push({id: i, val: 0, isOpen: false, flagSet: false, isHighlight: false,});\r\n        }\r\n\r\n        for (let i = 0; i < mineNum; i++) {\r\n            let idx = Math.floor(Math.random() * size);\r\n            let range = [\r\n                -width - 1,\r\n                -width,\r\n                -width + 1,\r\n                -1,\r\n                1,\r\n                width - 1,\r\n                width,\r\n                width + 1\r\n            ];\r\n\r\n            if (ground[idx].val === 'X') {\r\n                i--;\r\n                continue;\r\n            }\r\n\r\n            ground[idx].val = 'X';\r\n\r\n            for (let i = 0; i < 8; i++) {\r\n                let nearBlock = idx + range[i];\r\n\r\n                if (nearBlock > -1 && nearBlock < size &&\r\n                    ground[nearBlock].val !== 'X' &&\r\n                    !((idx % width === 0 && nearBlock % width === width - 1) ||\r\n                        (idx % width === width - 1 && nearBlock % width === 0))) {\r\n\r\n                    ground[nearBlock].val++;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(\r\n            startGame({\r\n                ground,\r\n                size,\r\n                width,\r\n                mineNum,\r\n            })\r\n        );\r\n    }, [dispatch, level]);\r\n\r\n    const onSetLevel = useCallback(e=> {\r\n        dispatch(setLevel(e.target.value))\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <GameStart\r\n            onStart={onStart}\r\n            onSetLevel={onSetLevel}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(GameStartContainer);\r\n","import React from \"react\";\r\nimport classNames from 'classnames';\r\nimport './GameBlock.scss'\r\n\r\nconst GameBlock = ({space, onBlockOpen, onMouseDownAction, onMouseUpAction}) => {\r\n    return (\r\n        <button\r\n            id={space.id}\r\n            className={classNames('block', space.isOpen ? 'open-block val-' + space.val : 'closed-block', space.isHighlight && 'highlight')}\r\n            onClick={() => onBlockOpen(space.id)}\r\n            onMouseDown={e => onMouseDownAction(e, space.id)}\r\n            onMouseUp={e => onMouseUpAction(e, space.id)}\r\n            onContextMenu={e => e.preventDefault()}\r\n            onAuxClick={e => e.preventDefault()}\r\n            onWheel={e => e.preventDefault()}\r\n        >\r\n            {space.isOpen ? space.val > 0 ? space.val : space.val === 'X' && <img src=\"images/mine.png\" alt=\"지뢰\"/> : space.flagSet && '✘' }\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default GameBlock;\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {finishGame, openBlock, setFlag, highlightOn, highlightOff} from \"../../modules/game\";\r\nimport GameBlock from \"../../components/game/GameBlock\";\r\n\r\nconst GameBlockContainer = ({space}) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        width,\r\n        nearBlock,\r\n    } = useSelector(({game}) => ({\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        width: game.width,\r\n        nearBlock: game.nearBlock,\r\n    }), shallowEqual);\r\n\r\n    const onBlockOpen = useCallback(stringId => {\r\n\r\n        const storeNearBlock = nearBlock.slice();\r\n        let id = parseInt(stringId, 10);\r\n\r\n        if (!(isFinish || space.isOpen)) {\r\n            if (space.val === 'X') {\r\n                dispatch(finishGame('Game Over...'));\r\n            } else if (space.val === 0) {\r\n                let visited = new Array(size).fill(false);\r\n                let queue = [id];\r\n                let zeroBlock = [id];\r\n\r\n                visited[id] = true;\r\n                dispatch(openBlock(id));\r\n\r\n                while (queue.length > 0) {\r\n                    let idx = queue.shift();\r\n\r\n                    for (let i = 0; i < 4; i++) {\r\n                        let localNearBlock = idx + storeNearBlock[i];\r\n\r\n                        if (localNearBlock > -1 && localNearBlock < size && !ground[localNearBlock].isOpen &&\r\n                            ground[localNearBlock].val === 0 && !visited[localNearBlock] &&\r\n                            !((idx % width === 0 && localNearBlock % width === width - 1) ||\r\n                                (idx % width === width - 1 && localNearBlock % width === 0))) {\r\n                            queue.push(localNearBlock);\r\n                            zeroBlock.push(localNearBlock);\r\n                            visited[localNearBlock] = true;\r\n                            dispatch(openBlock(localNearBlock));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                visited = new Array(size).fill(false);\r\n\r\n                while (zeroBlock.length > 0) {\r\n                    let idx = zeroBlock.shift();\r\n\r\n                    for (let i = 0; i < 8; i++) {\r\n                        let localNearBlock = idx + storeNearBlock[i];\r\n\r\n                        if (localNearBlock > -1 && localNearBlock < size &&\r\n                            !visited[localNearBlock] &&\r\n                            ground[localNearBlock].val > 0 &&\r\n                            !ground[localNearBlock].isOpen &&\r\n                            !((idx % width === 0 && localNearBlock % width === width - 1) ||\r\n                                (idx % width === width - 1 && localNearBlock % width === 0))) {\r\n                            visited[localNearBlock] = true;\r\n                            dispatch(openBlock(localNearBlock));\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                dispatch(openBlock(id));\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, space, size, width, nearBlock]);\r\n\r\n    const onMouseDownAction = useCallback((e, id) => {\r\n        if (!(isFinish || ground[id].isOpen) && e.button === 2) {\r\n            dispatch(setFlag(id));\r\n        } else if (!isFinish && ground[id].isOpen && e.button === 1) {\r\n            let storeNearBlock = nearBlock.slice();\r\n            let nearCloseBlock = [];\r\n            let nearFlag = [];\r\n            let localNearBlock = 0;\r\n            while (storeNearBlock.length > 0) {\r\n                localNearBlock = id + storeNearBlock.pop();\r\n                if (\r\n                    localNearBlock > -1 && localNearBlock < size &&\r\n                    !ground[localNearBlock].isOpen &&\r\n                    !((id % width === 0 && localNearBlock % width === width - 1) ||\r\n                        (id % width === width - 1 && localNearBlock % width === 0))\r\n                ) {\r\n                    if (ground[localNearBlock].flagSet) {\r\n                        nearFlag.push(localNearBlock);\r\n                    } else {\r\n                        nearCloseBlock.push(localNearBlock);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (nearFlag.length === ground[e.target.id].val) {\r\n                while (nearCloseBlock.length > 0) {\r\n                    const space = nearCloseBlock.pop();\r\n                    onBlockOpen(space);\r\n                }\r\n            } else {\r\n                while (nearCloseBlock.length > 0) {\r\n                    const space = nearCloseBlock.pop();\r\n                    dispatch(highlightOn(space));\r\n                }\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, size, width, nearBlock, onBlockOpen]);\r\n\r\n    const onMouseUpAction = useCallback((e, id) => {\r\n        if (!isFinish && ground[id].isOpen && e.button === 1) {\r\n            let storeNearBlock = nearBlock.slice();\r\n            let nearCloseBlock = [];\r\n            let localNearBlock = 0;\r\n            while (storeNearBlock.length > 0) {\r\n                localNearBlock = id + storeNearBlock.pop();\r\n\r\n                if (\r\n                    localNearBlock > -1 && localNearBlock < size &&\r\n                    !ground[localNearBlock].isOpen && !ground[localNearBlock].flagSet &&\r\n                    !((id % width === 0 && localNearBlock % width === width - 1) ||\r\n                        (id % width === width - 1 && localNearBlock % width === 0))\r\n                ) {\r\n                    nearCloseBlock.push(localNearBlock);\r\n                }\r\n            }\r\n\r\n            while (nearCloseBlock.length > 0) {\r\n                const space = nearCloseBlock.pop();\r\n                dispatch(highlightOff(space));\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, size, width, nearBlock]);\r\n\r\n    return (\r\n        <GameBlock\r\n            space={space}\r\n            onBlockOpen={onBlockOpen}\r\n            onMouseDownAction={onMouseDownAction}\r\n            onMouseUpAction={onMouseUpAction}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(GameBlockContainer);","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRestartModal = ({visible, finishText, description, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={finishText}\r\n            description={description}\r\n            confirmText={finishText}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRestartModal;\r\n","import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport GameBlockContainer from \"../../container/game/GameBlockContainer\";\r\nimport AskRestartModal from \"./AskRestartModal\";\r\nimport Button from \"../common/Button\";\r\nimport './GameBoard.scss'\r\n\r\nconst GameBoard = ({onRestart, onClear}) => {\r\n    const [clearModal, setClearModal] = useState(false);\r\n    const [restartModal, setRestartModal] = useState(false);\r\n    const {\r\n        isFinish,\r\n        isClear,\r\n        ground,\r\n        width,\r\n        mineNum,\r\n    } = useSelector(({game}) => ({\r\n        isFinish: game.isFinish,\r\n        isClear: game.isClear,\r\n        ground: game.ground,\r\n        width: game.width,\r\n        mineNum: game.mineNum,\r\n    }));\r\n    const divWidth = width * 30;\r\n    const Board = styled.div`\r\n            display: inline-block;\r\n            width: ${divWidth}px;\r\n        `;\r\n    const BoardRestart = styled.div`\r\n        width: ${divWidth}px;\r\n    `;\r\n    const onRestartClick = () => {\r\n        setRestartModal(true);\r\n    };\r\n\r\n    const onRestartCancel = () => {\r\n        setRestartModal(false);\r\n    };\r\n\r\n    const onClearClick = () => {\r\n        setClearModal(true);\r\n    };\r\n\r\n    const onClearCancel = () => {\r\n        setClearModal(false);\r\n    };\r\n\r\n    return (\r\n        <div id={\"board-root\"}>\r\n            <div id={\"board-minNum-div\"}>\r\n                <h2>{isClear ? isClear : '지뢰 갯수 : ' + mineNum + '개'}</h2>\r\n            </div>\r\n            <Board>\r\n                {\r\n                    ground.map(space => (\r\n                        <GameBlockContainer\r\n                            key={space.id}\r\n                            space={space}\r\n                        />\r\n                    ))\r\n                }\r\n            </Board>\r\n            {isFinish\r\n            &&\r\n            <BoardRestart id={\"board-restart\"}>\r\n                <Button onClick={onRestartClick}>\r\n                    다시 시작\r\n                </Button>\r\n                <AskRestartModal\r\n                    visible={restartModal}\r\n                    finishText={'다시 시작'}\r\n                    description={'게임을 다시 시작하실 건가요?'}\r\n                    onConfirm={onRestart}\r\n                    onCancel={onRestartCancel}\r\n                />\r\n                {isClear === 'Game Clear!!!' && (\r\n                    <>\r\n                        <Button onClick={onClearClick} marginTop={'1rem'}>\r\n                            기록 저장하기\r\n                        </Button>\r\n                        <AskRestartModal\r\n                            visible={clearModal}\r\n                            finishText={'기록 저장'}\r\n                            description={'기록을 저장하실 건가요?'}\r\n                            onConfirm={onClear}\r\n                            onCancel={onClearCancel}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n            </BoardRestart>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameBoard;","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {initializeGame, increaseOpenBlockNum, finishGame} from \"../../modules/game\";\r\nimport GameBoard from \"../../components/game/GameBoard\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst GameBoardContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isStart,\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        mineNum,\r\n        openBlockNum,\r\n    } = useSelector(({game}) => ({\r\n        isStart: game.isStart,\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        mineNum: game.mineNum,\r\n        openBlockNum: game.openBlockNum,\r\n    }), shallowEqual);\r\n\r\n    const onRestart = useCallback(() => {\r\n        dispatch(initializeGame());\r\n    }, [dispatch]);\r\n\r\n    const onClear = useCallback(() => {\r\n        history.push('/write');\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        const openBlock = ground.filter(space => space.isOpen === true);\r\n        if (openBlock.length !== openBlockNum) {\r\n            dispatch(increaseOpenBlockNum(openBlock.length));\r\n        }\r\n    }, [dispatch, ground, openBlockNum]);\r\n\r\n    useEffect(() => {\r\n        if (mineNum === size - openBlockNum && isStart && !isFinish) {\r\n            dispatch(finishGame('Game Clear!!!'));\r\n        }\r\n    }, [dispatch, isStart, isFinish, ground, size, mineNum, openBlockNum]);\r\n\r\n    return (\r\n        <GameBoard\r\n            onRestart={onRestart}\r\n            onClear={onClear}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(GameBoardContainer);\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {initializeGame} from \"../../modules/game\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Game from \"../../components/game/Game\";\r\nimport GameStartContainer from \"../../container/game/GameStartContainer\";\r\nimport GameBoardContainer from \"../../container/game/GameBoardContainer\";\r\n\r\nconst GameContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {isStart, user} = useSelector(({game, user}) => ({\r\n        isStart: game.isStart,\r\n        user: user.user,\r\n    }), shallowEqual);\r\n\r\n    useEffect(() => {\r\n        if (user === null) {\r\n            alert('올바른 접근이 아닙니다!!!');\r\n            history.push('/');\r\n        }\r\n        dispatch(initializeGame())\r\n    }, [dispatch, user, history]);\r\n\r\n    return (\r\n        <Game\r\n            content={isStart ? <GameBoardContainer/> : <GameStartContainer/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(GameContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport GameContainer from \"../container/game/GameContainer\";\r\n\r\nconst GamePage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <GameContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GamePage;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport PostListPage from \"./pages/PostListPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\nimport WritePage from \"./pages/WritePage\";\r\nimport GamePage from \"./pages/GamePage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Route component={PostListPage} path={[\"/@:username\", \"/\"]} exact/>\r\n            <Route component={RegisterPage} path={\"/register\"}/>\r\n            <Route component={LoginPage} path={\"/login\"}/>\r\n            <Route component={PostPage} path={\"/@:username/:postId\"}/>\r\n            <Route component={WritePage} path={\"/write\"}/>\r\n            <Route component={GamePage} path={\"/game\"}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport {all} from 'redux-saga/effects';\r\nimport auth, {authSaga} from './auth'\r\nimport loading from \"./loading\";\r\nimport user, {userSaga} from \"./user\";\r\nimport write, {writeSaga} from \"./write\";\r\nimport post, {postSaga} from \"./post\";\r\nimport posts, {postsSaga} from \"./posts\";\r\nimport game from \"./game\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    loading,\r\n    user,\r\n    write,\r\n    post,\r\n    posts,\r\n    game,\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer, {rootSaga} from './modules';\r\nimport {tempSetUser, check} from \"./modules/user\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nfunction loadUser() {\r\n    try {\r\n        const user = localStorage.getItem('user');\r\n        if (!user) return;\r\n\r\n        store.dispatch(tempSetUser(user));\r\n        store.dispatch(check());\r\n    } catch (e) {\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}