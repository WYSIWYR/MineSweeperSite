{"version":3,"sources":["serviceWorker.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/auth.js","modules/user.js","modules/write.js","lib/api/posts.js","modules/post.js","modules/posts.js","lib/calcDate.js","lib/calcWillOpenBlock.js","modules/game.js","lib/calcChord.js","lib/calcHighlightOff.js","modules/index.js","components/common/Responsive.js","lib/styles/palette.js","components/common/Button.js","components/common/Header.js","container/common/HeaderContainer.js","components/common/SubInfo.js","components/common/Tags.js","components/post/PostList.js","container/posts/PostListContainer.js","components/post/Pagination.js","container/posts/PaginationContainer.js","pages/PostListPage.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","container/auth/RegisterForm.js","pages/RegisterPage.js","container/auth/LoginForm.js","pages/LoginPage.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","container/post/PostViewerContainer.js","pages/PostPage.js","components/write/Editor.js","container/write/EditorContainer.js","components/write/TagBox.js","container/write/TagBoxContainer.js","components/write/WriteActionButton.js","container/write/WriteActionButtonsContainer.js","pages/WritePage.js","components/game/Game.js","components/game/GameStart.js","container/game/GameStartContainer.js","components/game/GameBlock.js","container/game/GameBlockContainer.js","components/game/AskRestartModal.js","components/game/TutorialModal.js","components/game/GameBoard.js","container/game/GameBoardContainer.js","container/game/GameContainer.js","pages/GamePage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","startLoading","createAction","requestType","finishLoading","handleActions","state","action","payload","createRequsetActionType","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","client","axios","create","logout","post","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","enterForm","leaveForm","register","username","password","login","registerSaga","loginSaga","takeLatest","initialState","passwordConfirm","initialize","auth","authError","produce","draft","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","checkError","writeSaga","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","setOriginalPost","writePost","title","level","time","body","tags","updatePost","id","writePostSaga","updatePostSaga","patch","postError","originalPostId","originalLevel","originalTime","_id","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","readPost","unloadPost","readPostSaga","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","page","tag","listPostsSaga","queryString","qs","stringify","posts","lastPage","parseInt","headers","startTime","endTime","undefined","output","sec","Math","floor","getTime","date","hour","min","ground","size","width","nearBlock","storeNearBlock","slice","ids","visited","Array","fill","queue","zeroBlock","length","idx","shift","i","localNearBlock","isOpen","val","push","initializeGame","setLevel","startGame","mineNum","openBlock","openNearBlock","increaseOpenBlockNum","num","setFlag","doChord","highlightOff","finishGame","clear","isStart","isFinish","isClear","openBlockNum","Date","flagSet","isHighlight","calcWillOpenBlock","map","space","forEach","returnVal","nearFlag","pop","calcChord","finish","every","flagset","concat","sort","calcDate","nearCloseBlock","calcHighlightOff","rootSaga","all","rootReducer","combineReducers","loading","write","game","StyledResponsive","styled","div","Responsive","children","rest","palette","gray","cyan","buttonStyle","css","props","fullWidth","marginTop","block","StyledButton","button","StyledLink","Link","Button","to","StyledHeader","Wrapper","Spacer","UserInfo","React","memo","onLogout","JSON","parse","getItem","className","onClick","withRouter","history","dispatch","useDispatch","useCallback","StyledSubInfo","hasMarginTop","SubInfo","publishedDate","toLocaleDateString","StyledTags","Tags","StyledPostList","FormAndButtonWrapper","StyledSearchForm","StyledPostItem","PostItem","searchTypeInput","searchForInput","onSearchSubmit","onSearchTypeChange","onSearchForChange","onSubmit","name","ref","onChange","placeholder","searchType","useRef","searchFor","useSelector","shallowEqual","preventDefault","current","query","target","useEffect","pathname","search","params","ignoreQueryPrefix","StyledPagination","PageNumber","buildLink","disabled","PostListPage","StyledAuthTemplate","WhiteBox","StyledAuthForm","StyledInput","input","Footer","textMap","ErrorMessage","AuthForm","text","autoComplete","useState","setError","status","setItem","includes","RegisterPage","LoginPage","StyledPostViewer","PostHead","PostContent","PostViewer","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","StyledAskModal","AskModal","visible","description","confirmText","cancelText","onConfirm","onCancel","AskRemoveModal","StyledPostActionButtons","ActionButton","PostActionButtons","onEdit","onRemove","modal","setModal","postId","ownPost","a","delete","PostPage","StyledEditor","TitleInput","LevelTimeBlock","QuillWrapper","onChangeField","quillElement","quillIstance","mounted","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","onChangeTitle","alert","StyledTagBox","TagForm","Tag","StyledTagList","TagItem","TagList","onChangeTags","setInput","localTags","setLocalTags","insertTag","newTags","filter","t","trim","TagBoxContainer","StyledWriteActionButtons","onPublished","isEdit","onPublish","goBack","WriteActionButton","WritePage","content","onStart","onLevelChange","levelSelect","random","range","GameBlock","onBlockOpen","onMouseDownAction","onMouseUpAction","classNames","onMouseDown","onMouseUp","onContextMenu","onAuxClick","onWheel","src","alt","prevProps","nextProps","AskRestartModal","finishText","StyledModal","step","setStep","onPrevClick","onNextClick","onRestart","onClear","clearModal","setClearModal","restartModal","setRestartModal","tutorialModal","setTutorialModal","onTutorialClose","onRestartClick","onRestartCancel","onClearClick","onClearCancel","GamePage","App","component","path","exact","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e6ae317a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {createAction, handleActions} from \"redux-actions\";\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\n// 요청을 위한 액션 타입(requestType)을 payload로 설정함\r\n\r\nexport const startLoading = createAction(\r\n    START_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n    FINISH_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nexport default handleActions(\r\n    {\r\n        [START_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: true,\r\n        }),\r\n        [FINISH_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: false,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import {call, put} from 'redux-saga/effects';\r\nimport {startLoading, finishLoading} from \"../modules/loading\";\r\n\r\nexport const createRequsetActionType = type => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return function* (action) {\r\n        yield put(startLoading(type));\r\n        try {\r\n            const response = yield call(request, action.payload);\r\n            yield put({\r\n                type: SUCCESS,\r\n                payload: response.data,\r\n                meta: response,\r\n            });\r\n        } catch (e) {\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: e,\r\n                error: true,\r\n            });\r\n        }\r\n        yield put(finishLoading(type));\r\n    };\r\n}","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from \"./client\";\r\n\r\n// 로그인 api 요청\r\nexport const login = ({username, password}) =>\r\n    client.post('/api/auth/login', {username, password});\r\n\r\n// 회원가입 api 요청\r\nexport const register = ({username, password}) =>\r\n    client.post('/api/auth/register', {username, password});\r\n\r\n// 로그인 확인 api 요청\r\nexport const check = () =>\r\n    client.get('/api/auth/check');\r\n\r\n// 로그아웃\r\nexport const logout = () =>\r\n    client.post('/api/auth/logout');\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport produce from \"immer\";\r\nimport {takeLatest} from \"redux-saga/effects\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as authAPI from \"../lib/api/auth\";\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst ENTER_FORM = 'auth/ENTER_FORM';\r\nconst LEAVE_FORM = 'auth/LEAVE_FORM';\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequsetActionType('auth/REGISTER');\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequsetActionType('auth/LOGIN');\r\n\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    ({form, key, value}) => ({\r\n        form,   // register, login\r\n        key,    // username, password, passwordConfirm\r\n        value,  // 입력된 값\r\n    })\r\n);\r\nexport const enterForm = createAction(ENTER_FORM, form => form);\r\nexport const leaveForm = createAction(LEAVE_FORM);\r\nexport const register = createAction(REGISTER, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\nexport const login = createAction(LOGIN, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n    yield takeLatest(REGISTER, registerSaga);\r\n    yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n    register: {\r\n        username: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    },\r\n    login: {\r\n        username: '',\r\n        password: '',\r\n    },\r\n    initialize: '',\r\n    auth: null,\r\n    authError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) =>\r\n            produce(state, draft => {\r\n                draft[form][key] = value;\r\n            }),\r\n        [ENTER_FORM]: (state, {payload: form}) => ({\r\n            ...state,\r\n            [form]: initialState[form],\r\n            initialize: form,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [LEAVE_FORM]: state => ({\r\n            ...state,\r\n            initialize: '',\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [REGISTER]: (state) => ({\r\n            ...state,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n        [LOGIN]: (state) => ({\r\n            ...state,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport {takeLatest, call} from \"redux-saga/effects\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as authAPI from \"../lib/api/auth\";\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequsetActionType('user/CHECK');\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n    try {\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log('localStorage is not working...');\r\n    }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n        yield call(authAPI.logout); // logout api 호출\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n        localStorage.removeItem('tutorial'); // localStorage에서 tutorial을 제거\r\n    } catch (e) {\r\n        console.log('localStorage is not working...');\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [TEMP_SET_USER]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_SUCCESS]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            checkError: error,\r\n        }),\r\n        [LOGOUT]: state => ({\r\n           ...state,\r\n           user: null,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport {takeLatest} from \"redux-saga/effects\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from \"../lib/api/posts\";\r\n\r\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST'; // 포스트 수정시 포스트 내용 세팅\r\nconst [\r\n    WRITE_POST,\r\n    WRITE_POST_SUCCESS,\r\n    WRITE_POST_FAILURE\r\n] = createRequsetActionType('write/WRITE_POST');\r\nconst [\r\n    UPDATE_POST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPDATE_POST_FAILURE\r\n] = createRequsetActionType('write/UPDATE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({key, value}) => ({\r\n    key,\r\n    value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\r\nexport const writePost = createAction(WRITE_POST,\r\n    ({title, level, time, body, tags}) => ({\r\n        title,\r\n        level,\r\n        time,\r\n        body,\r\n        tags,\r\n    }));\r\nexport const updatePost = createAction(UPDATE_POST,\r\n    ({id, title, body, tags}) => ({\r\n        id,\r\n        title,\r\n        body,\r\n        tags,\r\n    }));\r\n\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\n\r\nexport function* writeSaga() {\r\n    yield takeLatest(WRITE_POST, writePostSaga);\r\n    yield takeLatest(UPDATE_POST, updatePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    title: '',\r\n    body: '',\r\n    tags: [],\r\n    post: null,\r\n    postError: null,\r\n    originalPostId: null,\r\n    originalLevel: null,\r\n    originalTime: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE]: state => initialState,\r\n        [CHANGE_FIELD]: (state, {payload: {key, value}}) => ({\r\n            ...state,\r\n            [key]: value,\r\n        }),\r\n        [WRITE_POST]: state => ({\r\n            ...state,\r\n            post: null,\r\n            postError: null,\r\n        }),\r\n        [WRITE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n        }),\r\n        [WRITE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError: postError,\r\n        }),\r\n        [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\r\n            ...state,\r\n            title: post.title,\r\n            body: post.body,\r\n            tags: post.tags,\r\n            originalPostId: post._id,\r\n            originalLevel: post.level,\r\n            originalTime: post.time,\r\n        }),\r\n        [UPDATE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n            postError: null,\r\n        }),\r\n        [UPDATE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            post: null,\r\n            postError: postError,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import qs from 'qs';\r\nimport client from './client';\r\n\r\nexport const listPosts = ({page, username, tag, level}) => {\r\n    const queryString = qs.stringify({\r\n        page,\r\n        username,\r\n        tag,\r\n        level,\r\n    });\r\n\r\n    return client.get(`/api/posts?${queryString}`);\r\n};\r\n\r\nexport const readPost = id => client.get(`/api/posts/${id}`);\r\n\r\nexport const writePost = ({title, level, time, body, tags}) =>\r\n    client.post('/api/posts', {title, level, time, body, tags});\r\n\r\n\r\nexport const updatePost = ({id, title, body, tags}) =>\r\n    client.patch(`/api/posts/${id}`, {\r\n        title,\r\n        body,\r\n        tags,\r\n    });\r\n\r\nexport const removePost = id => client.delete(`/api/posts/${id}`);\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport {takeLatest} from \"redux-saga/effects\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from \"../lib/api/posts\";\r\n\r\nconst [\r\n    READ_POST,\r\n    READ_POST_SUCCESS,\r\n    READ_POST_FAILURE\r\n] = createRequsetActionType('post/POST_READ');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 지우기\r\n\r\nexport const readPost = createAction(READ_POST, id => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\n\r\nexport function* postSaga() {\r\n    yield takeLatest(READ_POST, readPostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    post: null,\r\n    error: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [READ_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n            error: null,\r\n        }),\r\n        [READ_POST_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            post: null,\r\n            error: error,\r\n        }),\r\n        [UNLOAD_POST]: () => initialState,\r\n    },\r\n    initialState,\r\n);\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport {takeLatest} from \"redux-saga/effects\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from \"../lib/api/posts\";\r\n\r\nconst [\r\n    LIST_POSTS,\r\n    LIST_POSTS_SUCCESS,\r\n    LIST_POSTS_FAILURE,\r\n] = createRequsetActionType('posts/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(LIST_POSTS, ({page, username, tag, level}) => ({\r\n        page,\r\n        username,\r\n        tag,\r\n        level,\r\n    }),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postAPI.listPosts);\r\n\r\nexport function* postsSaga() {\r\n    yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error: null,\r\n    lastPage: 1,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [LIST_POSTS]: state => ({\r\n            ...state,\r\n            error: null,\r\n        }),\r\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts, meta: response}) => ({\r\n            ...state,\r\n            posts,\r\n            lastPage: parseInt(response.headers['last-page'], 10)\r\n        }),\r\n        [LIST_POSTS_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error: error,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n","export default function (startTime, endTime) {\r\n    if (startTime === undefined || endTime === undefined) return null;\r\n    let output = '';\r\n    let sec = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\r\n    let date = Math.floor(sec / 60 / 60 / 24);\r\n    if (date > 0) {\r\n        sec -= date * 60 * 60 * 24;\r\n        output += date + '일';\r\n    }\r\n\r\n    let hour = Math.floor(sec / 60 / 60);\r\n    if (hour > 0) {\r\n        sec -= hour * 60 * 60;\r\n        output += hour + '시';\r\n    }\r\n\r\n    let min = Math.floor(sec / 60);\r\n    if (min > 0) {\r\n        sec -= min * 60;\r\n        output += min + '분';\r\n    }\r\n\r\n    return output += sec + '초';\r\n}","export default function (id, ground, size, width, nearBlock) {\r\n    const storeNearBlock = nearBlock.slice();\r\n    let ids = [];\r\n    let visited = new Array(size).fill(false);\r\n    let queue = [id];\r\n    let zeroBlock = [id];\r\n\r\n    visited[id] = true;\r\n\r\n    while (queue.length > 0) {\r\n        let idx = queue.shift();\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let localNearBlock = idx + storeNearBlock[i];\r\n\r\n            if (localNearBlock > -1 && localNearBlock < size && !ground[localNearBlock].isOpen &&\r\n                ground[localNearBlock].val === 0 && !visited[localNearBlock] &&\r\n                !((idx % width === 0 && localNearBlock % width === width - 1) ||\r\n                    (idx % width === width - 1 && localNearBlock % width === 0))) {\r\n                queue.push(localNearBlock);\r\n                zeroBlock.push(localNearBlock);\r\n                visited[localNearBlock] = true;\r\n                ids.push(localNearBlock);\r\n            }\r\n        }\r\n    }\r\n\r\n    visited = new Array(size).fill(false);\r\n\r\n    while (zeroBlock.length > 0) {\r\n        let idx = zeroBlock.shift();\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            let localNearBlock = idx + storeNearBlock[i];\r\n\r\n            if (localNearBlock > -1 && localNearBlock < size &&\r\n                !visited[localNearBlock] &&\r\n                ground[localNearBlock].val > 0 &&\r\n                !ground[localNearBlock].isOpen &&\r\n                !((idx % width === 0 && localNearBlock % width === width - 1) ||\r\n                    (idx % width === width - 1 && localNearBlock % width === 0))) {\r\n                visited[localNearBlock] = true;\r\n                ids.push(localNearBlock);\r\n            }\r\n        }\r\n    }\r\n\r\n    return ids;\r\n}","import {createAction, handleActions} from \"redux-actions\";\r\nimport produce from \"immer\";\r\nimport calcDate from \"../lib/calcDate\";\r\nimport calcWillOpenBlock from \"../lib/calcWillOpenBlock\";\r\nimport calcChord from \"../lib/calcChord\";\r\nimport calcHighlightOff from \"../lib/calcHighlightOff\";\r\n\r\nconst INITIALIZE_GAME = 'game/INITIALIZE'; // 게임 초기화\r\nconst SET_LEVEL = 'game/SET_LEVEL'; // 게임 난이도 설정\r\nconst START_GAME = 'game/START_GAME'; // 게임 시작\r\nconst OPEN_BLOCK = 'game/OPEN_BLOCK'; // 블록을 열때 사용\r\nconst OPEN_NEAR_BLOCK = 'game/OPEN_NEAR_BLOCK';\r\nconst INCREASE_OPEN_BLOCK_NUM = 'game/INCREASE_OPEN_BLOCK_NUM'; // 열린 블록의 수를 더할 때 사용\r\nconst SET_FLAG = 'game/SET_FLAG'; // 지뢰 위치 설정할 때 사용\r\nconst DO_CHORD = 'game/DO_CHORD'; // 마우스 휠버튼을 눌렀을 때 사용\r\nconst HIGHLIGHT_OFF = 'game/HIGHLIGHT_OFF'; // 주변에 닫혀있는 블록 위치 하이라이트끌 때 사용\r\nconst FINISH_GAME = 'game/FINISH_GAME'; // 게임 종료\r\n\r\nexport const initializeGame = createAction(INITIALIZE_GAME);\r\nexport const setLevel = createAction(SET_LEVEL, level => level);\r\nexport const startGame = createAction(START_GAME,\r\n    ({ground, size, width, mineNum}) => ({\r\n        ground,\r\n        size,\r\n        width,\r\n        mineNum,\r\n    }));\r\nexport const openBlock = createAction(OPEN_BLOCK, id => id);\r\nexport const openNearBlock = createAction(OPEN_NEAR_BLOCK, id => id);\r\nexport const increaseOpenBlockNum = createAction(INCREASE_OPEN_BLOCK_NUM, num => num);\r\nexport const setFlag = createAction(SET_FLAG, id => id);\r\nexport const doChord = createAction(DO_CHORD, id => id);\r\nexport const highlightOff = createAction(HIGHLIGHT_OFF, id => id);\r\nexport const finishGame = createAction(FINISH_GAME, clear => clear);\r\n\r\nconst initialState = {\r\n    level: '쉬움',\r\n    isStart: false,\r\n    isFinish: false,\r\n    isClear: '',\r\n    ground: [],\r\n    size: 0,\r\n    width: 0,\r\n    mineNum: 0,\r\n    openBlockNum: 0,\r\n    nearBlock: [],\r\n    startTime: null,\r\n    time: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE_GAME]: state => initialState,\r\n        [SET_LEVEL]: (state, {payload: level}) => ({\r\n            ...state,\r\n            level: level\r\n        }),\r\n        [START_GAME]: (state, {payload: {ground, size, width, mineNum}}) => ({\r\n            ...state,\r\n            isStart: true,\r\n            ground: ground,\r\n            size: size,\r\n            width: width,\r\n            mineNum: mineNum,\r\n            nearBlock: [-width, -1, 1, width, -width - 1, -width + 1, width - 1, width + 1],\r\n            startTime: new Date(),\r\n        }),\r\n        [OPEN_BLOCK]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = false;\r\n                draft.ground[id].isHighlight = false;\r\n                draft.ground[id].isOpen = true;\r\n            }),\r\n        [OPEN_NEAR_BLOCK]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                const ids = calcWillOpenBlock(id, draft.ground, draft.size, draft.width, draft.nearBlock);\r\n                draft.ground.map(function (space) {\r\n                    ids.forEach(function (id) {\r\n                        if (space.id === id) {\r\n                            space.isOpen = true;\r\n                            space.flagSet = false;\r\n                            space.isHighlight = false;\r\n                        }\r\n                    });\r\n                    return space;\r\n                });\r\n            }),\r\n        [INCREASE_OPEN_BLOCK_NUM]: (state, {payload: num}) =>\r\n            produce(state, draft => {\r\n                draft.openBlockNum = num;\r\n            }),\r\n        [SET_FLAG]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = !draft.ground[id].flagSet;\r\n                draft.ground[id].isHighlight = false;\r\n            }),\r\n        [DO_CHORD]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                const val = calcChord(id, draft.ground, draft.size, draft.width, draft.nearBlock);\r\n                let ids = [];\r\n                let finish = false;\r\n                val.type === 'OpenBlock'\r\n                    ? draft.ground.map(function (space) {\r\n                        val.ids.every(function (id) {\r\n                            if (space.id === id) {\r\n                                if (space.val === 'X') {\r\n                                    finish = true;\r\n                                    return false;\r\n                                } else if (space.val === 0) {\r\n                                    space.isOpen = true;\r\n                                    space.flagset = false;\r\n                                    space.isHighlight = false;\r\n                                    ids = ids.concat(calcWillOpenBlock(id, draft.ground, draft.size, draft.width, draft.nearBlock)).sort();\r\n                                } else {\r\n                                    space.isOpen = true;\r\n                                    space.flagset = false;\r\n                                    space.isHighlight = false;\r\n                                }\r\n                            }\r\n                            return true;\r\n                        });\r\n\r\n                        return space;\r\n                    }).map(function (space) {\r\n                        ids.forEach(function (id) {\r\n                            if (space.id === id) {\r\n                                space.isOpen = true;\r\n                                space.flagset = false;\r\n                                space.isHighlight = false;\r\n                            }\r\n                        });\r\n                        return space;\r\n                    })\r\n                    : draft.ground.map(function (space) {\r\n                        val.ids.forEach(function (id) {\r\n                            if (space.id === id) {\r\n                                space.isHighlight = true;\r\n                            }\r\n                        });\r\n                        return space;\r\n                    });\r\n                if (finish) {\r\n                    draft.ground.map(space => space.val === 'X' ? space.isOpen = true : space);\r\n                    draft.isFinish = true;\r\n                    draft.isClear = 'Game Over...';\r\n                    draft.time = calcDate(draft.startTime, new Date());\r\n                }\r\n            }),\r\n        [HIGHLIGHT_OFF]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                const ids = calcHighlightOff(id, draft.ground, draft.size, draft.width, draft.nearBlock);\r\n                draft.ground.map(function (space) {\r\n                    ids.forEach(function (id) {\r\n                        if (space.id === id) {\r\n                            space.isHighlight = false;\r\n                        }\r\n                    });\r\n                    return space;\r\n                });\r\n            }),\r\n        [FINISH_GAME]: (state, {payload: clear}) =>\r\n            produce(state, draft => {\r\n                draft.ground.map(space => space.val === 'X' ? space.isOpen = true : space);\r\n                draft.isFinish = true;\r\n                draft.isClear = clear;\r\n                draft.time = calcDate(draft.startTime, new Date());\r\n            }),\r\n    }, initialState\r\n);\r\n","export default function (id, ground, size, width, nearBlock) {\r\n    let returnVal = {\r\n        ids: [],\r\n        type: '',\r\n    };\r\n    let storeNearBlock = nearBlock.slice();\r\n    let nearFlag = 0;\r\n    let localNearBlock = 0;\r\n    while (storeNearBlock.length > 0) {\r\n        localNearBlock = id + storeNearBlock.pop();\r\n        if (\r\n            localNearBlock > -1 && localNearBlock < size &&\r\n            !ground[localNearBlock].isOpen &&\r\n            !((id % width === 0 && localNearBlock % width === width - 1) ||\r\n                (id % width === width - 1 && localNearBlock % width === 0))\r\n        ) {\r\n            if (ground[localNearBlock].flagSet) {\r\n                nearFlag++;\r\n            } else {\r\n                returnVal.ids.push(localNearBlock);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (nearFlag === parseInt(ground[id].val, 10)) {\r\n        returnVal.type = 'OpenBlock';\r\n    } else {\r\n        returnVal.type = 'HighlightOn';\r\n    }\r\n\r\n    return returnVal;\r\n}","export default function (id, ground, size, width, nearBlock) {\r\n    let storeNearBlock = nearBlock.slice();\r\n    let nearCloseBlock = [];\r\n    let localNearBlock = 0;\r\n    let ids = [];\r\n    while (storeNearBlock.length > 0) {\r\n        localNearBlock = id + storeNearBlock.pop();\r\n\r\n        if (\r\n            localNearBlock > -1 && localNearBlock < size &&\r\n            !ground[localNearBlock].isOpen && !ground[localNearBlock].flagSet &&\r\n            !((id % width === 0 && localNearBlock % width === width - 1) ||\r\n                (id % width === width - 1 && localNearBlock % width === 0))\r\n        ) {\r\n            nearCloseBlock.push(localNearBlock);\r\n        }\r\n    }\r\n\r\n    while (nearCloseBlock.length > 0) {\r\n        const space = nearCloseBlock.pop();\r\n        ids.push(space);\r\n    }\r\n    return ids;\r\n}","import {combineReducers} from \"redux\";\r\nimport {all} from \"redux-saga/effects\";\r\nimport auth, {authSaga} from \"./auth\"\r\nimport loading from \"./loading\";\r\nimport user, {userSaga} from \"./user\";\r\nimport write, {writeSaga} from \"./write\";\r\nimport post, {postSaga} from \"./post\";\r\nimport posts, {postsSaga} from \"./posts\";\r\nimport game from \"./game\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    loading,\r\n    user,\r\n    write,\r\n    post,\r\n    posts,\r\n    game,\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledResponsive = styled.div`\r\n    padding: 0 1rem;\r\n    width: 1024px;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    \r\n    @media(max-width: 1024px) {\r\n        width: 768px;\r\n    }\r\n    \r\n    @media(max-width: 768px) {\r\n        width: 100%;\r\n    }    \r\n`;\r\n\r\nconst Responsive = ({children, ...rest}) => {\r\n    // props를 사용할 수 있도록 ...rest를 사용하여 StyledResponsive에게 전달\r\n    return <StyledResponsive {...rest}>{children}</StyledResponsive>\r\n};\r\n\r\nexport default Responsive;\r\n","const palette = {\r\n    gray: [\r\n        '#f8f9fa',\r\n        '#f1f3f5',\r\n        '#e9ecef',\r\n        '#dee2e6',\r\n        '#ced4da',\r\n        '#adb5bd',\r\n        '#868e96',\r\n        '#495057',\r\n        '#343a40',\r\n        '#212529',\r\n    ],\r\n    cyan: [\r\n        '#e3fafc',\r\n        '#c5f6fa',\r\n        '#99e9f2',\r\n        '#66d9e8',\r\n        '#3bc9db',\r\n        '#22b8cf',\r\n        '#15aabf',\r\n        '#1098ad',\r\n        '#0c8599',\r\n        '#0b7285',\r\n    ],\r\n};\r\n\r\nexport default palette;","import React from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    \r\n    @media (max-width: 550px) {\r\n        font-size: 0.8rem;\r\n    }\r\n    \r\n    background: ${palette.gray[8]};\r\n    &:hover {\r\n        background: ${palette.gray[6]};\r\n    }\r\n    ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n            padding-top: 0.75rem;\r\n            padding-bottom: 0.75rem;\r\n            width: 100%;\r\n            font-size: 1.125rem;\r\n        `\r\n    }\r\n    ${props =>\r\n    props.cyan &&\r\n    css`\r\n            background: ${palette.cyan[5]};\r\n            &:hover {\r\n                background: ${palette.cyan[4]};\r\n            }\r\n        `\r\n    }\r\n    ${props =>\r\n    props.marginTop &&\r\n    css`\r\n            margin-top: ${props.marginTop};\r\n        `\r\n    }\r\n    ${props => \r\n    props.block &&\r\n    css`\r\n        display: block;\r\n        `\r\n    }\r\n    &:disabled {\r\n        background: ${palette.gray[3]};\r\n        color: ${palette.gray[5]};\r\n        cursor: not-allowed;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n    return props.to ? (\r\n        <StyledLink {...props} cyan={props.cyan ? 1 : 0}/>\r\n    ) : (\r\n        <StyledButton {...props}/>\r\n    )\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Responsive from \"./Responsive\";\r\nimport Button from \"./Button\";\r\n\r\nconst StyledHeader = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    background: white;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\n// Responsive 컴포넌트에 스타일을 추가해서 새로운 컴포넌트 생성\r\nconst Wrapper = styled(Responsive)`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .logo {\r\n        font-size: 1.125rem;\r\n        font-weight: 800;\r\n        letter-spacing: 2px;\r\n        @media (max-width: 550px) {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n    .right {\r\n        display: flex;\r\n        align-items: center;\r\n        a {\r\n            margin-right: 0.5rem\r\n        }\r\n    }\r\n`;\r\n\r\n// Header가 fixed이기 때문에 콘텐츠를 4rem 아래에 나타나도록 해 주는 컴포넌트\r\nconst Spacer = styled.div`\r\n    height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    font-weight: 800;\r\n    margin-right: 1rem;\r\n    @media (max-width: 550px) {\r\n        font-size: 0.8rem;\r\n    }\r\n`;\r\n\r\nconst Header = ({onLogout}) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (\r\n        <>\r\n            <StyledHeader>\r\n                <Wrapper>\r\n                    <Link to={\"/\"} className={\"logo\"}>\r\n                        MineSweeper\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className={\"right\"}>\r\n                            <UserInfo>{user.username}</UserInfo>\r\n                            <Button onClick={onLogout}>로그아웃</Button>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={\"right\"}>\r\n                            <Button to={\"/login\"}>로그인</Button>\r\n                            <Button to={\"/register\"}>회원가입</Button>\r\n                        </div>\r\n                    )}\r\n                </Wrapper>\r\n            </StyledHeader>\r\n            <Spacer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(Header);","import React, {useCallback} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Header from \"../../components/common/Header\";\r\nimport {logout} from \"../../modules/user\";\r\n\r\nconst HeaderContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const onLogout = useCallback(() => {\r\n        dispatch(logout());\r\n        history.push('/');\r\n    }, [dispatch, history]);\r\n    return <Header onLogout={onLogout}/>\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import React from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledSubInfo = styled.div`\r\n    ${props =>\r\n        props.hasMarginTop &&\r\n        css`\r\n            margin-top: 1rem;\r\n        `\r\n    }\r\n    color: ${palette.gray[6]};\r\n    \r\n    span + span:before {\r\n        color: ${palette.gray[5]};\r\n        padding: 0 0.25rem;\r\n        content: '\\\\B7'; /* 가운뎃점 문자 */\r\n    }\r\n`;\r\n\r\nconst SubInfo = ({username, time, publishedDate, hasMarginTop}) => {\r\n    return (\r\n        <StyledSubInfo hasMarginTop={hasMarginTop}>\r\n            <span>\r\n                <b>\r\n                    <Link to={`/@${username}`}>{username}</Link>\r\n                </b>\r\n            </span>\r\n            <span>클리어 타임: {time}</span>\r\n            <span>플레이 날짜: {new Date(publishedDate).toLocaleDateString()}</span>\r\n        </StyledSubInfo>\r\n    )\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTags = styled.div`\r\n    margin-top: 0.5rem;\r\n    .tag{\r\n        display: inline-block;\r\n        color: ${palette.gray[7]};\r\n        text-decoration: none;\r\n        margin-right: 0.5rem;\r\n        &:hover {\r\n            color: ${palette.cyan[6]}\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tags = ({tags}) => {\r\n    return (\r\n        <StyledTags>\r\n            {tags.map(tag => (\r\n                <Link className={\"tag\"} to={`/?tag=${tag}`} key={tag}>\r\n                    #{tag}\r\n                </Link>\r\n            ))}\r\n        </StyledTags>\r\n    )\r\n};\r\n\r\nexport default Tags;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostList = styled(Responsive)`\r\n    margin-top: 3rem\r\n`;\r\n\r\nconst FormAndButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 3rem;\r\n    @media (max-width: 550px) {\r\n        line-height: 1.5rem;\r\n    }\r\n    @media (max-width: 490px) {\r\n        display: block;\r\n        height: 4.6rem;\r\n        a {\r\n            display: block;\r\n            width: 6rem;\r\n            height: 2rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledSearchForm = styled.form`\r\n    select {\r\n        width: 6rem;\r\n        height: 2rem;\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 4px;\r\n        background: ${palette.cyan[5]};\r\n        color: white;\r\n        text-align: center;\r\n        font-size: 1rem;\r\n        font-weight: bold;\r\n        margin-right: 0.4rem;\r\n        \r\n        @media (max-width: 550px) {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n    \r\n    input {\r\n        width: 15rem;\r\n        height: 2rem;\r\n        outline: none;\r\n        border: none;\r\n        border-radius: 4px;\r\n        background: ${palette.cyan[0]};\r\n        color: ${palette.gray[6]};\r\n        padding: 0 0.6rem;\r\n        text-align: center;\r\n        font-size: 1rem;\r\n        font-weight: bold;\r\n        \r\n        @media (max-width: 550px) {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n    \r\n    @media (max-width: 490px) {\r\n        margin-bottom: 0.4rem;\r\n    }\r\n`;\r\n\r\nconst StyledPostItem = styled.div`\r\n    padding: 3rem 0;\r\n    &:first-child {\r\n        padding-top: 0;\r\n    }\r\n    & + & {\r\n        border-top: 1px solid ${palette.gray[2]};\r\n    }\r\n    \r\n    h2 {\r\n        font-size: 2rem;\r\n        margin-bottom: 0;\r\n        margin-top: 0;\r\n        &:hover {\r\n            color: ${palette.gray[6]};\r\n        }\r\n    }\r\n    p {\r\n       margin-top: 1.5rem;\r\n    }\r\n    .level {\r\n        font-weight: bold;\r\n        color: ${palette.cyan[6]};\r\n    }\r\n    \r\n    @media (max-width: 450px) {\r\n        font-size:\r\n    }\r\n`;\r\n\r\nconst PostItem = ({post}) => {\r\n    const {_id, title, level, time, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostItem>\r\n            <h2>\r\n                <Link to={`/@${user.username}/${_id}`}>\r\n                    {title}\r\n                </Link>\r\n            </h2>\r\n            <SubInfo\r\n                username={user.username}\r\n                time={time}\r\n                publishedDate={publishedDate}\r\n            />\r\n            <span className={'level'}>\r\n                <Link to={`/?level=${level}`}>난이도: {level}</Link>\r\n            </span>\r\n            <Tags\r\n                tags={tags}\r\n            />\r\n            <p>{body}</p>\r\n        </StyledPostItem>\r\n    )\r\n};\r\n\r\nconst PostList = ({posts, error, loading, searchTypeInput, searchForInput, onSearchSubmit, onSearchTypeChange, onSearchForChange}) => {\r\n    if (error) {\r\n        return <StyledPostList>에러가 발생했습니다!</StyledPostList>\r\n    }\r\n\r\n    return (\r\n        <StyledPostList>\r\n            <FormAndButtonWrapper>\r\n                <StyledSearchForm onSubmit={onSearchSubmit}>\r\n                    <select\r\n                        name=\"searchType\"\r\n                        ref={searchTypeInput}\r\n                        onChange={onSearchTypeChange}\r\n                    >\r\n                        <option value=\"username\">아이디</option>\r\n                        <option value=\"level\">난이도</option>\r\n                        <option value=\"tag\">태그</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        name={\"searchFor\"}\r\n                        placeholder={\"검색할 내용을 입력해주세요!!!\"}\r\n                        ref={searchForInput}\r\n                        onChange={onSearchForChange}\r\n                    />\r\n                </StyledSearchForm>\r\n                <Button to={\"/game\"} cyan>\r\n                    게임 시작!\r\n                </Button>\r\n            </FormAndButtonWrapper>\r\n            <div>\r\n                {!loading && posts && (\r\n                    posts.map(post => (\r\n                        <PostItem post={post} key={post._id}/>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </StyledPostList>\r\n    )\r\n};\r\n\r\nexport default React.memo(PostList);\r\n","import React, {useCallback, useEffect, useRef} from \"react\";\r\nimport qs from \"qs\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport PostList from \"../../components/post/PostList\";\r\nimport {listPosts} from \"../../modules/posts\";\r\n\r\nconst PostListContainer = ({match, location, history}) => {\r\n    const searchType = useRef('username');\r\n    const searchTypeInput = useRef();\r\n    const searchFor = useRef('');\r\n    const searchForInput = useRef();\r\n    const dispatch = useDispatch();\r\n    const {posts, error, loading} = useSelector(\r\n        ({posts, loading}) => ({\r\n            posts: posts.posts,\r\n            error: posts.error,\r\n            loading: loading['posts/LIST_POSTS'],\r\n        }), shallowEqual);\r\n\r\n    const onSearchSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (searchType.current === 'username') {\r\n            history.push(`/@${searchFor.current}`);\r\n        } else {\r\n            const query = qs.stringify({[searchType.current]: searchFor.current});\r\n            history.push(`/?${query}`);\r\n        }\r\n    }, [history]);\r\n\r\n    const onSearchTypeChange = useCallback((e) => {\r\n        searchType.current = e.target.value;\r\n    }, []);\r\n\r\n    const onSearchForChange = useCallback((e) => {\r\n        searchFor.current = e.target.value;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (location.pathname === '/' && location.search === '') {\r\n            searchType.current = 'username';\r\n            searchTypeInput.current.value = 'username';\r\n            searchFor.current = '';\r\n            searchForInput.current.value = '';\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const {username} = match.params;\r\n        const {page, tag, level} = qs.parse(location.search, {\r\n            ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({page, username, tag, level}));\r\n    }, [dispatch, match.params, location.search]);\r\n\r\n    return (\r\n        <PostList\r\n            posts={posts}\r\n            error={error}\r\n            loading={loading}\r\n            searchTypeInput={searchTypeInput}\r\n            searchForInput={searchForInput}\r\n            onSearchSubmit={onSearchSubmit}\r\n            onSearchTypeChange={onSearchTypeChange}\r\n            onSearchForChange={onSearchForChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport qs from \"qs\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledPagination = styled.div`\r\n    width: 320px;\r\n    margin: 0 auto;\r\n    display: felx;\r\n    justify-content: space-between;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst PageNumber = styled.div``;\r\n\r\nconst buildLink = ({page, username, tag, level}) => {\r\n    const query = qs.stringify({page, tag, level});\r\n    return username ? `/@${username}?${query}` : `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({page, lastPage, username, tag, level}) => {\r\n    return (\r\n        <StyledPagination>\r\n            <Button\r\n                disabled={page === 1}\r\n                to={\r\n                    page === 1 ? undefined : buildLink({page: page - 1, username, tag, level})\r\n                }\r\n            >\r\n                이전\r\n            </Button>\r\n            <PageNumber>{page}</PageNumber>\r\n            <Button\r\n                disabled={lastPage === 1 || page === lastPage}\r\n                to={\r\n                    lastPage === 1\r\n                    ? undefined\r\n                    : page === lastPage\r\n                        ? undefined\r\n                        : buildLink({page: page + 1, username, tag, level})\r\n                }\r\n            >\r\n                다음\r\n            </Button>\r\n        </StyledPagination>\r\n    )\r\n};\r\n\r\nexport default React.memo(Pagination);\r\n","import React from \"react\";\r\nimport {useSelector, shallowEqual} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport qs from \"qs\";\r\nimport Pagination from \"../../components/post/Pagination\";\r\n\r\nconst PaginationContainer = ({match, location}) => {\r\n    const {posts, loading, lastPage} = useSelector(({posts, loading}) => ({\r\n        posts: posts.posts,\r\n        loading: loading['posts/LIST_POSTS'],\r\n        lastPage: posts.lastPage,\r\n    }), shallowEqual);\r\n\r\n    if (!posts || loading) return null;\r\n\r\n    const {username} = match.params;\r\n    const {page = '1', tag, level} = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true,\r\n    });\r\n\r\n    return (\r\n        <Pagination\r\n            page={parseInt(page, 10)}\r\n            lastPage={parseInt(lastPage, 10)}\r\n            username={username}\r\n            tag={tag}\r\n            level={level}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostListContainer from \"../container/posts/PostListContainer\";\r\nimport PaginationContainer from \"../container/posts/PaginationContainer\";\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer/>\r\n            <PostListContainer/>\r\n            <PaginationContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostListPage;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// 회원가입 및 로그인 페이지의 레이아웃 컴포넌트\r\nconst StyledAuthTemplate = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: ${palette.gray[2]};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display: block;\r\n        padding-bottom: 2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n    padding: 2rem;\r\n    width: 360px;\r\n    background: white;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}) => {\r\n    return (\r\n        <StyledAuthTemplate>\r\n            <WhiteBox>\r\n                <div className={\"logo-area\"}>\r\n                    <Link to={\"/\"}>MineSweeper</Link>\r\n                </div>\r\n                {children}\r\n            </WhiteBox>\r\n        </StyledAuthTemplate>\r\n    )\r\n};\r\n\r\nexport default React.memo(AuthTemplate);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\n\r\n// 회원가입/로그인 폼 컴포넌트\r\nconst StyledAuthForm = styled.div`\r\n    h3 {\r\n        margin: 0;\r\n        color: ${palette.gray[8]};\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\n// 스타일링된 input\r\nconst StyledInput = styled.input`\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[5]};\r\n    padding-bottom: 0.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    &:focus {\r\n        color: $oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\n// 메인 화면, 회원가입/로그인 링크\r\nconst Footer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 1rem;\r\n    a {\r\n        color: ${palette.gray[6]};\r\n        text-decoration: underline;\r\n        $:hover {\r\n        color: ${palette.gray[9]};\r\n    }\r\n`;\r\n\r\nconst textMap = {\r\n    login: '로그인',\r\n    register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\r\n    const text = textMap[type];\r\n\r\n    return (\r\n        <StyledAuthForm>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <StyledInput\r\n                    autoComplete={\"username\"}\r\n                    name={\"username\"}\r\n                    placeholder={\"아이디\"}\r\n                    onChange={onChange}\r\n                    value={form.username}\r\n                />\r\n                <StyledInput\r\n                    autoComplete={\"new-password\"}\r\n                    name={\"password\"}\r\n                    placeholder={\"비밀번호\"}\r\n                    type={\"password\"}\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                />\r\n                {type === 'register' && (\r\n                    <StyledInput\r\n                        autoComplete={\"new-password\"}\r\n                        name={\"passwordConfirm\"}\r\n                        placeholder={\"비밀번호 확인\"}\r\n                        type={\"password\"}\r\n                        onChange={onChange}\r\n                        value={form.passwordConfirm}\r\n                    />\r\n                )}\r\n\r\n                {error && <ErrorMessage>{error}</ErrorMessage>}\r\n                <Button cyan fullWidth marginTop={\"1rem\"}>\r\n                    {text}\r\n                </Button>\r\n            </form>\r\n            <Footer>\r\n                <Link to={\"/\"}>\r\n                    메인 화면\r\n                </Link>\r\n                {type === 'login' ? (\r\n                    <Link to={\"/register\"}>회원가입</Link>\r\n                ) : (\r\n                    <Link to={\"/login\"}>로그인</Link>\r\n                )}\r\n            </Footer>\r\n        </StyledAuthForm>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {changeField, enterForm, leaveForm, register} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\n\r\nconst RegisterForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, initialize, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.register,\r\n        initialize: auth.initialize,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'register',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    };\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password, passwordConfirm} = form;\r\n        if ([username, password, passwordConfirm].includes('')) {\r\n            setError('빈칸을 모두 입력해 주세요');\r\n            return;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            setError('비밀번호가 일치하지 않습니다');\r\n            dispatch(changeField({form: 'register', key: 'password', value: ''}));\r\n            dispatch(changeField({form: 'register', key: 'passwordConfirm', value: ''}));\r\n            return;\r\n        }\r\n        dispatch(register({username, password}));\r\n    };\r\n\r\n    // 컴포넌트가 처음 렌더링될 떼 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(enterForm('register'));\r\n\r\n        return() => {\r\n            dispatch(leaveForm('register'));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // 회원가입 성공/실패 처리\r\n    useEffect(() => {\r\n        if (initialize === 'register') {\r\n            if (authError) {\r\n                if (authError.response.status === 409) {\r\n                    setError('이미 존재하는 계정입니다');\r\n                    return;\r\n                }\r\n                setError('회원가입 실패');\r\n                return;\r\n            }\r\n            if (auth) {\r\n                dispatch(check());\r\n            }\r\n        }\r\n    }, [initialize, auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working...');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"register\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport RegisterForm from \"../container/auth/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm/>\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {changeField, enterForm, leaveForm, login} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\n\r\nconst LoginForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, initialize, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.login,\r\n        initialize: auth.initialize,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }), shallowEqual);\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = useCallback(e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'login',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    }, [dispatch]);\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        const {username, password} = form;\r\n        dispatch(login({username, password}));\r\n    }, [dispatch, form]);\r\n\r\n    // 컴포넌트가 처음 렌더링 되거나 페이지를 떠날 때 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(enterForm('login'));\r\n\r\n        return() => {\r\n            dispatch(leaveForm('login'));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // 로그인 성공/실패 처리\r\n    useEffect(() => {\r\n        if (initialize === 'login') {\r\n            if (authError) {\r\n                if (authError.response.status === 401) {\r\n                    setError('아이디 또는 비밀번호가 일치하지 않습니다');\r\n                    return;\r\n                }\r\n                setError('로그인 실패');\r\n                return;\r\n            }\r\n            if (auth) {\r\n                dispatch(check());\r\n            }\r\n        }\r\n    }, [initialize, auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working...');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"login\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport LoginForm from \"../container/auth/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm />\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostViewer = styled(Responsive)`\r\n    margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n    border-bottom: 1px solid ${palette.gray[2]};\r\n    padding-bottom: 3rem;\r\n    margin-bottom: 3rem;\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    font-size: 1.3125rem;\r\n    color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({post, error, loading, actionButtons}) => {\r\n    if (error) {\r\n        if (error.response && error.response.status === 404) {\r\n            return <StyledPostViewer> 포스트가 존재하지 않습니다!</StyledPostViewer>\r\n        }\r\n        return <StyledPostViewer>오류 발생!!</StyledPostViewer>\r\n    }\r\n\r\n    if (loading || !post) {\r\n        return null;\r\n    }\r\n\r\n    const {title, level, time, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostViewer>\r\n            <PostHead>\r\n                <h1>{title}</h1>\r\n                <SubInfo\r\n                    username={user.username}\r\n                    level={level}\r\n                    time={time}\r\n                    publishedDate={publishedDate}\r\n                    hasMarginTop\r\n                />\r\n                <Tags tags={tags}/>\r\n            </PostHead>\r\n            {actionButtons}\r\n            <PostContent\r\n                dangerouslySetInnerHTML={{__html: body}}\r\n            />\r\n        </StyledPostViewer>\r\n    )\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledAskModal = styled.div`\r\n    width: 320px;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.125);\r\n    h2 {\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    p {\r\n        margin-bottom: 3rem;\r\n    }\r\n    .buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2rem;\r\n    & + & {\r\n        margin-left: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst AskModal = (\r\n    {\r\n        visible,\r\n        title,\r\n        description,\r\n        confirmText = '확인',\r\n        cancelText = '취소',\r\n        onConfirm,\r\n        onCancel,\r\n    }\r\n) => {\r\n    if (!visible) return null;\r\n    return (\r\n        <Fullscreen>\r\n            <StyledAskModal>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className={\"buttons\"}>\r\n                    <StyledButton onClick={onCancel}>\r\n                        {cancelText}\r\n                    </StyledButton>\r\n                    <StyledButton onClick={onConfirm} cyan>\r\n                        {confirmText}\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledAskModal>\r\n        </Fullscreen>\r\n    )\r\n};\r\n\r\nexport default AskModal;","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={\"포스트 삭제\"}\r\n            description={\"포스트를 정말 삭제하실건가요?\"}\r\n            confirmText={\"삭제\"}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport AskRemoveModal from \"./AskRemoveModal\";\r\n\r\nconst StyledPostActionButtons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 2rem;\r\n    margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    color: ${palette.gray[6]};\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.cyan[7]};\r\n    }\r\n    & + & {\r\n        margin-left: 0.25rem;\r\n    }\r\n`;\r\n\r\nconst PostActionButtons = ({onEdit, onRemove}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const onRemoveClick = () => {\r\n        setModal(true);\r\n    };\r\n    const onConfirm = () => {\r\n        setModal(false);\r\n        onRemove();\r\n    };\r\n    const onCancel = () => {\r\n        setModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledPostActionButtons>\r\n                <ActionButton onClick={onEdit}>수정</ActionButton>\r\n                <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n            </StyledPostActionButtons>\r\n            <AskRemoveModal\r\n                visible={modal}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostActionButtons;\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {readPost, unloadPost} from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostActionButtons from \"../../components/post/PostActionButtons\";\r\nimport {setOriginalPost} from \"../../modules/write\";\r\nimport {removePost} from \"../../lib/api/posts\";\r\n\r\nconst PostViewerContainer = ({match, history}) => {\r\n    const {postId} = match.params;\r\n    const dispatch = useDispatch();\r\n    const {post, error, loading, user} = useSelector(({post, loading, user}) => ({\r\n        post: post.post,\r\n        error: post.error,\r\n        loading: loading['post/READ_POST'],\r\n        user: user.user,\r\n    }));\r\n    const ownPost = (user && user._id) === (post && post.user._id);\r\n\r\n    // 처음 마운트될 때 포스트 읽기 API 요청\r\n    useEffect(() => {\r\n        dispatch(readPost(postId));\r\n        // 언마운트될 때 리덕스에서 포스트 데이터 지우기\r\n        return () => {\r\n            dispatch(unloadPost());\r\n        }\r\n    }, [dispatch, postId]);\r\n\r\n    const onEdit = () => {\r\n        dispatch(setOriginalPost(post));\r\n        history.push('/write');\r\n    };\r\n\r\n    const onRemove = async () => {\r\n        try {\r\n            await removePost(postId);\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PostViewer\r\n            post={post}\r\n            error={error}\r\n            loading={loading}\r\n            actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove}/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostViewerContainer from \"../container/post/PostViewerContainer\";\r\n\r\nconst PostPage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <PostViewerContainer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostPage;","import React, {useRef, useEffect, useCallback} from \"react\";\r\nimport Quill from \"quill\";\r\nimport \"quill/dist/quill.bubble.css\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\n\r\nconst StyledEditor = styled(Responsive)`\r\n    padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n    font-size: 3rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[4]};\r\n    margin-bottom: 2rem;\r\n    width: 100%;\r\n`;\r\n\r\nconst LevelTimeBlock = styled.div`\r\n    p {\r\n        margin: 0;\r\n        margin-bottom: 0.5rem;\r\n        font-size: 1.25rem;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n    /* 에디터 최소 크기 지정 및 padding 제거 */\r\n    .qu-editor {\r\n        padding: 0;\r\n        min-height: 320px;\r\n        font-size: 1.125rem;\r\n        line-height: 1.5;\r\n    }\r\n    .ql-editor.ql-blank:before {\r\n        left: 0px;\r\n    }\r\n`;\r\n\r\nconst Editor = ({title, body, level, time, onChangeField}) => {\r\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n    const quillIstance = useRef(null); // Quill 인스턴스를 설정\r\n    const mounted = useRef(false); // 기록을 수정하는 경우 컴포넌트가 마운트 되었는지 확인하는 변수\r\n\r\n    useEffect(() => {\r\n        quillIstance.current = new Quill(quillElement.current, {\r\n            theme: 'bubble',\r\n            placeholder: '내용을 작성하세요!',\r\n            modules: {\r\n                // https://quilljs.com/docs/modules/toolbar/ 참고하기\r\n                toolbar: [\r\n                    [{header: '1'}, {header: '2'}],\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    [{list: 'ordered'}, {list: 'bullet'}],\r\n                    ['blockquote', 'code-block', 'link', 'image'],\r\n                ],\r\n            },\r\n        });\r\n\r\n        // quill에 text-change 이벤트 핸들러 등록\r\n        // 참고: https://quilljs.com/docs/api/#event\r\n        const quill = quillIstance.current;\r\n        quill.on('text-change', (delta, oldDelta, source) => {\r\n            if (source === 'user') {\r\n                onChangeField({key: 'body', value: quill.root.innerHTML});\r\n            }\r\n        })\r\n    }, [onChangeField]);\r\n\r\n    // 컴포넌트가 처음 마운트 될 때 body 값을 입력한다.\r\n    useEffect(() => {\r\n        if (mounted.current) return;\r\n        mounted.current = true;\r\n        quillIstance.current.root.innerHTML = body;\r\n    }, [body]);\r\n\r\n    const onChangeTitle = useCallback(e => {\r\n       onChangeField({key: 'title', value: e.target.value});\r\n    }, [onChangeField]);\r\n\r\n    return (\r\n        <StyledEditor>\r\n            <TitleInput\r\n                value={title}\r\n                onChange={onChangeTitle}\r\n                placeholder={\"제목을 입력하세요!\"}\r\n            />\r\n            <LevelTimeBlock>\r\n                <p>\r\n                    난이도: {level}\r\n                </p>\r\n                <p>\r\n                    클리어 타임: {time}\r\n                </p>\r\n            </LevelTimeBlock>\r\n            <QuillWrapper>\r\n                <div ref={quillElement}/>\r\n            </QuillWrapper>\r\n        </StyledEditor>\r\n    )\r\n};\r\n\r\nexport default React.memo(Editor);\r\n","import React, {useEffect, useCallback} from \"react\";\r\nimport {useSelector, useDispatch, shallowEqual} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Editor from \"../../components/write/Editor\";\r\nimport {initialize, changeField} from \"../../modules/write\";\r\n\r\nconst EditorContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {user, title, body, level, time} = useSelector(({user, write, game}) => ({\r\n        user: user.user,\r\n        title: write.title,\r\n        body: write.body,\r\n        level: game.level ? game.level : write.originalLevel,\r\n        time: game.time ? game.time : write.originalTime,\r\n    }), shallowEqual);\r\n    const onChangeField = useCallback(payload => dispatch(changeField(payload)),\r\n        [dispatch]);\r\n\r\n    // 페이지를 떠날 때 데이터 초기화\r\n    useEffect(() => {\r\n        if (user === null || time === null) {\r\n            alert('올바른 접근이 아닙니다!!!');\r\n            history.push('/');\r\n        }\r\n        return () => {\r\n            dispatch(initialize());\r\n        }\r\n    }, [dispatch, user, time, history]);\r\n\r\n    return (\r\n        <Editor\r\n            title={title}\r\n            body={body}\r\n            level={level}\r\n            time={time}\r\n            onChangeField={onChangeField}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTagBox = styled.div`\r\n    width: 100%;\r\n    border-top: 1px solid ${palette.gray[2]};\r\n    padding-top: 2rem;\r\n    \r\n    h4 {\r\n        color: ${palette.gray[8]};\r\n        margin-top: 0;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 256px;\r\n    border: 1px solid ${palette.gray[9]};\r\n    input, button {\r\n        outline: none;\r\n        border: none;\r\n        font-size: 1rem;\r\n    }\r\n    \r\n    input {\r\n        padding: 0.5rem;\r\n        flex: 1;\r\n        min-width: 0;\r\n    }\r\n    \r\n    button {\r\n        cursor: pointer;\r\n        padding: 0 1rem;\r\n        border: none;\r\n        background: ${palette.gray[8]};\r\n        color: white;\r\n        font-weight: bold;\r\n        &:hover {\r\n            background: ${palette.gray[6]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n    margin-right: 0.5rem;\r\n    color: ${palette.gray[6]};\r\n    cursor: pointer;\r\n    $:hover {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst StyledTagList = styled.div`\r\n    display: flex;\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({tag, onRemove}) =>\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>);\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n    <StyledTagList>\r\n        {tags.map(tag => (\r\n            <TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n        ))}\r\n    </StyledTagList>\r\n));\r\n\r\nconst TagBox = ({tags, onChangeTags}) => {\r\n    const [input, setInput] = useState('');\r\n    const [localTags, setLocalTags] = useState([]);\r\n\r\n    const insertTag = useCallback(tag => {\r\n        if (!tag || localTags.includes(tag)) return;\r\n        const newTags = [...localTags, tag];\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onRemove = useCallback(tag => {\r\n        const newTags = localTags.filter(t => t !== tag);\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onChange = useCallback(e => {\r\n        setInput(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        insertTag(input.trim());\r\n        setInput('');\r\n    }, [input, insertTag]);\r\n\r\n    useEffect(() => {\r\n        setLocalTags(tags);\r\n    }, [tags]);\r\n\r\n    return (\r\n        <StyledTagBox>\r\n            <h4>태그</h4>\r\n            <TagForm onSubmit={onSubmit}>\r\n                <input\r\n                    value={input}\r\n                    onChange={onChange}\r\n                    placeholder={\"태그를 입력하세요\"}\r\n                />\r\n                <button type={\"submit\"}>추가</button>\r\n            </TagForm>\r\n            <TagList tags={localTags} onRemove={onRemove}/>\r\n        </StyledTagBox>\r\n    );\r\n};\r\n\r\nexport default React.memo(TagBox);\r\n","import React, {useCallback} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport TagBox from \"../../components/write/TagBox\";\r\nimport {changeField} from \"../../modules/write\";\r\n\r\nconst TagBoxContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const tags = useSelector(state => state.write.tags);\r\n\r\n    const onChangeTags = useCallback(newTags => {\r\n        dispatch(changeField({\r\n                key: 'tags',\r\n                value: newTags,\r\n            }),\r\n        );\r\n    }, [dispatch]);\r\n\r\n    return <TagBox onChangeTags={onChangeTags} tags={tags}/>;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledWriteActionButtons = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    button + button {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\n// TagBox에서 사용하는 버튼과 같은 높이로 설정한 후 서로간의 여백 지정\r\nconst StyledButton = styled(Button)`\r\n    height: 2.125rem;\r\n    & + & {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst WriteActionButtons = ({onCancel, onPublished, isEdit}) => {\r\n    return (\r\n        <StyledWriteActionButtons>\r\n            <StyledButton cyan onClick={onPublished}>\r\n                포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n            <StyledButton onClick={onCancel}>\r\n                취소\r\n            </StyledButton>\r\n        </StyledWriteActionButtons>\r\n    )\r\n};\r\n\r\nexport default React.memo(WriteActionButtons);\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport {useSelector, useDispatch, shallowEqual} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {writePost, updatePost} from \"../../modules/write\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButton\";\r\n\r\nconst WriteActionButtonsContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {title, body, tags, post, postError, originalPostId, level, time} = useSelector(({write, game}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n        tags: write.tags,\r\n        post: write.post,\r\n        postError: write.postError,\r\n        originalPostId: write.originalPostId,\r\n        level: game.level,\r\n        time: game.time,\r\n    }), shallowEqual);\r\n\r\n    const onPublish = useCallback(() => {\r\n        if (originalPostId) {\r\n            dispatch(\r\n                updatePost(\r\n                    {\r\n                        id: originalPostId,\r\n                        title,\r\n                        body,\r\n                        tags,\r\n                    }\r\n                )\r\n            );\r\n            return;\r\n        }\r\n        dispatch(\r\n            writePost({\r\n                title,\r\n                level,\r\n                time,\r\n                body,\r\n                tags\r\n            }),\r\n        );\r\n    }, [dispatch, originalPostId, title, level, time, body, tags]);\r\n\r\n    const onCancel = useCallback(() => {\r\n        history.goBack();\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            const {_id, user} = post;\r\n            history.push(`/@${user.username}/${_id}`);\r\n        }\r\n\r\n        if (postError) {\r\n            console.log(postError);\r\n        }\r\n    }, [history, post, postError]);\r\n\r\n    return (\r\n        <WriteActionButtons\r\n            onPublished={onPublish}\r\n            onCancel={onCancel}\r\n            isEdit={!!originalPostId}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from \"react\";\r\nimport Responsive from \"../components/common/Responsive\";\r\nimport EditorContainer from \"../container/write/EditorContainer\";\r\nimport TagBoxContainer from \"../container/write/TagBoxContainer\";\r\nimport WriteActionButtonsContainer from \"../container/write/WriteActionButtonsContainer\";\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <Responsive>\r\n            <EditorContainer/>\r\n            <TagBoxContainer/>\r\n            <WriteActionButtonsContainer/>\r\n        </Responsive>\r\n    )\r\n};\r\n\r\nexport default WritePage;","import React from \"react\";\r\nimport \"./Game.scss\"\r\n\r\nconst Game = ({content}) => {\r\n\r\n    return (\r\n        <div id={\"game-root\"}>\r\n            {content}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default React.memo(Game);\r\n","import React from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport \"./GameStart.scss\"\r\n\r\nconst GameStart = ({onStart, onLevelChange}) => {\r\n\r\n    return (\r\n        <div id={\"start-root\"}>\r\n            <div id={\"start-select-div\"}>\r\n                <label>\r\n                    <h3>게임 난이도</h3>\r\n                </label>\r\n                <select\r\n                    name={\"level\"}\r\n                    onChange={onLevelChange}\r\n                >\r\n                    <option value={\"쉬움\"}>쉬움</option>\r\n                    <option value={\"보통\"}>보통</option>\r\n                    <option value={\"어려움\"}>어려움</option>\r\n                </select>\r\n            </div>\r\n            <div id={\"start-btn-div\"}>\r\n                <Button onClick={onStart}>시작</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(GameStart);\r\n","import React, {useRef, useCallback} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setLevel, startGame} from \"../../modules/game\";\r\nimport GameStart from \"../../components/game/GameStart\";\r\n\r\nconst GameStartContainer = () => {\r\n    const levelSelect = useRef('쉬움');\r\n    const dispatch = useDispatch();\r\n\r\n    // 시작 버튼을 누르면 게임 데이터 생성\r\n    const onStart = useCallback(()  => {\r\n        let mineNum, size, width = 0;\r\n        let ground = [];\r\n\r\n        switch (levelSelect.current) {\r\n            case '쉬움':\r\n                mineNum = 10;\r\n                size = 80;\r\n                width = 10;\r\n                break;\r\n            case '보통':\r\n                mineNum = 40;\r\n                size = 252;\r\n                width = 18;\r\n                break;\r\n            case '어려움':\r\n                mineNum = 90;\r\n                size = 480;\r\n                width = 24;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            ground.push({id: i, val: 0, isOpen: false, flagSet: false, isHighlight: false,});\r\n        }\r\n\r\n        for (let i = 0; i < mineNum; i++) {\r\n            let idx = Math.floor(Math.random() * size);\r\n            let range = [\r\n                -width - 1,\r\n                -width,\r\n                -width + 1,\r\n                -1,\r\n                1,\r\n                width - 1,\r\n                width,\r\n                width + 1\r\n            ];\r\n\r\n            if (ground[idx].val === 'X') {\r\n                i--;\r\n                continue;\r\n            }\r\n\r\n            ground[idx].val = 'X';\r\n\r\n            for (let i = 0; i < 8; i++) {\r\n                let nearBlock = idx + range[i];\r\n\r\n                if (nearBlock > -1 && nearBlock < size &&\r\n                    ground[nearBlock].val !== 'X' &&\r\n                    !((idx % width === 0 && nearBlock % width === width - 1) ||\r\n                        (idx % width === width - 1 && nearBlock % width === 0))) {\r\n\r\n                    ground[nearBlock].val++;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(\r\n            startGame({\r\n                ground,\r\n                size,\r\n                width,\r\n                mineNum,\r\n            })\r\n        );\r\n    }, [dispatch]);\r\n\r\n    // 난이도 변경시 스토어에 저장\r\n    const onLevelChange = useCallback(e=> {\r\n        levelSelect.current = e.target.value;\r\n        dispatch(setLevel(e.target.value))\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <GameStart\r\n            onStart={onStart}\r\n            onLevelChange={onLevelChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(GameStartContainer);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport \"./GameBlock.scss\"\r\n\r\nconst GameBlock = ({space, width, onBlockOpen, onMouseDownAction, onMouseUpAction}) => {\r\n    return (\r\n        <button\r\n            id={space.id}\r\n            className={classNames(\r\n                'block',\r\n                space.isOpen ? 'open-block val-' + space.val : 'closed-block',\r\n                space.isHighlight && 'highlight',\r\n                width === 18 ? 'normal' : width === 24 && 'hard')}\r\n            onClick={() => onBlockOpen(space.id)}\r\n            onMouseDown={e => onMouseDownAction(e, space.id)}\r\n            onMouseUp={e => onMouseUpAction(e, space.id)}\r\n            onContextMenu={e => e.preventDefault()}\r\n            onAuxClick={e => e.preventDefault()}\r\n            onWheel={e => e.preventDefault()}\r\n        >\r\n            {space.isOpen ? space.val > 0 ? space.val : space.val === 'X' && <img src=\"images/mine.png\" alt=\"지뢰\"/> : space.flagSet && '✘'}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default GameBlock;\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {finishGame, openBlock, openNearBlock, setFlag, doChord, highlightOff} from \"../../modules/game\";\r\nimport GameBlock from \"../../components/game/GameBlock\";\r\n\r\nconst GameBlockContainer = ({isFinish, space, width}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    // 블록을 여는 이벤트\r\n    const onBlockOpen = useCallback(() => {\r\n        if (!(isFinish || space.isOpen)) {\r\n            if (space.val === 'X') {\r\n                dispatch(finishGame('Game Over...'));\r\n            } else if (space.val === 0) {\r\n               dispatch(openBlock(space.id));\r\n               dispatch(openNearBlock(space.id));\r\n            } else {\r\n                dispatch(openBlock(space.id));\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, space]);\r\n\r\n    // 지뢰 위치를 설정하거나 주변 블록을 하이라이트할 때 사용\r\n    const onMouseDownAction = useCallback(e => {\r\n        if (!(isFinish || space.isOpen) && e.button === 2) {\r\n            dispatch(setFlag(space.id));\r\n        } else if (!isFinish && space.isOpen && e.button === 1) {\r\n            dispatch(doChord(space.id));\r\n        }\r\n    }, [dispatch, isFinish, space]);\r\n\r\n    // 지뢰 위치를 설정하거나 주변 블록을 하이라이트할 때 사용\r\n    const onMouseUpAction = useCallback(e => {\r\n        if (!isFinish && space.isOpen && e.button === 1) {\r\n            dispatch(highlightOff(space.id));\r\n        }\r\n    }, [dispatch, isFinish, space]);\r\n\r\n    return (\r\n        <GameBlock\r\n            space={space}\r\n            width={width}\r\n            onBlockOpen={onBlockOpen}\r\n            onMouseDownAction={onMouseDownAction}\r\n            onMouseUpAction={onMouseUpAction}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(GameBlockContainer, (prevProps, nextProps) => {\r\n    return (\r\n        prevProps.space.isOpen === nextProps.space.isOpen &&\r\n        prevProps.space.flagSet === nextProps.space.flagSet &&\r\n        prevProps.space.isHighlight === nextProps.space.isHighlight\r\n    )\r\n});","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRestartModal = ({visible, finishText, description, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={finishText}\r\n            description={description}\r\n            confirmText={finishText}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRestartModal;\r\n","import React, {useState, useCallback} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledModal = styled.div`\r\n    width: 450px;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.125);\r\n    text-align: center;\r\n    h2 {\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    .tutorial_image {\r\n        margin-bottom: 1rem;\r\n        .disabled {\r\n            display: none;\r\n        }\r\n        div {\r\n            margin-bottom: 0.5rem;\r\n        }\r\n        button + button {\r\n            margin-left: 1rem;\r\n        }\r\n    }\r\n    .tutorial_button {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        margin: 0;\r\n    }\r\n    \r\n    @media (max-width: 750px) {\r\n        font-size: 0.8rem;\r\n        h2 {\r\n            font-size: 1.2rem;\r\n        }\r\n        width: 300px;\r\n        & img {\r\n            width: 250px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TutorialModal = ({visible, onCancel}) => {\r\n    const [step, setStep] = useState(1);\r\n    const onPrevClick = useCallback(() => {\r\n        setStep(step => step -= 1);\r\n    }, []);\r\n    const onNextClick = useCallback(() => {\r\n        setStep(step => step += 1);\r\n    }, []);\r\n\r\n    if (!visible || localStorage.getItem('tutorial') === 'done') return null;\r\n    return (\r\n        <Fullscreen>\r\n            <StyledModal>\r\n                <h2>조작 방법</h2>\r\n                <div className={\"tutorial_image\"}>\r\n                    <div className={classNames(step !== 1 && \"disabled\")}>\r\n                        <p>좌클릭을 하시면 블록이 열립니다!</p>\r\n                        <img src=\"images/left_click.gif\" alt=\"좌클릭 이미지\"/>\r\n                    </div>\r\n                    <div className={classNames(step !== 2 && \"disabled\")}>\r\n                        <p>우클릭을 하시면 지뢰 위치를 지정합니다!</p>\r\n                        <img src=\"images/right_click.gif\" alt=\"우클릭 이미지\"/>\r\n                    </div>\r\n                    <div className={classNames(step !== 3 && \"disabled\")}>\r\n                        <p>\r\n                            휠버튼을 클릭하시면 주위의 블록을 하이라이트합니다!\r\n                        </p>\r\n                        <img src=\"images/wheel_click_highlight.gif\" alt=\"휠클릭 이미지\"/>\r\n                    </div>\r\n                    <div className={classNames(step !== 4 && \"disabled\")}>\r\n                        <p>\r\n                            휠버튼은 남은 블록을 한번에 열 수 있습니다!\r\n                        </p>\r\n                        <img src=\"images/wheel_click_open.gif\" alt=\"휠클릭 이미지\"/>\r\n                    </div>\r\n                    <div className={classNames(step !== 5 && \"disabled\")}>\r\n                        <p>\r\n                            블록을 한번에 열 때 지뢰가 있으면 게임이 끝납니다!\r\n                        </p>\r\n                        <img src=\"images/wheel_click_open_mine.gif\" alt=\"휠클릭 이미지\"/>\r\n                    </div>\r\n                    <Button\r\n                        disabled={step === 1}\r\n                        onClick={onPrevClick}\r\n                    >\r\n                        이전\r\n                    </Button>\r\n                    <Button\r\n                        disabled={step === 5}\r\n                        onClick={onNextClick}\r\n                    >\r\n                        다음\r\n                    </Button>\r\n                </div>\r\n                <div className={\"tutorial_button\"}>\r\n                    <Button onClick={onCancel}>\r\n                        창 닫기\r\n                    </Button>\r\n                </div>\r\n            </StyledModal>\r\n        </Fullscreen>\r\n    )\r\n};\r\n\r\nexport default React.memo(TutorialModal);","import React, {useCallback, useState} from \"react\";\r\nimport classNames from \"classnames\";\r\nimport GameBlockContainer from \"../../container/game/GameBlockContainer\";\r\nimport AskRestartModal from \"./AskRestartModal\";\r\nimport TutorialModal from \"./TutorialModal\";\r\nimport Button from \"../common/Button\";\r\nimport \"./GameBoard.scss\"\r\n\r\nconst GameBoard = ({isFinish, isClear, ground, width, mineNum, onRestart, onClear}) => {\r\n    const [clearModal, setClearModal] = useState(false);\r\n    const [restartModal, setRestartModal] = useState(false);\r\n    const [tutorialModal, setTutorialModal] = useState(true);\r\n\r\n    const onTutorialClose = useCallback(() => {\r\n        localStorage.setItem('tutorial', 'done'); // localStorage에 tutorial 완료 데이터 추가\r\n        setTutorialModal(false);\r\n    }, []);\r\n\r\n    const onRestartClick = useCallback(() => {\r\n        setRestartModal(true);\r\n    }, []);\r\n\r\n    const onRestartCancel = useCallback(() => {\r\n        setRestartModal(false);\r\n    }, []);\r\n\r\n    const onClearClick = useCallback(() => {\r\n        setClearModal(true);\r\n    }, []);\r\n\r\n    const onClearCancel = useCallback(() => {\r\n        setClearModal(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div id={\"board-root\"}>\r\n            <div id={\"board-minNum-div\"}>\r\n                <h2>{isClear ? isClear : '지뢰 개수 : ' + mineNum + '개'}</h2>\r\n            </div>\r\n            <div className={classNames('board', width === 18 ? 'normal' : width === 24 && 'hard')}>\r\n                {ground.map(space => (\r\n                        <GameBlockContainer\r\n                            key={space.id}\r\n                            isFinish={isFinish}\r\n                            space={space}\r\n                            width={width}\r\n                        />\r\n                    ))}\r\n            </div>\r\n            <TutorialModal\r\n                visible={tutorialModal}\r\n                onCancel={onTutorialClose}\r\n            />\r\n            {isFinish\r\n            &&\r\n            <div className={classNames('board-restart')}>\r\n                <Button onClick={onRestartClick}>\r\n                    다시 시작\r\n                </Button>\r\n                <AskRestartModal\r\n                    visible={restartModal}\r\n                    finishText={'다시 시작'}\r\n                    description={'게임을 다시 시작하실 건가요?'}\r\n                    onConfirm={onRestart}\r\n                    onCancel={onRestartCancel}\r\n                />\r\n                {isClear === 'Game Clear!!!' && (\r\n                    <>\r\n                        <Button onClick={onClearClick} marginTop={'1rem'}>\r\n                            기록 저장하기\r\n                        </Button>\r\n                        <AskRestartModal\r\n                            visible={clearModal}\r\n                            finishText={'기록 저장'}\r\n                            description={'기록을 저장하실 건가요?'}\r\n                            onConfirm={onClear}\r\n                            onCancel={onClearCancel}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default React.memo(GameBoard, (prevProps, nextProps) => {\r\n    return prevProps.ground === nextProps.ground\r\n});","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {initializeGame, increaseOpenBlockNum, finishGame} from \"../../modules/game\";\r\nimport GameBoard from \"../../components/game/GameBoard\";\r\n\r\nconst GameBoardContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isStart,\r\n        isClear,\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        width,\r\n        mineNum,\r\n        openBlockNum,\r\n    } = useSelector(({game}) => ({\r\n        isStart: game.isStart,\r\n        isClear: game.isClear,\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        width: game.width,\r\n        mineNum: game.mineNum,\r\n        openBlockNum: game.openBlockNum,\r\n    }), shallowEqual);\r\n\r\n    // 재시작 버튼을 누르면 게임 초기화\r\n    const onRestart = useCallback(() => {\r\n        dispatch(initializeGame());\r\n    }, [dispatch]);\r\n\r\n    // 게임을 클리어했을 때 기록 저장 페이지로 이동\r\n    const onClear = useCallback(() => {\r\n        history.push('/write');\r\n    }, [history]);\r\n\r\n    // 열린 블록의 수가 증가하면 액션 실행\r\n    useEffect(() => {\r\n        const openBlock = ground.filter(space => space.isOpen === true);\r\n        if (openBlock.length !== openBlockNum) {\r\n            dispatch(increaseOpenBlockNum(openBlock.length));\r\n        }\r\n    }, [dispatch, ground, openBlockNum]);\r\n\r\n    // 게임 클리어 조건을 달성하면 액션 실행\r\n    useEffect(() => {\r\n        if (mineNum === size - openBlockNum && isStart && !isFinish) {\r\n            dispatch(finishGame('Game Clear!!!'));\r\n        }\r\n    }, [dispatch, isStart, isFinish, size, mineNum, openBlockNum]);\r\n\r\n    return (\r\n        <GameBoard\r\n            isFinish={isFinish}\r\n            isClear={isClear}\r\n            ground={ground}\r\n            width={width}\r\n            mineNum={mineNum}\r\n            openBlockNum={openBlockNum}\r\n            onRestart={onRestart}\r\n            onClear={onClear}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(GameBoardContainer);\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector, shallowEqual} from \"react-redux\";\r\nimport {initializeGame} from \"../../modules/game\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Game from \"../../components/game/Game\";\r\nimport GameStartContainer from \"../../container/game/GameStartContainer\";\r\nimport GameBoardContainer from \"../../container/game/GameBoardContainer\";\r\n\r\nconst GameContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {isStart, user} = useSelector(({game, user}) => ({\r\n        isStart: game.isStart,\r\n        user: user.user,\r\n    }), shallowEqual);\r\n\r\n    // 로그인한 유저인지 확인\r\n    useEffect(() => {\r\n        if (user === null) {\r\n            alert('로그인을 해주세요!!!');\r\n            history.push('/');\r\n        }\r\n        dispatch(initializeGame());\r\n    }, [dispatch, user, history]);\r\n\r\n    return (\r\n        <Game\r\n            content={isStart ? <GameBoardContainer/> : <GameStartContainer/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(GameContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport GameContainer from \"../container/game/GameContainer\";\r\n\r\nconst GamePage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <GameContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GamePage;","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport PostListPage from \"./pages/PostListPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\nimport WritePage from \"./pages/WritePage\";\r\nimport GamePage from \"./pages/GamePage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Route component={PostListPage} path={[\"/@:username\", \"/\"]} exact/>\r\n            <Route component={RegisterPage} path={\"/register\"}/>\r\n            <Route component={LoginPage} path={\"/login\"}/>\r\n            <Route component={PostPage} path={\"/@:username/:postId\"}/>\r\n            <Route component={WritePage} path={\"/write\"}/>\r\n            <Route component={GamePage} path={\"/game\"}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer, {rootSaga} from \"./modules\";\r\nimport {tempSetUser, check} from \"./modules/user\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nfunction loadUser() {\r\n    try {\r\n        const user = localStorage.getItem('user');\r\n        if (!user) return;\r\n\r\n        store.dispatch(tempSetUser(user));\r\n        store.dispatch(check());\r\n    } catch (e) {\r\n        console.log('localStorage is not working...');\r\n    }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}