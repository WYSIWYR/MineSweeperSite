{"version":3,"sources":["components/common/Responsive.js","lib/styles/palette.js","components/common/Button.js","components/common/Header.js","lib/api/client.js","lib/api/auth.js","modules/loading.js","lib/createRequestSaga.js","modules/user.js","container/common/HeaderContainer.js","components/common/SubInfo.js","components/common/Tags.js","components/post/PostList.js","modules/posts.js","lib/api/posts.js","container/posts/PostListContainer.js","components/post/Pagination.js","container/posts/PaginationContainer.js","pages/PostListPage.js","components/auth/AuthTemplate.js","modules/auth.js","components/auth/AuthForm.js","container/auth/RegisterForm.js","pages/RegisterPage.js","container/auth/LoginForm.js","pages/LoginPage.js","modules/post.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","modules/write.js","container/post/PostViewerContainer.js","pages/PostPage.js","components/write/Editor.js","container/write/EditorContainer.js","components/write/TagBox.js","container/write/TagBoxContainer.js","components/write/WriteActionButton.js","container/write/WriteActionButtonsContainer.js","pages/WritePage.js","modules/game.js","lib/calcDate.js","components/game/Game.js","components/game/GameStart.js","container/game/GameStartContainer.js","components/game/GameBlock.js","container/game/GameBlockContainer.js","components/game/AskRestartModal.js","components/game/GameBoard.js","container/game/GameBoardContainer.js","container/game/GameContainer.js","pages/GamePage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["StyledResponsive","styled","div","Responsive","children","rest","palette","gray","cyan","buttonStyle","css","props","fullWidth","marginTop","block","StyledButton","button","StyledLink","Link","Button","to","StyledHeader","Wrapper","Spacer","UserInfo","Header","user","onLogout","className","username","onClick","client","axios","create","logout","post","startLoading","createAction","requestType","finishLoading","handleActions","state","action","payload","createRequsetActionType","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","takeLatest","checkError","HeaderContainer","useSelector","dispatch","useDispatch","StyledSubInfo","hasMarginTop","SubInfo","level","time","publishedDate","Date","toLocaleDateString","StyledTags","Tags","tags","map","tag","key","StyledPostList","GameStartButtonWrapper","StyledPostItem","PostItem","_id","title","body","PostList","posts","loading","showStartButton","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","page","listPostsSaga","queryString","qs","stringify","lastPage","parseInt","headers","withRouter","match","location","useEffect","params","parse","search","ignoreQueryPrefix","StyledPagination","PageNumber","buildLink","query","Pagination","disabled","undefined","PostListPage","StyledAuthTemplate","WhiteBox","AuthTemplate","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","value","initializeForm","register","password","login","registerSaga","loginSaga","initialState","passwordConfirm","auth","authError","produce","draft","StyledAuthForm","StyledInput","input","Footer","textMap","ErrorMessage","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","history","useState","setError","status","push","setItem","JSON","target","preventDefault","includes","RegisterPage","LoginPage","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","readPost","id","unloadPost","readPostSaga","StyledPostViewer","PostHead","PostContent","PostViewer","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","StyledAskModal","AskModal","visible","description","confirmText","cancelText","onConfirm","onCancel","AskRemoveModal","StyledPostActionButtons","ActionButton","PostActionButtons","onEdit","onRemove","modal","setModal","writeSaga","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","setOriginalPost","writePost","updatePost","writePostSaga","updatePostSaga","patch","postError","originalPostId","originalLevel","originalTime","postId","ownPost","a","delete","PostPage","StyledEditor","TitleInput","LevelTimeBlock","QuillWrapper","Editor","onChangeField","quillElement","useRef","quillIstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","write","game","useCallback","alert","StyledTagBox","TagForm","Tag","StyledTagList","TagItem","React","memo","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","newTags","filter","t","trim","TagBoxContainer","StyledWriteActionButtons","WriteActionButtons","onPublished","isEdit","WriteActionButton","goBack","WritePage","initializeGame","setLevel","startGame","ground","size","width","mineNum","openBlock","increaseOpenBlockNum","num","setFlag","highlightOn","highlightOff","finishGame","clear","isStart","isFinish","isClear","openBlockNum","nearBlock","startTime","flagSet","isOpen","isHighlight","space","val","endTime","output","sec","Math","floor","getTime","date","hour","min","calcDate","Game","content","GameStart","onStart","onSetLevel","GameStartContainer","i","idx","random","range","GameBlock","onBlockOpen","onMouseDownAction","onMouseUpAction","classNames","onMouseDown","onMouseUp","onContextMenu","onAuxClick","onWheel","src","alt","stringId","storeNearBlock","slice","visited","Array","fill","queue","zeroBlock","length","shift","localNearBlock","nearCloseBlock","nearFlag","pop","AskRestartModal","finishText","GameBoard","onRestart","onClear","clearModal","setClearModal","restartModal","setRestartModal","divWidth","Board","BoardRestart","GamePage","App","component","path","exact","Boolean","window","hostname","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.03aee964.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledResponsive = styled.div`\r\n    padding: 0 1rem;\r\n    width: 1024px;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    \r\n    @media(max-width: 1024px) {\r\n        width: 768px;\r\n    }\r\n    \r\n    @media(max-width: 768px) {\r\n        width: 100%;\r\n    }    \r\n`;\r\n\r\nconst Responsive = ({children, ...rest}) => {\r\n    // props를 사용할 수 있도록 ...rest를 사용하여 StyledResponsive에게 전달\r\n    return <StyledResponsive {...rest}>{children}</StyledResponsive>\r\n};\r\n\r\nexport default Responsive;\r\n","const palette = {\r\n    gray: [\r\n        '#f8f9fa',\r\n        '#f1f3f5',\r\n        '#e9ecef',\r\n        '#dee2e6',\r\n        '#ced4da',\r\n        '#adb5bd',\r\n        '#868e96',\r\n        '#495057',\r\n        '#343a40',\r\n        '#212529',\r\n    ],\r\n    cyan: [\r\n        '#e3fafc',\r\n        '#c5f6fa',\r\n        '#99e9f2',\r\n        '#66d9e8',\r\n        '#3bc9db',\r\n        '#22b8cf',\r\n        '#15aabf',\r\n        '#1098ad',\r\n        '#0c8599',\r\n        '#0b7285',\r\n    ],\r\n};\r\n\r\nexport default palette;","import React from \"react\";\r\nimport styled, {css} from 'styled-components';\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst buttonStyle = css`\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    padding: 0.25rem 1rem;\r\n    color: white;\r\n    outline: none;\r\n    cursor: pointer;\r\n    \r\n    background: ${palette.gray[8]};\r\n    &:hover {\r\n        background: ${palette.gray[6]};\r\n    }\r\n    ${props =>\r\n    props.fullWidth &&\r\n    css`\r\n            padding-top: 0.75rem;\r\n            padding-bottom: 0.75rem;\r\n            width: 100%;\r\n            font-size: 1.125rem;\r\n        `\r\n    }\r\n    ${props =>\r\n    props.cyan &&\r\n    css`\r\n            background: ${palette.cyan[5]};\r\n            &:hover {\r\n                background: ${palette.cyan[4]};\r\n            }\r\n        `\r\n    }\r\n    ${props =>\r\n    props.marginTop &&\r\n    css`\r\n            margin-top: ${props.marginTop};\r\n        `\r\n    }\r\n    ${props => \r\n    props.block &&\r\n    css`\r\n        display: block;\r\n        `\r\n    }\r\n    &:disabled {\r\n        background: ${palette.gray[3]};\r\n        color: ${palette.gray[5]};\r\n        cursor: not-allowed;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n    return props.to ? (\r\n        <StyledLink {...props} cyan={props.cyan ? 1 : 0}/>\r\n    ) : (\r\n        <StyledButton {...props}/>\r\n    )\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Responsive from \"./Responsive\";\r\nimport Button from \"./Button\";\r\n\r\nconst StyledHeader = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    background: white;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\r\n`;\r\n\r\n// Responsive 컴포넌트에 스타일을 추가해서 새로운 컴포넌트 생성\r\nconst Wrapper = styled(Responsive)`\r\n    height: 4rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .logo {\r\n        font-size: 1.125rem;\r\n        font-weight: 800;\r\n        letter-spacing: 2px;\r\n    }\r\n    .right {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\n// Header가 fixed이기 때문에 콘텐츠를 4rem 아래에 나타나도록 해 주는 컴포넌트\r\nconst Spacer = styled.div`\r\n    height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    font-weight: 800;\r\n    margin-right: 1rem;\r\n`;\r\n\r\nconst Header = ({user, onLogout}) => {\r\n    return (\r\n        <>\r\n            <StyledHeader>\r\n                <Wrapper>\r\n                    <Link to={\"/\"} className={\"logo\"}>\r\n                        MineSweeper\r\n                    </Link>\r\n                    {user ? (\r\n                        <div className={\"right\"}>\r\n                            <UserInfo>{user.username}</UserInfo>\r\n                            <Button onClick={onLogout}>로그아웃</Button>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={\"right\"}>\r\n                            <Button to={\"/login\"}>로그인</Button>\r\n                        </div>\r\n                    )}\r\n                </Wrapper>\r\n            </StyledHeader>\r\n            <Spacer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from \"./client\";\r\n\r\n// 로그인 api 요청\r\nexport const login = ({username, password}) =>\r\n    client.post('/api/auth/login', {username, password});\r\n\r\n// 회원가입 api 요청\r\nexport const register = ({username, password}) =>\r\n    client.post('/api/auth/register', {username, password});\r\n\r\n// 로그인 확인 api 요청\r\nexport const check = () =>\r\n    client.get('/api/auth/check');\r\n\r\n// 로그아웃\r\nexport const logout = () =>\r\n    client.post('/api/auth/logout');\r\n","import {createAction, handleActions} from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\n// 요청을 위한 액션 타입(requestType)을 payload로 설정함\r\n\r\nexport const startLoading = createAction(\r\n    START_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n    FINISH_LOADING,\r\n    requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nexport default handleActions(\r\n    {\r\n        [START_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: true,\r\n        }),\r\n        [FINISH_LOADING]: (state, action) => ({\r\n            ...state,\r\n            [action.payload]: false,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import {call, put} from 'redux-saga/effects';\r\nimport {startLoading, finishLoading} from \"../modules/loading\";\r\n\r\nexport const createRequsetActionType = type => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return function* (action) {\r\n        yield put(startLoading(type));\r\n        try {\r\n            const response = yield call(request, action.payload);\r\n            yield put({\r\n                type: SUCCESS,\r\n                payload: response.data,\r\n                meta: response,\r\n            });\r\n        } catch (e) {\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: e,\r\n                error: true,\r\n            });\r\n        }\r\n        yield put(finishLoading(type));\r\n    };\r\n}","import {createAction, handleActions} from 'redux-actions';\r\nimport {takeLatest, call} from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequsetActionType('user/CHECK');\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n    try {\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n        yield call(authAPI.logout); // logout api 호출\r\n        localStorage.removeItem('user'); // localStorage에서 user를 제거\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n    user: null,\r\n    checkError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [TEMP_SET_USER]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_SUCCESS]: (state, {payload: user}) => ({\r\n            ...state,\r\n            user,\r\n        }),\r\n        [CHECK_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            checkError: error,\r\n        }),\r\n        [LOGOUT]: state => ({\r\n           ...state,\r\n           user: null,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Header from \"../../components/common/Header\";\r\nimport {logout} from \"../../modules/user\";\r\n\r\nconst HeaderContainer = () => {\r\n    const {user} = useSelector(({user}) => ({user: user.user}));\r\n    const dispatch = useDispatch();\r\n    const onLogout = () => {\r\n        dispatch(logout());\r\n    };\r\n    return <Header user={user} onLogout={onLogout}/>\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from \"react\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledSubInfo = styled.div`\r\n    ${props =>\r\n        props.hasMarginTop &&\r\n        css`\r\n            margin-top: 1rem;\r\n        `\r\n    }\r\n    color: ${palette.gray[6]};\r\n    \r\n    span + span:before {\r\n        color: ${palette.gray[5]};\r\n        padding: 0 0.25rem;\r\n        content: '\\\\B7'; /* 가운뎃점 문자 */\r\n    }\r\n`;\r\n\r\nconst SubInfo = ({username, level, time, publishedDate, hasMarginTop}) => {\r\n    return (\r\n        <StyledSubInfo hasMarginTop={hasMarginTop}>\r\n            <span>\r\n                <b>\r\n                    <Link to={`/@${username}`}>{username}</Link>\r\n                </b>\r\n            </span>\r\n            <span>난이도: {level}</span>\r\n            <span>클리어 타임: {time}</span>\r\n            <span>플레이 날짜: {new Date(publishedDate).toLocaleDateString()}</span>\r\n        </StyledSubInfo>\r\n    )\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTags = styled.div`\r\n    margin-top: 0.5rem;\r\n    .tag{\r\n        display: inline-block;\r\n        color: ${palette.gray[7]};\r\n        text-decoration: none;\r\n        margin-right: 0.5rem;\r\n        &:hover {\r\n            color: ${palette.cyan[6]}\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tags = ({tags}) => {\r\n    return (\r\n        <StyledTags>\r\n            {tags.map(tag => (\r\n                <Link className={\"tag\"} to={`/?tag=${tag}`} key={tag}>\r\n                    #{tag}\r\n                </Link>\r\n            ))}\r\n        </StyledTags>\r\n    )\r\n};\r\n\r\nexport default Tags;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostList = styled(Responsive)`\r\n    margin-top: 3rem\r\n`;\r\n\r\nconst GameStartButtonWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst StyledPostItem = styled.div`\r\n    padding: 3rem 0;\r\n    &:first-child {\r\n        padding-top: 0;\r\n    }\r\n    & + & {\r\n        border-top: 1px solid ${palette.gray[2]};\r\n    }\r\n    \r\n    h2 {\r\n        font-size: 2rem;\r\n        margin-bottom: 0;\r\n        margin-top: 0;\r\n        &:hover {\r\n            color: ${palette.gray[6]};\r\n        }\r\n    }\r\n    p {\r\n       margin-top: 1.5rem;\r\n    }\r\n`;\r\n\r\nconst PostItem = ({post}) => {\r\n    const {_id, title, level, time, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostItem>\r\n            <h2>\r\n                <Link to={`/@${user.username}/${_id}`}>\r\n                    {title}\r\n                </Link>\r\n            </h2>\r\n            <SubInfo\r\n                username={user.username}\r\n                level={level}\r\n                time={time}\r\n                publishedDate={publishedDate}\r\n            />\r\n            <Tags\r\n                tags={tags}\r\n            />\r\n            <p>{body}</p>\r\n        </StyledPostItem>\r\n    )\r\n};\r\n\r\nconst PostList = ({posts, error, loading, showStartButton}) => {\r\n    if (error) {\r\n        return <StyledPostList>에러가 발생했습니다!</StyledPostList>\r\n    }\r\n\r\n    return (\r\n        <StyledPostList>\r\n            <GameStartButtonWrapper>\r\n                {showStartButton && (\r\n                    <Button to={\"/game\"} cyan>\r\n                        게임 시작!\r\n                    </Button>\r\n                )}\r\n            </GameStartButtonWrapper>\r\n            <div>\r\n                {!loading && posts && (\r\n                    posts.map(post => (\r\n                        <PostItem post={post} key={post._id}/>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </StyledPostList>\r\n    )\r\n};\r\n\r\nexport default PostList;\r\n\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    LIST_POSTS,\r\n    LIST_POSTS_SUCCESS,\r\n    LIST_POSTS_FAILURE,\r\n] = createRequsetActionType('posts/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(LIST_POSTS, ({page, username, tag}) => ({\r\n        page,\r\n        username,\r\n        tag,\r\n    }),\r\n);\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postAPI.listPosts);\r\n\r\nexport function* postsSaga() {\r\n    yield takeLatest(LIST_POSTS, listPostsSaga);\r\n}\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error: null,\r\n    lastPage: 1,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts, meta: response}) => ({\r\n            ...state,\r\n            posts,\r\n            lastPage: parseInt(response.headers['last-page'], 10)\r\n        }),\r\n        [LIST_POSTS_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            error: error,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n","import qs from 'qs';\r\nimport client from './client';\r\n\r\nexport const listPosts = ({page, username, tag}) => {\r\n    const queryString = qs.stringify({\r\n        page,\r\n        username,\r\n        tag,\r\n    });\r\n\r\n    return client.get(`/api/posts${queryString}`);\r\n};\r\n\r\nexport const readPost = id => client.get(`/api/posts/${id}`);\r\n\r\nexport const writePost = ({title, level, time, body, tags}) =>\r\n    client.post('/api/posts', {title, level, time, body, tags});\r\n\r\n\r\nexport const updatePost = ({id, title, body, tags}) =>\r\n    client.patch(`/api/posts/${id}`, {\r\n        title,\r\n        body,\r\n        tags,\r\n    });\r\n\r\nexport const removePost = id => client.delete(`/api/posts/${id}`);\r\n","import React, {useEffect} from \"react\";\r\nimport qs from 'qs';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PostList from \"../../components/post/PostList\";\r\nimport {listPosts} from \"../../modules/posts\";\r\n\r\nconst PostListContainer = ({match, location}) => {\r\n    const dispatch = useDispatch();\r\n    const {posts, error, loading, user} = useSelector(\r\n        ({posts, loading, user}) => ({\r\n            posts: posts.posts,\r\n            error: posts.error,\r\n            loading: loading['posts/LIST_POSTS'],\r\n            user: user.user,\r\n        }),\r\n    );\r\n\r\n    useEffect(() => {\r\n        const {username} = match.params;\r\n        const {page, tag} = qs.parse(location.search, {\r\n            ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({page, username, tag}));\r\n    }, [dispatch, match.params, location.search]);\r\n\r\n    return (\r\n        <PostList\r\n            posts={posts}\r\n            error={error}\r\n            loading={loading}\r\n            showStartButton={user}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport qs from 'qs';\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledPagination = styled.div`\r\n    width: 320px;\r\n    margin: 0 auto;\r\n    display: felx;\r\n    justify-content: space-between;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nconst PageNumber = styled.div``;\r\n\r\nconst buildLink = ({page, username, tag}) => {\r\n    const query = qs.stringify({page, tag});\r\n    return username ? `/@${username}?${query}` : `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({page, lastPage, username, tag}) => {\r\n    return (\r\n        <StyledPagination>\r\n            <Button\r\n                disabled={page === 1}\r\n                to={\r\n                    page === 1 ? undefined : buildLink({username, tag, page: page - 1})\r\n                }\r\n            >\r\n                이전\r\n            </Button>\r\n            <PageNumber>{page}</PageNumber>\r\n            <Button\r\n                disabled={lastPage === 0 || page === lastPage}\r\n                to={\r\n                    lastPage === 0\r\n                    ? undefined\r\n                    : page === lastPage\r\n                        ? undefined\r\n                        : buildLink({username, tag, page: page + 1})\r\n                }\r\n            >\r\n                다음\r\n            </Button>\r\n        </StyledPagination>\r\n    )\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport Pagination from \"../../components/post/Pagination\";\r\n\r\nconst PaginationContainer = ({match, location}) => {\r\n    const {posts, loading, lastPage} = useSelector(({posts, loading}) => ({\r\n        posts: posts.posts,\r\n        loading: loading['posts/LIST_POSTS'],\r\n        lastPage: posts.lastPage,\r\n    }));\r\n\r\n    if (!posts || loading) return null;\r\n\r\n    const {username} = match.params;\r\n    const {page = 1, tag} = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true,\r\n    });\r\n\r\n    return (\r\n        <Pagination\r\n            page={page}\r\n            lastPage={lastPage}\r\n            username={username}\r\n            tag={tag}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostListContainer from \"../container/posts/PostListContainer\";\r\nimport PaginationContainer from \"../container/posts/PaginationContainer\";\r\n\r\nconst PostListPage = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer/>\r\n            <PostListContainer/>\r\n            <PaginationContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostListPage;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// 회원가입 및 로그인 페이지의 레이아웃 컴포넌트\r\nconst StyledAuthTemplate = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: ${palette.gray[2]};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n    .logo-area{\r\n        display: block;\r\n        padding-bottom: 2rem;\r\n        text-align: center;\r\n        font-weight: bold;\r\n        letter-spacing: 2px;\r\n    }\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n    padding: 2rem;\r\n    width: 360px;\r\n    background: white;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({children}) => {\r\n    return (\r\n        <StyledAuthTemplate>\r\n            <WhiteBox>\r\n                <div className={\"logo-area\"}>\r\n                    <Link to={\"/\"}>MineSweeper</Link>\r\n                </div>\r\n                {children}\r\n            </WhiteBox>\r\n        </StyledAuthTemplate>\r\n    )\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import {createAction, handleActions} from 'redux-actions';\r\nimport produce from \"immer\";\r\nimport {takeLatest} from 'redux-saga/effects';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequsetActionType('auth/REGISTER');\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequsetActionType('auth/LOGIN');\r\n\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    ({form, key, value}) => ({\r\n        form,   // register, login\r\n        key,    // username, password, passwordConfirm\r\n        value,  // 입력된 값\r\n    })\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\r\nexport const register = createAction(REGISTER, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\nexport const login = createAction(LOGIN, ({username, password}) => ({\r\n    username,\r\n    password\r\n}));\r\n\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\n\r\nexport function* authSaga() {\r\n    yield takeLatest(REGISTER, registerSaga);\r\n    yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\nconst initialState = {\r\n    register: {\r\n        username: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n    },\r\n    login: {\r\n        username: '',\r\n        password: '',\r\n    },\r\n    auth: null,\r\n    authError: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) =>\r\n            produce(state, draft => {\r\n                draft[form][key] = value;\r\n            }),\r\n        [INITIALIZE_FORM]: (state, {payload: form}) => ({\r\n            ...state,\r\n            [form]: initialState[form],\r\n            authError: null,\r\n        }),\r\n        [REGISTER]: (state) => ({\r\n            ...state,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n        [LOGIN]: (state) => ({\r\n            ...state,\r\n            auth: null,\r\n            authError: null,\r\n        }),\r\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => ({\r\n            ...state,\r\n            auth,\r\n        }),\r\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Button from \"../common/Button\";\r\n\r\n// 회원가입/로그인 폼 컴포넌트\r\nconst StyledAuthForm = styled.div`\r\n    h3 {\r\n        margin: 0;\r\n        color: ${palette.gray[8]};\r\n        margin-bottom: 1rem;\r\n    }\r\n`;\r\n\r\n// 스타일링된 input\r\nconst StyledInput = styled.input`\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[5]};\r\n    padding-bottom: 0.5rem;\r\n    outline: none;\r\n    width: 100%;\r\n    &:focus {\r\n        color: $oc-teal-7;\r\n        border-bottom: 1px solid ${palette.gray[7]};\r\n    }\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\n// 회원가입/로그인 링크\r\nconst Footer = styled.div`\r\n    margin-top: 2rem;\r\n    text-align: right;\r\n    a {\r\n        color: ${palette.gray[6]};\r\n        text-decoration: underline;\r\n        $:hover {\r\n        color: ${palette.gray[9]};\r\n    }\r\n`;\r\n\r\nconst textMap = {\r\n    login: '로그인',\r\n    register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\r\n    const text = textMap[type];\r\n\r\n    return (\r\n        <StyledAuthForm>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <StyledInput\r\n                    autoComplete={\"username\"}\r\n                    name={\"username\"}\r\n                    placeholder={\"아이디\"}\r\n                    onChange={onChange}\r\n                    value={form.username}\r\n                />\r\n                <StyledInput\r\n                    autoComplete={\"new-password\"}\r\n                    name={\"password\"}\r\n                    placeholder={\"비밀번호\"}\r\n                    type={\"password\"}\r\n                    onChange={onChange}\r\n                    value={form.password}\r\n                />\r\n                {type === 'register' && (\r\n                    <StyledInput\r\n                        autoComplete={\"new-password\"}\r\n                        name={\"passwordConfirm\"}\r\n                        placeholder={\"비밀번호 확인\"}\r\n                        type={\"password\"}\r\n                        onChange={onChange}\r\n                        value={form.passwordConfirm}\r\n                    />\r\n                )}\r\n\r\n                {error && <ErrorMessage>{error}</ErrorMessage>}\r\n                <Button cyan fullWidth marginTop={\"1rem\"}>\r\n                    {text}\r\n                </Button>\r\n            </form>\r\n            <Footer>\r\n                {type === 'login' ? (\r\n                    <Link to={\"/register\"}>회원가입</Link>\r\n                ) : (\r\n                    <Link to={\"/login\"}>로그인</Link>\r\n                )}\r\n            </Footer>\r\n        </StyledAuthForm>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeField, initializeForm, register} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst RegisterForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.register,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'register',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    };\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password, passwordConfirm} = form;\r\n        if ([username, password, passwordConfirm].includes('')) {\r\n            setError('빈 칸을 모두 입력하세요');\r\n            return;\r\n        }\r\n        if (password !== passwordConfirm) {\r\n            setError('비밀번호가 일치하지 않습니다!');\r\n            dispatch(changeField({form: 'register', key: 'password', value: ''}));\r\n            dispatch(changeField({form: 'register', key: 'passwordConfirm', value: ''}));\r\n            return;\r\n        }\r\n        dispatch(register({username, password}));\r\n    };\r\n\r\n    // 컴포넌트가 처음 렌더링될 떼 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(initializeForm('register'));\r\n        return () => {\r\n            dispatch(initializeForm('register'));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // 회원가입 성공/실패 처리\r\n    useEffect(() => {\r\n        if (authError) {\r\n            if (authError.response.status === 409) {\r\n                setError('이미 존재하는 계정입니다');\r\n                return;\r\n            }\r\n            setError('회원가입 실패');\r\n            return;\r\n        }\r\n        if (auth) {\r\n            console.log('성공');\r\n            console.log(auth);\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"register\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport RegisterForm from \"../container/auth/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm/>\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeField, initializeForm, login} from \"../../modules/auth\";\r\nimport AuthForm from \"../../components/auth/AuthForm\";\r\nimport {check} from \"../../modules/user\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst LoginForm = ({history}) => {\r\n    const [error, setError] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\r\n        form: auth.login,\r\n        auth: auth.auth,\r\n        authError: auth.authError,\r\n        user: user.user,\r\n    }));\r\n\r\n    // 값 변경 이벤트 핸들러\r\n    const onChange = e => {\r\n        const {name, value} = e.target;\r\n        dispatch(\r\n            changeField({\r\n                form: 'login',\r\n                key: name,\r\n                value\r\n            })\r\n        )\r\n    };\r\n\r\n    // 폼 등록 이벤트 핸들러\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const {username, password} = form;\r\n        dispatch(login({username, password}));\r\n    };\r\n\r\n    // 컴포넌트가 처음 렌더링될 떼 form을 초기화함\r\n    useEffect(() => {\r\n        dispatch(initializeForm('login'));\r\n        return () => {\r\n            console.log('leave');\r\n            dispatch(initializeForm('login'));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    // 로그인 성공/실패 처리\r\n    useEffect(() => {\r\n        if (authError) {\r\n            setError('로그인 실패');\r\n            return;\r\n        }\r\n        if (auth) {\r\n            dispatch(check());\r\n        }\r\n    }, [auth, authError, dispatch]);\r\n\r\n    // user 값이 잘 설정되었는지 확인\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n            try {\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            } catch (e) {\r\n                console.log('localStorage is not working');\r\n            }\r\n        }\r\n\r\n    }, [history, user]);\r\n\r\n    return (\r\n        <AuthForm\r\n            type={\"login\"}\r\n            form={form}\r\n            error={error}\r\n            onChange={onChange}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from \"react\";\r\nimport AuthTemplate from \"../components/auth/AuthTemplate\";\r\nimport LoginForm from \"../container/auth/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm />\r\n        </AuthTemplate>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import {createAction, handleActions} from 'redux-actions';\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst [\r\n    READ_POST,\r\n    READ_POST_SUCCESS,\r\n    READ_POST_FAILURE\r\n] = createRequsetActionType('post/POST_READ');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 지우기\r\n\r\nexport const readPost = createAction(READ_POST, id => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\n\r\nexport function* postSaga() {\r\n    yield takeLatest(READ_POST, readPostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    post: null,\r\n    error: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [READ_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n            error: null,\r\n        }),\r\n        [READ_POST_FAILURE]: (state, {payload: error}) => ({\r\n            ...state,\r\n            post: null,\r\n            error: error,\r\n        }),\r\n        [UNLOAD_POST]: () => initialState,\r\n    },\r\n    initialState,\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\nimport SubInfo from \"../common/SubInfo\";\r\nimport Tags from '../common/Tags';\r\n\r\nconst StyledPostViewer = styled(Responsive)`\r\n    margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n    border-bottom: 1px solid ${palette.gray[2]};\r\n    padding-bottom: 3rem;\r\n    margin-bottom: 3rem;\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n    font-size: 1.3125rem;\r\n    color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({post, error, loading, actionButtons}) => {\r\n    if (error) {\r\n        if (error.response && error.response.status === 404) {\r\n            return <StyledPostViewer> 포스트가 존재하지 않습니다!</StyledPostViewer>\r\n        }\r\n        return <StyledPostViewer>오류 발생!!</StyledPostViewer>\r\n    }\r\n\r\n    if (loading || !post) {\r\n        return null;\r\n    }\r\n\r\n    const {title, level, time, body, user, publishedDate, tags} = post;\r\n\r\n    return (\r\n        <StyledPostViewer>\r\n            <PostHead>\r\n                <h1>{title}</h1>\r\n                <SubInfo\r\n                    username={user.username}\r\n                    level={level}\r\n                    time={time}\r\n                    publishedDate={publishedDate}\r\n                    hasMarginTop\r\n                />\r\n                <Tags tags={tags}/>\r\n            </PostHead>\r\n            {actionButtons}\r\n            <PostContent\r\n                dangerouslySetInnerHTML={{__html: body}}\r\n            />\r\n        </StyledPostViewer>\r\n    )\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledAskModal = styled.div`\r\n    width: 320px;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.125);\r\n    h2 {\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    p {\r\n        margin-bottom: 3rem;\r\n    }\r\n    .buttons {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2rem;\r\n    & + & {\r\n        margin-left: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst AskModal = (\r\n    {\r\n        visible,\r\n        title,\r\n        description,\r\n        confirmText = '확인',\r\n        cancelText = '취소',\r\n        onConfirm,\r\n        onCancel,\r\n    }\r\n) => {\r\n    if (!visible) return null;\r\n    return (\r\n        <Fullscreen>\r\n            <StyledAskModal>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className={\"buttons\"}>\r\n                    <StyledButton onClick={onCancel}>\r\n                        {cancelText}\r\n                    </StyledButton>\r\n                    <StyledButton onClick={onConfirm} cyan>\r\n                        {confirmText}\r\n                    </StyledButton>\r\n                </div>\r\n            </StyledAskModal>\r\n        </Fullscreen>\r\n    )\r\n};\r\n\r\nexport default AskModal;","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={\"포스트 삭제\"}\r\n            description={\"포스트를 정말 삭제하실건가요?\"}\r\n            confirmText={\"삭제\"}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport AskRemoveModal from \"./AskRemoveModal\";\r\n\r\nconst StyledPostActionButtons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 2rem;\r\n    margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    color: ${palette.gray[6]};\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 0.875rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.cyan[7]};\r\n    }\r\n    & + & {\r\n        margin-left: 0.25rem;\r\n    }\r\n`;\r\n\r\nconst PostActionButtons = ({onEdit, onRemove}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const onRemoveClick = () => {\r\n        setModal(true);\r\n    };\r\n    const onConfirm = () => {\r\n        setModal(false);\r\n        onRemove();\r\n    };\r\n    const onCancel = () => {\r\n        setModal(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledPostActionButtons>\r\n                <ActionButton onClick={onEdit}>수정</ActionButton>\r\n                <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n            </StyledPostActionButtons>\r\n            <AskRemoveModal\r\n                visible={modal}\r\n                onConfirm={onConfirm}\r\n                onCancel={onCancel}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostActionButtons;\r\n","import {createAction, handleActions} from \"redux-actions\";\r\nimport createRequestSaga, {createRequsetActionType} from \"../lib/createRequestSaga\";\r\nimport * as postAPI from '../lib/api/posts';\r\nimport {takeLatest} from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST'; // 포스트 수정시 포스트 내용 세팅\r\nconst [\r\n    WRITE_POST,\r\n    WRITE_POST_SUCCESS,\r\n    WRITE_POST_FAILURE\r\n] = createRequsetActionType('write/WRITE_POST');\r\nconst [\r\n    UPDATE_POST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPDATE_POST_FAILURE\r\n] = createRequsetActionType('write/UPDATE_POST');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({key, value}) => ({\r\n    key,\r\n    value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\r\nexport const writePost = createAction(WRITE_POST,\r\n    ({title, level, time, body, tags}) => ({\r\n        title,\r\n        level,\r\n        time,\r\n        body,\r\n        tags,\r\n    }));\r\nexport const updatePost = createAction(UPDATE_POST,\r\n    ({id, title, body, tags}) => ({\r\n        id,\r\n        title,\r\n        body,\r\n        tags,\r\n    }));\r\n\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\n\r\nexport function* writeSaga() {\r\n    yield takeLatest(WRITE_POST, writePostSaga);\r\n    yield takeLatest(UPDATE_POST, updatePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n    title: '',\r\n    body: '',\r\n    tags: [],\r\n    post: null,\r\n    postError: null,\r\n    originalPostId: null,\r\n    originalLevel: null,\r\n    originalTime: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE]: state => initialState,\r\n        [CHANGE_FIELD]: (state, {payload: {key, value}}) => ({\r\n            ...state,\r\n            [key]: value,\r\n        }),\r\n        [WRITE_POST]: state => ({\r\n            ...state,\r\n            post: null,\r\n            postError: null,\r\n        }),\r\n        [WRITE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n        }),\r\n        [WRITE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            postError: postError,\r\n        }),\r\n        [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\r\n            ...state,\r\n            title: post.title,\r\n            body: post.body,\r\n            tags: post.tags,\r\n            originalPostId: post._id,\r\n            originalLevel: post.level,\r\n            originalTime: post.time,\r\n        }),\r\n        [UPDATE_POST_SUCCESS]: (state, {payload: post}) => ({\r\n            ...state,\r\n            post: post,\r\n            postError: null,\r\n        }),\r\n        [UPDATE_POST_FAILURE]: (state, {payload: postError}) => ({\r\n            ...state,\r\n            post: null,\r\n            postError: postError,\r\n        }),\r\n    },\r\n    initialState\r\n);\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {readPost, unloadPost} from \"../../modules/post\";\r\nimport PostViewer from \"../../components/post/PostViewer\";\r\nimport PostActionButtons from \"../../components/post/PostActionButtons\";\r\nimport {setOriginalPost} from \"../../modules/write\";\r\nimport {removePost} from \"../../lib/api/posts\";\r\n\r\nconst PostViewerContainer = ({match, history}) => {\r\n    const {postId} = match.params;\r\n    const dispatch = useDispatch();\r\n    const {post, error, loading, user} = useSelector(({post, loading, user}) => ({\r\n        post: post.post,\r\n        error: post.error,\r\n        loading: loading['post/READ_POST'],\r\n        user: user.user,\r\n    }));\r\n    const ownPost = (user && user._id) === (post && post.user._id);\r\n\r\n    // 처음 마운트될 때 포스트 읽기 API 요청\r\n    useEffect(() => {\r\n        dispatch(readPost(postId));\r\n        // 언마운트될 때 리덕스에서 포스트 데이터 지우기\r\n        return () => {\r\n            dispatch(unloadPost());\r\n        }\r\n    }, [dispatch, postId]);\r\n\r\n    const onEdit = () => {\r\n        dispatch(setOriginalPost(post));\r\n        history.push('/write');\r\n    };\r\n\r\n    const onRemove = async () => {\r\n        try {\r\n            await removePost(postId);\r\n            history.push('/');\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PostViewer\r\n            post={post}\r\n            error={error}\r\n            loading={loading}\r\n            actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove}/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from \"react\";\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport PostViewerContainer from \"../container/post/PostViewerContainer\";\r\n\r\nconst PostPage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <PostViewerContainer/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PostPage;","import React, {useRef, useEffect} from \"react\";\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\nimport Responsive from \"../common/Responsive\";\r\n\r\nconst StyledEditor = styled(Responsive)`\r\n    padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n    font-size: 3rem;\r\n    outline: none;\r\n    padding-bottom: 0.5rem;\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.gray[4]};\r\n    margin-bottom: 2rem;\r\n    width: 100%;\r\n`;\r\n\r\nconst LevelTimeBlock = styled.div`\r\n    p {\r\n        margin: 0;\r\n        margin-bottom: 0.5rem;\r\n        font-size: 1.25rem;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n    /* 에디터 최소 크기 지정 및 padding 제거 */\r\n    .qu-editor {\r\n        padding: 0;\r\n        min-height: 320px;\r\n        font-size: 1.125rem;\r\n        line-height: 1.5;\r\n    }\r\n    .ql-editor.ql-blank:before {\r\n        left: 0px;\r\n    }\r\n`;\r\n\r\nconst Editor = ({title, body, level, time, onChangeField}) => {\r\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\r\n    const quillIstance = useRef(null); // Quill 인스턴스를 설정\r\n\r\n    useEffect(() => {\r\n        quillIstance.current = new Quill(quillElement.current, {\r\n            theme: 'bubble',\r\n            placeholder: '내용을 작성하세요!',\r\n            modules: {\r\n                // https://quilljs.com/docs/modules/toolbar/ 참고하기\r\n                toolbar: [\r\n                    [{header: '1'}, {header: '2'}],\r\n                    ['bold', 'italic', 'underline', 'strike'],\r\n                    [{list: 'ordered'}, {list: 'bullet'}],\r\n                    ['blockquote', 'code-block', 'link', 'image'],\r\n                ],\r\n            },\r\n        });\r\n\r\n        // quill에 text-change 이벤트 핸들러 등록\r\n        // 참고: https://quilljs.com/docs/api/#event\r\n        const quill = quillIstance.current;\r\n        quill.on('text-change', (delta, oldDelta, source) => {\r\n            if (source === 'user') {\r\n                onChangeField({key: 'body', value: quill.root.innerHTML});\r\n            }\r\n        })\r\n    }, [onChangeField]);\r\n\r\n    const mounted = useRef(false);\r\n    useEffect(() => {\r\n        if (mounted.current) return;\r\n        mounted.current = true;\r\n        quillIstance.current.root.innerHTML = body;\r\n    }, [body]);\r\n\r\n    const onChangeTitle = e => {\r\n       onChangeField({key: 'title', value: e.target.value});\r\n    };\r\n\r\n    return (\r\n        <StyledEditor>\r\n            <TitleInput\r\n                value={title}\r\n                onChange={onChangeTitle}\r\n                placeholder={\"제목을 입력하세요!\"}\r\n            />\r\n            <LevelTimeBlock>\r\n                <p>\r\n                    난이도: {level}\r\n                </p>\r\n                <p>\r\n                    클리어 타임: {time}\r\n                </p>\r\n            </LevelTimeBlock>\r\n            <QuillWrapper>\r\n                <div ref={quillElement}/>\r\n            </QuillWrapper>\r\n        </StyledEditor>\r\n    )\r\n};\r\n\r\nexport default Editor;\r\n","import React, {useEffect, useCallback} from \"react\";\r\nimport Editor from \"../../components/write/Editor\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {initialize, changeField} from \"../../modules/write\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst EditorContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {user, title, body, level, time} = useSelector(({user, write, game}) => ({\r\n        user: user.user,\r\n        title: write.title,\r\n        body: write.body,\r\n        level: game.level ? game.level : write.originalLevel,\r\n        time: game.time ? game.time: write.originalTime,\r\n    }));\r\n    const onChangeField = useCallback(payload => dispatch(changeField(payload)),\r\n        [dispatch]);\r\n\r\n    // 페이지를 떠날 때 데이터 초기화\r\n    useEffect(() => {\r\n        if (user === null || time === null) {\r\n            alert('올바른 접근이 아닙니다!!!');\r\n            history.push('/');\r\n        }\r\n        return () => {\r\n            dispatch(initialize());\r\n        }\r\n    }, [dispatch, user, time, history]);\r\n\r\n    return (\r\n        <Editor\r\n            title={title}\r\n            body={body}\r\n            level={level}\r\n            time={time}\r\n            onChangeField={onChangeField}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport palette from \"../../lib/styles/palette\";\r\n\r\nconst StyledTagBox = styled.div`\r\n    width: 100%;\r\n    border-top: 1px solid ${palette.gray[2]};\r\n    padding-top: 2rem;\r\n    \r\n    h4 {\r\n        color: ${palette.gray[8]};\r\n        margin-top: 0;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    width: 256px;\r\n    border: 1px solid ${palette.gray[9]};\r\n    input, button {\r\n        outline: none;\r\n        border: none;\r\n        font-size: 1rem;\r\n    }\r\n    \r\n    input {\r\n        padding: 0.5rem;\r\n        flex: 1;\r\n        min-width: 0;\r\n    }\r\n    \r\n    button {\r\n        cursor: pointer;\r\n        padding: 0 1rem;\r\n        border: none;\r\n        background: ${palette.gray[8]};\r\n        color: white;\r\n        font-weight: bold;\r\n        &:hover {\r\n            background: ${palette.gray[6]};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n    margin-right: 0.5rem;\r\n    color: ${palette.gray[6]};\r\n    cursor: pointer;\r\n    $:hover {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst StyledTagList = styled.div`\r\n    display: flex;\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagItem = React.memo(({tag, onRemove}) =>\r\n    <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>);\r\n\r\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n    <StyledTagList>\r\n        {tags.map(tag => (\r\n            <TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n        ))}\r\n    </StyledTagList>\r\n));\r\n\r\nconst TagBox = ({tags, onChangeTags}) => {\r\n    const [input, setInput] = useState('');\r\n    const [localTags, setLocalTags] = useState([]);\r\n\r\n    const insertTag = useCallback(tag => {\r\n        if (!tag || localTags.includes(tag)) return;\r\n        const newTags = [...localTags, tag];\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onRemove = useCallback(tag => {\r\n        const newTags = localTags.filter(t => t !== tag);\r\n        setLocalTags(newTags);\r\n        onChangeTags(newTags);\r\n    }, [localTags, onChangeTags]);\r\n\r\n    const onChange = useCallback(e => {\r\n        setInput(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        insertTag(input.trim());\r\n        setInput('');\r\n    }, [input, insertTag]);\r\n\r\n    useEffect(() => {\r\n        setLocalTags(tags);\r\n    }, [tags]);\r\n\r\n    return (\r\n        <StyledTagBox>\r\n            <h4>태그</h4>\r\n            <TagForm onSubmit={onSubmit}>\r\n                <input\r\n                    value={input}\r\n                    onChange={onChange}\r\n                    placeholder={\"태그를 입력하세요\"}\r\n                />\r\n                <button type={\"submit\"}>추가</button>\r\n            </TagForm>\r\n            <TagList tags={localTags} onRemove={onRemove}/>\r\n        </StyledTagBox>\r\n    );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport TagBox from \"../../components/write/TagBox\";\r\nimport {changeField} from \"../../modules/write\";\r\n\r\nconst TagBoxContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const tags = useSelector(state => state.write.tags);\r\n\r\n    const onChangeTags = newTags => {\r\n        dispatch(changeField({\r\n                key: 'tags',\r\n                value: newTags,\r\n            }),\r\n        );\r\n    };\r\n\r\n    return <TagBox onChangeTags={onChangeTags} tags={tags}/>;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../common/Button\";\r\n\r\nconst StyledWriteActionButtons = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    button + button {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\n// TagBox에서 사용하는 버튼과 같은 높이로 설정한 후 서로간의 여백 지정\r\nconst StyledButton = styled(Button)`\r\n    height: 2.125rem;\r\n    & + & {\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\n\r\nconst WriteActionButtons = ({onCancel, onPublished, isEdit}) => {\r\n    return (\r\n        <StyledWriteActionButtons>\r\n            <StyledButton cyan onClick={onPublished}>\r\n                포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n            <StyledButton onClick={onCancel}>\r\n                취소\r\n            </StyledButton>\r\n        </StyledWriteActionButtons>\r\n    )\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, {useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {writePost, updatePost} from \"../../modules/write\";\r\nimport WriteActionButtons from \"../../components/write/WriteActionButton\";\r\n\r\nconst WriteActionButtonsContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {title, body, tags, post, postError, originalPostId, level, time} = useSelector(({write, game}) => ({\r\n        title: write.title,\r\n        body: write.body,\r\n        tags: write.tags,\r\n        post: write.post,\r\n        postError: write.postError,\r\n        originalPostId: write.originalPostId,\r\n        level: game.level,\r\n        time: game.time,\r\n    }));\r\n\r\n    const onPublish = () => {\r\n        if (originalPostId) {\r\n            dispatch(\r\n                updatePost(\r\n                    {\r\n                        id: originalPostId,\r\n                        title,\r\n                        body,\r\n                        tags,\r\n                    }\r\n                )\r\n            );\r\n            return;\r\n        }\r\n        dispatch(\r\n            writePost({\r\n                title,\r\n                level,\r\n                time,\r\n                body,\r\n                tags\r\n            }),\r\n        );\r\n    };\r\n\r\n    const onCancel = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            const {_id, user} = post;\r\n            history.push(`/@${user.username}/${_id}`);\r\n        }\r\n\r\n        if (postError) {\r\n            console.log(postError);\r\n        }\r\n    }, [history, post, postError]);\r\n\r\n    return (\r\n        <WriteActionButtons\r\n            onPublished={onPublish}\r\n            onCancel={onCancel}\r\n            isEdit={!!originalPostId}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from \"react\";\r\nimport Responsive from \"../components/common/Responsive\";\r\nimport EditorContainer from \"../container/write/EditorContainer\";\r\nimport TagBoxContainer from \"../container/write/TagBoxContainer\";\r\nimport WriteActionButtonsContainer from \"../container/write/WriteActionButtonsContainer\";\r\n\r\nconst WritePage = () => {\r\n    return (\r\n        <Responsive>\r\n            <EditorContainer/>\r\n            <TagBoxContainer/>\r\n            <WriteActionButtonsContainer/>\r\n        </Responsive>\r\n    )\r\n};\r\n\r\nexport default WritePage;","import {createAction, handleActions} from \"redux-actions\";\r\nimport produce from \"immer\";\r\nimport calcDate from \"../lib/calcDate\";\r\n\r\nconst INITIALIZE_GAME = 'game/INITIALIZE';\r\nconst SET_LEVEL = 'game/SET_LEVEL';\r\nconst START_GAME = 'game/START_GAME';\r\nconst OPEN_BLOCK = 'game/OPEN_BLOCK';\r\nconst INCREASE_OPEN_BLOCK_NUM = 'game/INCREASE_OPEN_BLOCK_NUM';\r\nconst SET_FLAG = 'game/SET_FLAG';\r\nconst HIGHLIGHT_ON = 'game/HIGHLIGHT_ON';\r\nconst HIGHLIGHT_OFF = 'game/HIGHLIGHT_OFF';\r\nconst FINISH_GAME = 'game/FINISH_GAME';\r\n\r\nexport const initializeGame = createAction(INITIALIZE_GAME);\r\nexport const setLevel = createAction(SET_LEVEL, level => level);\r\nexport const startGame = createAction(START_GAME,\r\n    ({ground, size, width, mineNum}) => ({\r\n        ground,\r\n        size,\r\n        width,\r\n        mineNum,\r\n    }));\r\nexport const openBlock = createAction(OPEN_BLOCK, id => id);\r\nexport const increaseOpenBlockNum = createAction(INCREASE_OPEN_BLOCK_NUM, num => num);\r\nexport const setFlag = createAction(SET_FLAG, id => id);\r\nexport const highlightOn = createAction(HIGHLIGHT_ON, id => id);\r\nexport const highlightOff = createAction(HIGHLIGHT_OFF, id => id);\r\nexport const finishGame = createAction(FINISH_GAME, clear => clear);\r\n\r\nconst initialState = {\r\n    level: '쉬움',\r\n    isStart: false,\r\n    isFinish: false,\r\n    isClear: '',\r\n    ground: [],\r\n    size: 0,\r\n    width: 0,\r\n    mineNum: 0,\r\n    openBlockNum: 0,\r\n    nearBlock: [],\r\n    startTime: null,\r\n    time: null,\r\n};\r\n\r\nexport default handleActions(\r\n    {\r\n        [INITIALIZE_GAME]: state => initialState,\r\n        [SET_LEVEL]: (state, {payload: level}) => ({\r\n            ...state,\r\n            level: level\r\n        }),\r\n        [START_GAME]: (state, {payload: {ground, size, width, mineNum}}) => ({\r\n            ...state,\r\n            isStart: true,\r\n            ground: ground,\r\n            size: size,\r\n            width: width,\r\n            mineNum: mineNum,\r\n            nearBlock: [-width, -1, 1, width, -width - 1, -width + 1, width - 1, width + 1],\r\n            startTime: new Date(),\r\n        }),\r\n        [OPEN_BLOCK]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = false;\r\n                draft.ground[id].isOpen = true;\r\n            }),\r\n        [INCREASE_OPEN_BLOCK_NUM]: (state, {payload: num}) =>\r\n            produce(state, draft => {\r\n                draft.openBlockNum = num;\r\n            }),\r\n        [SET_FLAG]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].flagSet = !draft.ground[id].flagSet;\r\n            }),\r\n        [HIGHLIGHT_ON]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].isHighlight = !draft.ground[id].isHighlight;\r\n            }),\r\n        [HIGHLIGHT_OFF]: (state, {payload: id}) =>\r\n            produce(state, draft => {\r\n                draft.ground[id].isHighlight = !draft.ground[id].isHighlight;\r\n            }),\r\n        [FINISH_GAME]: (state, {payload: clear}) =>\r\n            produce(state, draft => {\r\n                draft.ground.map(space => space.val === 'X' ? space.isOpen = true : space);\r\n                draft.isFinish = true;\r\n                draft.isClear = clear;\r\n                draft.time = calcDate(draft.startTime, new Date());\r\n            }),\r\n    }, initialState\r\n);\r\n","export default function (startTime, endTime) {\r\n    if (startTime === undefined || endTime === undefined) return null;\r\n    let output = '';\r\n    let sec = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\r\n    let date = Math.floor(sec / 60 / 60 / 24);\r\n    if (date > 0) {\r\n        sec -= date * 60 * 60 * 24;\r\n        output += date + '일';\r\n    }\r\n\r\n    let hour = Math.floor(sec / 60 / 60);\r\n    if (hour > 0) {\r\n        sec -= hour * 60 * 60;\r\n        output += hour + '시';\r\n    }\r\n\r\n    let min = Math.floor(sec / 60);\r\n    if (min > 0) {\r\n        sec -= min * 60;\r\n        output += min + '분';\r\n    }\r\n\r\n    return output += sec + '초';\r\n}","import React from \"react\";\r\nimport './Game.scss'\r\n\r\nconst Game = ({content}) => {\r\n\r\n    return (\r\n        <div id={\"game-root\"}>\r\n            {content}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Game\r\n","import React from \"react\";\r\nimport Button from \"../common/Button\";\r\nimport './GameStart.scss'\r\n\r\nconst GameStart = ({onStart, onSetLevel}) => {\r\n\r\n    return (\r\n        <div id={\"start-root\"}>\r\n            <div id={\"start-select-div\"}>\r\n                <label>\r\n                    <h3>게임 난이도</h3>\r\n                </label>\r\n                <select\r\n                    name={\"level\"}\r\n                    id={\"level\"}\r\n                    onChange={onSetLevel}\r\n                >\r\n                    <option value={\"쉬움\"}>쉬움</option>\r\n                    <option value={\"보통\"}>보통</option>\r\n                    <option value={\"어려움\"}>어려움</option>\r\n                </select>\r\n            </div>\r\n            <div id={\"start-btn-div\"}>\r\n                <Button onClick={onStart}>시작</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameStart;\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setLevel, startGame} from \"../../modules/game\";\r\nimport GameStart from \"../../components/game/GameStart\";\r\n\r\nconst GameStartContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const {level} = useSelector(({game}) => ({\r\n        level: game.level,\r\n    }));\r\n\r\n    const onStart = useCallback(()  => {\r\n        let mineNum, size, width = 0;\r\n        let ground = [];\r\n\r\n        switch (level) {\r\n            case '쉬움':\r\n                mineNum = 10;\r\n                size = 80;\r\n                width = 10;\r\n                break;\r\n            case '보통':\r\n                mineNum = 40;\r\n                size = 252;\r\n                width = 18;\r\n                break;\r\n            case '어려움':\r\n                mineNum = 50;\r\n                size = 480;\r\n                width = 24;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            ground.push({id: i, val: 0, isOpen: false, flagSet: false, isHighlight: false,});\r\n        }\r\n\r\n        for (let i = 0; i < mineNum; i++) {\r\n            let idx = Math.floor(Math.random() * size);\r\n            let range = [\r\n                -width - 1,\r\n                -width,\r\n                -width + 1,\r\n                -1,\r\n                1,\r\n                width - 1,\r\n                width,\r\n                width + 1\r\n            ];\r\n\r\n            if (ground[idx].val === 'X') {\r\n                i--;\r\n                continue;\r\n            }\r\n\r\n            ground[idx].val = 'X';\r\n\r\n            for (let i = 0; i < 8; i++) {\r\n                let nearBlock = idx + range[i];\r\n\r\n                if (nearBlock > -1 && nearBlock < size &&\r\n                    ground[nearBlock].val !== 'X' &&\r\n                    !((idx % width === 0 && nearBlock % width === width - 1) ||\r\n                        (idx % width === width - 1 && nearBlock % width === 0))) {\r\n\r\n                    ground[nearBlock].val++;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(\r\n            startGame({\r\n                ground,\r\n                size,\r\n                width,\r\n                mineNum,\r\n            })\r\n        );\r\n    }, [dispatch, level]);\r\n\r\n    const onSetLevel = useCallback(e=> {\r\n        dispatch(setLevel(e.target.value))\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <GameStart\r\n            onStart={onStart}\r\n            onSetLevel={onSetLevel}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GameStartContainer;\r\n","import React from \"react\";\r\nimport classNames from 'classnames';\r\nimport './GameBlock.scss'\r\n\r\nconst GameBlock = ({space, onBlockOpen, onMouseDownAction, onMouseUpAction}) => {\r\n    return (\r\n        <button\r\n            id={space.id}\r\n            className={classNames('block', space.isOpen ? 'open-block val-' + space.val : 'closed-block', space.isHighlight && 'highlight')}\r\n            onClick={() => onBlockOpen(space.id)}\r\n            onMouseDown={e => onMouseDownAction(e, space.id)}\r\n            onMouseUp={e => onMouseUpAction(e, space.id)}\r\n            onContextMenu={e => e.preventDefault()}\r\n            onAuxClick={e => e.preventDefault()}\r\n            onWheel={e => e.preventDefault()}\r\n        >\r\n            {space.isOpen ? space.val > 0 ? space.val : space.val === 'X' && <img src=\"images/mine.png\" alt=\"지뢰\"/> : space.flagSet && '✘' }\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default GameBlock;\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {finishGame, openBlock, setFlag, highlightOn, highlightOff} from \"../../modules/game\";\r\nimport GameBlock from \"../../components/game/GameBlock\";\r\n\r\nconst GameBlockContainer = ({space}) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        width,\r\n        nearBlock,\r\n    } = useSelector(({game}) => ({\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        width: game.width,\r\n        nearBlock: game.nearBlock,\r\n    }));\r\n\r\n    const onBlockOpen = useCallback(stringId => {\r\n\r\n        const storeNearBlock = nearBlock.slice();\r\n        let id = parseInt(stringId);\r\n\r\n        if (!(isFinish || ground[id].isOpen)) {\r\n            if (ground[id].val === 'X') {\r\n                dispatch(finishGame('Game Over...'));\r\n            } else if (ground[id].val === 0) {\r\n                let visited = new Array(size).fill(false);\r\n                let queue = [id];\r\n                let zeroBlock = [id];\r\n\r\n                visited[id] = true;\r\n                dispatch(openBlock(id));\r\n\r\n                while (queue.length > 0) {\r\n                    let idx = queue.shift();\r\n\r\n                    for (let i = 0; i < 4; i++) {\r\n                        let localNearBlock = idx + storeNearBlock[i];\r\n\r\n                        if (localNearBlock > -1 && localNearBlock < size && !ground[localNearBlock].isOpen &&\r\n                            ground[localNearBlock].val === 0 && !visited[localNearBlock] &&\r\n                            !((idx % width === 0 && localNearBlock % width === width - 1) ||\r\n                                (idx % width === width - 1 && localNearBlock % width === 0))) {\r\n                            queue.push(localNearBlock);\r\n                            zeroBlock.push(localNearBlock);\r\n                            visited[localNearBlock] = true;\r\n                            dispatch(openBlock(localNearBlock));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                visited = new Array(size).fill(false);\r\n\r\n                while (zeroBlock.length > 0) {\r\n                    let idx = zeroBlock.shift();\r\n\r\n                    for (let i = 0; i < 8; i++) {\r\n                        let localNearBlock = idx + storeNearBlock[i];\r\n\r\n                        if (localNearBlock > -1 && localNearBlock < size &&\r\n                            !visited[localNearBlock] &&\r\n                            ground[localNearBlock].val > 0 &&\r\n                            !ground[localNearBlock].isOpen &&\r\n                            !((idx % width === 0 && localNearBlock % width === width - 1) ||\r\n                                (idx % width === width - 1 && localNearBlock % width === 0))) {\r\n                            visited[localNearBlock] = true;\r\n                            dispatch(openBlock(localNearBlock));\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                dispatch(openBlock(id));\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, size, width, nearBlock]);\r\n\r\n    const onMouseDownAction = useCallback((e, id) => {\r\n        if (!(isFinish || ground[id].isOpen) && e.button === 2) {\r\n            dispatch(setFlag(id));\r\n        } else if (!isFinish && ground[id].isOpen && e.button === 1) {\r\n            let storeNearBlock = nearBlock.slice();\r\n            let nearCloseBlock = [];\r\n            let nearFlag = [];\r\n            let localNearBlock = 0;\r\n            while (storeNearBlock.length > 0) {\r\n                localNearBlock = id + storeNearBlock.pop();\r\n                if (\r\n                    localNearBlock > -1 && localNearBlock < size &&\r\n                    !ground[localNearBlock].isOpen &&\r\n                    !((id % width === 0 && localNearBlock % width === width - 1) ||\r\n                        (id % width === width - 1 && localNearBlock % width === 0))\r\n                ) {\r\n                    if (ground[localNearBlock].flagSet) {\r\n                        nearFlag.push(localNearBlock);\r\n                    } else {\r\n                        nearCloseBlock.push(localNearBlock);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (nearFlag.length === ground[e.target.id].val) {\r\n                while (nearCloseBlock.length > 0) {\r\n                    const space = nearCloseBlock.pop();\r\n                    onBlockOpen(space);\r\n                }\r\n            } else {\r\n                while (nearCloseBlock.length > 0) {\r\n                    const space = nearCloseBlock.pop();\r\n                    dispatch(highlightOn(space));\r\n                }\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, size, width, nearBlock, onBlockOpen]);\r\n\r\n    const onMouseUpAction = useCallback((e, id) => {\r\n        if (!isFinish && ground[id].isOpen && e.button === 1) {\r\n            let storeNearBlock = nearBlock.slice();\r\n            let nearCloseBlock = [];\r\n            let localNearBlock = 0;\r\n            while (storeNearBlock.length > 0) {\r\n                localNearBlock = id + storeNearBlock.pop();\r\n\r\n                if (\r\n                    localNearBlock > -1 && localNearBlock < size &&\r\n                    !ground[localNearBlock].isOpen && !ground[localNearBlock].flagSet &&\r\n                    !((id % width === 0 && localNearBlock % width === width - 1) ||\r\n                        (id % width === width - 1 && localNearBlock % width === 0))\r\n                ) {\r\n                    nearCloseBlock.push(localNearBlock);\r\n                }\r\n            }\r\n\r\n            while (nearCloseBlock.length > 0) {\r\n                const space = nearCloseBlock.pop();\r\n                dispatch(highlightOff(space));\r\n            }\r\n        }\r\n    }, [dispatch, isFinish, ground, size, width, nearBlock]);\r\n\r\n    return (\r\n        <GameBlock\r\n            space={space}\r\n            onBlockOpen={onBlockOpen}\r\n            onMouseDownAction={onMouseDownAction}\r\n            onMouseUpAction={onMouseUpAction}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(GameBlockContainer);","import React from \"react\";\r\nimport AskModal from \"../common/AskModal\";\r\n\r\nconst AskRestartModal = ({visible, finishText, description, onConfirm, onCancel}) => {\r\n    return (\r\n        <AskModal\r\n            visible={visible}\r\n            title={finishText}\r\n            description={description}\r\n            confirmText={finishText}\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AskRestartModal;\r\n","import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport GameBlockContainer from \"../../container/game/GameBlockContainer\";\r\nimport AskRestartModal from \"./AskRestartModal\";\r\nimport Button from \"../common/Button\";\r\nimport './GameBoard.scss'\r\n\r\nconst GameBoard = ({onRestart, onClear}) => {\r\n    const [clearModal, setClearModal] = useState(false);\r\n    const [restartModal, setRestartModal] = useState(false);\r\n    const {\r\n        isFinish,\r\n        isClear,\r\n        ground,\r\n        width,\r\n        mineNum,\r\n    } = useSelector(({game}) => ({\r\n        isFinish: game.isFinish,\r\n        isClear: game.isClear,\r\n        ground: game.ground,\r\n        width: game.width,\r\n        mineNum: game.mineNum,\r\n    }));\r\n    const divWidth = width * 30;\r\n    const Board = styled.div`\r\n            display: inline-block;\r\n            width: ${divWidth}px;\r\n        `;\r\n    const BoardRestart = styled.div`\r\n        width: ${divWidth}px;\r\n    `;\r\n    const onRestartClick = () => {\r\n        setRestartModal(true);\r\n    };\r\n\r\n    const onRestartCancel = () => {\r\n        setRestartModal(false);\r\n    };\r\n\r\n    const onClearClick = () => {\r\n        setClearModal(true);\r\n    };\r\n\r\n    const onClearCancel = () => {\r\n        setClearModal(false);\r\n    };\r\n\r\n    return (\r\n        <div id={\"board-root\"}>\r\n            <div id={\"board-minNum-div\"}>\r\n                <h2>{isClear ? isClear : '지뢰 갯수 : ' + mineNum + '개'}</h2>\r\n            </div>\r\n            <Board>\r\n                {\r\n                    ground.map(space => {\r\n                        return <GameBlockContainer\r\n                            key={space.id}\r\n                            space={space}\r\n                        />\r\n                    })\r\n                }\r\n            </Board>\r\n            {isFinish\r\n            &&\r\n            <BoardRestart id={\"board-restart\"}>\r\n                <Button onClick={onRestartClick}>\r\n                    다시 시작\r\n                </Button>\r\n                <AskRestartModal\r\n                    visible={restartModal}\r\n                    finishText={'다시 시작'}\r\n                    description={'게임을 다시 시작하실 건가요?'}\r\n                    onConfirm={onRestart}\r\n                    onCancel={onRestartCancel}\r\n                />\r\n                {isClear === 'Game Clear!!!' && (\r\n                    <>\r\n                        <Button onClick={onClearClick} marginTop={'1rem'}>\r\n                            기록 저장하기\r\n                        </Button>\r\n                        <AskRestartModal\r\n                            visible={clearModal}\r\n                            finishText={'기록 저장'}\r\n                            description={'기록을 저장하실 건가요?'}\r\n                            onConfirm={onClear}\r\n                            onCancel={onClearCancel}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n            </BoardRestart>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GameBoard;","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeGame, increaseOpenBlockNum, finishGame} from \"../../modules/game\";\r\nimport GameBoard from \"../../components/game/GameBoard\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst GameBoardContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isStart,\r\n        isFinish,\r\n        ground,\r\n        size,\r\n        mineNum,\r\n        openBlockNum,\r\n    } = useSelector(({game}) => ({\r\n        isStart: game.isStart,\r\n        isFinish: game.isFinish,\r\n        ground: game.ground,\r\n        size: game.size,\r\n        mineNum: game.mineNum,\r\n        openBlockNum: game.openBlockNum,\r\n    }));\r\n\r\n    const onRestart = useCallback(() => {\r\n        dispatch(initializeGame());\r\n    }, [dispatch]);\r\n\r\n    const onClear = useCallback(() => {\r\n        history.push('/write');\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        const openBlock = ground.filter(space => space.isOpen === true);\r\n        if (openBlock.length !== openBlockNum) {\r\n            dispatch(increaseOpenBlockNum(openBlock.length));\r\n        }\r\n    }, [dispatch, ground, openBlockNum]);\r\n\r\n    useEffect(() => {\r\n        if (mineNum === size - openBlockNum && isStart && !isFinish) {\r\n            dispatch(finishGame('Game Clear!!!'));\r\n        }\r\n    }, [dispatch, isStart, isFinish, ground, size, mineNum, openBlockNum]);\r\n\r\n    return (\r\n        <GameBoard\r\n            onRestart={onRestart}\r\n            onClear={onClear}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(GameBoardContainer);\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeGame} from \"../../modules/game\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Game from \"../../components/game/Game\";\r\nimport GameStartContainer from \"../../container/game/GameStartContainer\";\r\nimport GameBoardContainer from \"../../container/game/GameBoardContainer\";\r\n\r\nconst GameContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {isStart, user} = useSelector(({game, user}) => ({\r\n        isStart: game.isStart,\r\n        user: user.user,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (user === null) {\r\n            alert('올바른 접근이 아닙니다!!!');\r\n            history.push('/');\r\n        }\r\n        dispatch(initializeGame())\r\n    }, [dispatch, user, history]);\r\n\r\n    return (\r\n        <Game\r\n            content={isStart ? <GameBoardContainer/> : <GameStartContainer/>}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withRouter(GameContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from \"../container/common/HeaderContainer\";\r\nimport GameContainer from \"../container/game/GameContainer\";\r\n\r\nconst GamePage = () => {\r\n    return (\r\n        <>\r\n            <HeaderContainer/>\r\n            <GameContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GamePage;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet-async';\r\nimport PostListPage from \"./pages/PostListPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport PostPage from \"./pages/PostPage\";\r\nimport WritePage from \"./pages/WritePage\";\r\nimport GamePage from \"./pages/GamePage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>MineSweeper</title>\r\n            </Helmet>\r\n            <Route component={PostListPage} path={[\"/@:username\", \"/\"]} exact/>\r\n            <Route component={RegisterPage} path={\"/register\"}/>\r\n            <Route component={LoginPage} path={\"/login\"}/>\r\n            <Route component={PostPage} path={\"/@:username/:postId\"}/>\r\n            <Route component={WritePage} path={\"/write\"}/>\r\n            <Route component={GamePage} path={\"/game\"}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {all} from 'redux-saga/effects';\r\nimport auth, {authSaga} from './auth'\r\nimport loading from \"./loading\";\r\nimport user, {userSaga} from \"./user\";\r\nimport write, {writeSaga} from \"./write\";\r\nimport post, {postSaga} from \"./post\";\r\nimport posts, {postsSaga} from \"./posts\";\r\nimport game from \"./game\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    loading,\r\n    user,\r\n    write,\r\n    post,\r\n    posts,\r\n    game,\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {HelmetProvider} from \"react-helmet-async\";\r\nimport rootReducer, {rootSaga} from './modules';\r\nimport { tempSetUser, check } from \"./modules/user\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nfunction loadUser() {\r\n    try {\r\n        const user = localStorage.getItem('user');\r\n        if (!user) return;\r\n\r\n        store.dispatch(tempSetUser(user));\r\n        store.dispatch(check());\r\n    } catch (e) {\r\n        console.log('localStorage is not working');\r\n    }\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <HelmetProvider>\r\n                <App/>\r\n            </HelmetProvider>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}